<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_KH-XkI1TEeS-muvgwqy9Mw" name="CatsAndMouses2">
    <eAnnotations xmi:id="_KIsJQI1TEeS-muvgwqy9Mw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_KIsJQY1TEeS-muvgwqy9Mw" source="codegen">
        <details xmi:id="_KIsJQo1TEeS-muvgwqy9Mw" key="codegenDirectory" value="/CatsAndMouses/src"/>
        <details xmi:id="_TIv0gI1TEeS-muvgwqy9Mw" key="AssociatedSourceCode" value="/CatsAndMouses/src/game/server/Collides.java;3719974134/1;/CatsAndMouses/src/game/server/CarType.java;4291535461/1;/CatsAndMouses/src/game/server/JSONable.java;3779781185/1;/CatsAndMouses/src/game/server/Direction.java;3521396402/1;/CatsAndMouses/src/game/server/ConnectionListener.java;1304314155/1;/CatsAndMouses/src/game/server/Connection.java;3260199919/1;/CatsAndMouses/src/game/server/GameObject.java;2349374660/1;/CatsAndMouses/src/game/server/Mine.java;1438046736/1;/CatsAndMouses/src/game/server/RaceState.java;3583379518/1;/CatsAndMouses/src/game/server/Missile.java;2127604045/1;/CatsAndMouses/src/game/server/RaceCharacter.java;1569238785/1;/CatsAndMouses/src/game/server/Protocol.java;1648994320/1;/CatsAndMouses/src/game/server/Car.java;2507388679/1;/CatsAndMouses/src/game/server/Player.java;996654699/1;/CatsAndMouses/src/game/server/event/CheckPointListener.java;3751277052/1;/CatsAndMouses/src/game/server/event/CheckPointEvent.java;1233961445/1;/CatsAndMouses/src/game/server/TrackLoader.java;788111147/1;/CatsAndMouses/src/game/server/TrackState.java;805202400/1;/CatsAndMouses/src/game/server/Updates.java;404082896/1;/CatsAndMouses/src/game/server/Track.java;2781572718/1;/CatsAndMouses/src/game/server/Racing.java;2446276922/1;/CatsAndMouses/src/game/server/event/DestroyedEvent.java;706583956/1;/CatsAndMouses/src/game/server/event/DestroyedListener.java;1993344041/1;/CatsAndMouses/src/game/server/event/LapCompletedEvent.java;1748405738/1;/CatsAndMouses/src/game/server/event/LapCompletedListener.java;1042340175/1;/CatsAndMouses/src/game/server/event/MineDropEvent.java;1882016514/1;/CatsAndMouses/src/game/server/event/MineDropListener.java;2642728310/1;/CatsAndMouses/src/game/server/event/MissileFireEvent.java;2128001657/1;/CatsAndMouses/src/game/server/event/MissileFireListener.java;2602284661/1;/CatsAndMouses/src/game/server/gui/CellRenderer.java;317916595/1;/CatsAndMouses/src/game/server/gui/HardRockControlCenter.java;4276765911/1;/CatsAndMouses/src/game/server/gui/QueuedAction.java;2335273792/1;/CatsAndMouses/src/game/server/tracktiles/CheckPoint.java;1202096749/1;/CatsAndMouses/src/game/server/tracktiles/FinishLine.java;1479631729/1;/CatsAndMouses/src/game/server/tracktiles/Curve.java;2202409874/1;/CatsAndMouses/src/game/server/tracktiles/Straight.java;1939921170/1;/CatsAndMouses/src/game/util/Util.java;2500550330/1;/CatsAndMouses/src/game/util/CollisionTools.java;600899996/1;/CatsAndMouses/src/game/util/Side.java;3149840580/1;/CatsAndMouses/src/game/server/tracktiles/TrackTile.java;3624970781/1;/CatsAndMouses/src/org/json/HTTPTokener.java;4050788765/1;/CatsAndMouses/src/org/json/HTTP.java;4162951548/1;/CatsAndMouses/src/org/json/Cookie.java;1103127120/1;/CatsAndMouses/src/org/json/CookieList.java;2910818699/1;/CatsAndMouses/src/org/json/CDL.java;154819972/1;/CatsAndMouses/src/org/json/JSONML.java;491091296/1;/CatsAndMouses/src/org/json/JSONArray.java;4189741089/1;/CatsAndMouses/src/org/json/JSONException.java;3072480640/1;/CatsAndMouses/src/game/util/Vector2D.java;4224960686/1;/CatsAndMouses/src/org/json/JSONObject.java;4274210090/1;/CatsAndMouses/src/org/json/JSONString.java;4193508038/1;/CatsAndMouses/src/org/json/JSONStringer.java;3986509303/1;/CatsAndMouses/src/org/json/JSONTokener.java;2205721006/1;/CatsAndMouses/src/org/json/JSONWriter.java;3450522874/1;/CatsAndMouses/src/org/json/Kim.java;2946127355/1;/CatsAndMouses/src/org/json/XML.java;648603981/1;/CatsAndMouses/src/org/json/XMLTokener.java;3274552804/1;/CatsAndMouses/src/org/json/zip/BitInputStream.java;661272169/1;/CatsAndMouses/src/org/json/zip/BitOutputStream.java;3045711483/1;/CatsAndMouses/src/org/json/zip/BitReader.java;3324714477/1;/CatsAndMouses/src/org/json/zip/BitWriter.java;2334957849/1;/CatsAndMouses/src/org/json/zip/Compressor.java;1147703032/1;/CatsAndMouses/src/org/json/zip/Decompressor.java;3063277409/1;/CatsAndMouses/src/org/json/zip/Huff.java;1226627679/1;/CatsAndMouses/src/org/json/zip/Keep.java;2935675359/1;/CatsAndMouses/src/org/json/zip/MapKeep.java;3198832111/1;/CatsAndMouses/src/org/json/zip/None.java;3047433230/1;/CatsAndMouses/src/org/json/zip/PostMortem.java;728056453/1;/CatsAndMouses/src/org/json/zip/JSONzip.java;458165620/1;/CatsAndMouses/src/org/json/zip/TrieKeep.java;3836208638/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_LNjfkI1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_LNjfkY1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_LNjfko1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_LNjfk41TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_LNjflI1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_LNkGoI1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_LNkGoY1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_LNkGoo1TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_LNkGo41TEeS-muvgwqy9Mw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_LLcmwI1TEeS-muvgwqy9Mw" name="game">
      <packagedElement xmi:type="uml:Package" xmi:id="_LLgRII1TEeS-muvgwqy9Mw" name="server">
        <packagedElement xmi:type="uml:Package" xmi:id="_LL-LM41TEeS-muvgwqy9Mw" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_LWO6cI1TEeS-muvgwqy9Mw" name="CheckPointListener">
            <generalization xmi:id="_Lud0QI1TEeS-muvgwqy9Mw" general="_LragQI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_LrbuYI1TEeS-muvgwqy9Mw" name="checkPoint">
              <ownedParameter xmi:id="_LrbuYY1TEeS-muvgwqy9Mw" name="e" type="_LWQvoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LWQvoI1TEeS-muvgwqy9Mw" name="CheckPointEvent">
            <generalization xmi:id="_LufCY41TEeS-muvgwqy9Mw" general="_LrcVcI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lxc20I1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lxc20Y1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lxdd4I1TEeS-muvgwqy9Mw" name="checkPoint" type="_LYEtgI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzooIY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LybuQI1TEeS-muvgwqy9Mw" name="CheckPointEvent" specification="_LuebUI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LybuQY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LybuQo1TEeS-muvgwqy9Mw" name="checkPoint" type="_LYEtgI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LybuQ41TEeS-muvgwqy9Mw" type="_LWQvoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(source);
		this.checkPoint = checkPoint;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LuebUI1TEeS-muvgwqy9Mw" name="CheckPointEvent" method="_LybuQI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LufCYI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LufCYY1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LuebUY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LuebUo1TEeS-muvgwqy9Mw" name="checkPoint" type="_LYEtgI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LufCYo1TEeS-muvgwqy9Mw" type="_LWQvoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LXoooI1TEeS-muvgwqy9Mw" name="DestroyedEvent">
            <generalization xmi:id="_LuzLdY1TEeS-muvgwqy9Mw" general="_LrcVcI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_LxvxwI1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxvxwY1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LylfQI1TEeS-muvgwqy9Mw" name="DestroyedEvent" specification="_LuzLcI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LylfQY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymGUI1TEeS-muvgwqy9Mw" type="_LXoooI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(source);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LuzLcI1TEeS-muvgwqy9Mw" name="DestroyedEvent" method="_LylfQI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LuzLco1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LuzLc41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LuzLcY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LuzLdI1TEeS-muvgwqy9Mw" type="_LXoooI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LXs6EI1TEeS-muvgwqy9Mw" name="DestroyedListener">
            <generalization xmi:id="_LuzygI1TEeS-muvgwqy9Mw" general="_LragQI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_Lr954I1TEeS-muvgwqy9Mw" name="destroyed">
              <ownedParameter xmi:id="_Lr954Y1TEeS-muvgwqy9Mw" name="e" type="_LXoooI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LXuIMI1TEeS-muvgwqy9Mw" name="LapCompletedEvent">
            <generalization xmi:id="_Lu1ApY1TEeS-muvgwqy9Mw" general="_LrcVcI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_LxwY0I1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxwY0Y1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LymGUY1TEeS-muvgwqy9Mw" name="LapCompletedEvent" specification="_Lu1AoI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LymGUo1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymGU41TEeS-muvgwqy9Mw" type="_LXuIMI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(source);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Lu1AoI1TEeS-muvgwqy9Mw" name="LapCompletedEvent" method="_LymGUY1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lu1Aoo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lu1Ao41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Lu1AoY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu1ApI1TEeS-muvgwqy9Mw" type="_LXuIMI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LXv9YI1TEeS-muvgwqy9Mw" name="LapCompletedListener">
            <generalization xmi:id="_Lu2OwI1TEeS-muvgwqy9Mw" general="_LragQI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_LsAWII1TEeS-muvgwqy9Mw" name="lapCompleted">
              <ownedParameter xmi:id="_LsA9MI1TEeS-muvgwqy9Mw" name="e" type="_LXuIMI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LXxLgI1TEeS-muvgwqy9Mw" name="MineDropEvent">
            <generalization xmi:id="_Lu3c441TEeS-muvgwqy9Mw" general="_LrcVcI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lxw_4I1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lxw_4Y1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lxw_4o1TEeS-muvgwqy9Mw" name="mine" type="_LUYgUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz2DgY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LymGVI1TEeS-muvgwqy9Mw" name="MineDropEvent" specification="_Lu210I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LymGVY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymGVo1TEeS-muvgwqy9Mw" name="mine" type="_LUYgUI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymGV41TEeS-muvgwqy9Mw" type="_LXxLgI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(source);
		this.mine = mine;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Lu210I1TEeS-muvgwqy9Mw" name="MineDropEvent" method="_LymGVI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lu3c4I1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lu3c4Y1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Lu210Y1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu210o1TEeS-muvgwqy9Mw" name="mine" type="_LUYgUI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu3c4o1TEeS-muvgwqy9Mw" type="_LXxLgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LXznwI1TEeS-muvgwqy9Mw" name="MineDropListener">
            <generalization xmi:id="_Lu4D8I1TEeS-muvgwqy9Mw" general="_LragQI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_LsCyYI1TEeS-muvgwqy9Mw" name="mineDropped">
              <ownedParameter xmi:id="_LsDZcI1TEeS-muvgwqy9Mw" name="event" type="_LXxLgI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LX014I1TEeS-muvgwqy9Mw" name="MissileFireEvent">
            <generalization xmi:id="_Lu5SFY1TEeS-muvgwqy9Mw" general="_LrcVcI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lxxm8I1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lxxm8Y1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lxxm8o1TEeS-muvgwqy9Mw" name="missile" type="_LUgcIY1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz2qkY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LymtYI1TEeS-muvgwqy9Mw" name="MissileFireEvent" specification="_Lu4rAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LymtYY1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymtYo1TEeS-muvgwqy9Mw" name="missile" type="_LUgcIY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LymtY41TEeS-muvgwqy9Mw" type="_LX014I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(source);
		this.missile = missile;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_Lu4rAI1TEeS-muvgwqy9Mw" name="MissileFireEvent" method="_LymtYI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lu5SEo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lu5SE41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Lu5SEI1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu5SEY1TEeS-muvgwqy9Mw" name="missile" type="_LUgcIY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu5SFI1TEeS-muvgwqy9Mw" type="_LX014I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LX3SII1TEeS-muvgwqy9Mw" name="MissileFireListener">
            <generalization xmi:id="_Lu6gMI1TEeS-muvgwqy9Mw" general="_LragQI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_LsFOoI1TEeS-muvgwqy9Mw" name="missileFired">
              <ownedParameter xmi:id="_LsF1sI1TEeS-muvgwqy9Mw" name="e" type="_LX014I1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_LzooIY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzooIo1TEeS-muvgwqy9Mw _Lxdd4I1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_LzooIo1TEeS-muvgwqy9Mw" name="" type="_LWQvoI1TEeS-muvgwqy9Mw" association="_LzooIY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz2DgY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz2Dgo1TEeS-muvgwqy9Mw _Lxw_4o1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz2Dgo1TEeS-muvgwqy9Mw" name="" type="_LXxLgI1TEeS-muvgwqy9Mw" association="_Lz2DgY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz2qkY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz2qko1TEeS-muvgwqy9Mw _Lxxm8o1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz2qko1TEeS-muvgwqy9Mw" name="" type="_LX014I1TEeS-muvgwqy9Mw" association="_Lz2qkY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LNgcQI1TEeS-muvgwqy9Mw" name="tracktiles">
          <packagedElement xmi:type="uml:Class" xmi:id="_LYEtgI1TEeS-muvgwqy9Mw" name="CheckPoint">
            <generalization xmi:id="_LsgFYI1TEeS-muvgwqy9Mw" general="_LYRh0I1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_Lse3QI1TEeS-muvgwqy9Mw" client="_LYEtgI1TEeS-muvgwqy9Mw" supplier="_LTuZAI1TEeS-muvgwqy9Mw" contract="_LTuZAI1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LypJoI1TEeS-muvgwqy9Mw" name="CheckPoint" specification="_LsfeUI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LypJoY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LypJoo1TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(orientation);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LypwsI1TEeS-muvgwqy9Mw" name="getSpawnLocation" specification="_LYGisI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LypwsY1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>Rectangle rectangle = getArea().getBounds();
		return new Point2D.Double(rectangle.getCenterX(), rectangle.getCenterY());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lypwso1TEeS-muvgwqy9Mw" name="toJSON" specification="_LYGisY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lypws41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>JSONObject obj = super.toJSON();
		obj.put(&quot;type&quot;, Straight.class.getSimpleName());
		return obj;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYGisI1TEeS-muvgwqy9Mw" name="getSpawnLocation" method="_LypwsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LvqHEI1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LYGisY1TEeS-muvgwqy9Mw" name="toJSON" method="_Lypwso1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LvquII1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsfeUI1TEeS-muvgwqy9Mw" name="CheckPoint" method="_LypJoI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LsfeUo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LsfeU41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LsfeUY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsfeVI1TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LYIX4I1TEeS-muvgwqy9Mw" name="FinishLine">
            <generalization xmi:id="_Lsh6k41TEeS-muvgwqy9Mw" general="_LYEtgI1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LypwtI1TEeS-muvgwqy9Mw" name="FinishLine" specification="_LsgscI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LypwtY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lypwto1TEeS-muvgwqy9Mw" type="_LYIX4I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(orientation);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyqXwI1TEeS-muvgwqy9Mw" name="getStartLocation" specification="_LYJmAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyqXwY1TEeS-muvgwqy9Mw" name="pos">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LyqXwo1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>int w = TRACK_WIDTH / 4;
     Point2D start = new Vector2D.Polar(getOrientation().cclockwise().getAngle(),
             TRACK_WIDTH / 2 - TRACK_WIDTH / 8).applyTo(getSpawnLocation());
     Vector2D diff = new Vector2D.Cartesian(
             new Vector2D.Polar(getOrientation().clockwise().getAngle(), w));
     for (int i = 1; i &lt; pos; i++) {
         start = diff.applyTo(start);
     }
     return start;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyqXw41TEeS-muvgwqy9Mw" name="getDescription" specification="_LshTgI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyqXxI1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LyqXxY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;finish&quot;;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYJmAI1TEeS-muvgwqy9Mw" name="getStartLocation" method="_LyqXwI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LYJmAY1TEeS-muvgwqy9Mw" name="pos">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LvrVMI1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsgscI1TEeS-muvgwqy9Mw" name="FinishLine" method="_LypwtI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lsgsco1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lsgsc41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LsgscY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsgsdI1TEeS-muvgwqy9Mw" type="_LYIX4I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LshTgI1TEeS-muvgwqy9Mw" name="getDescription" method="_LyqXw41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LshTgY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LshTgo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LYK0II1TEeS-muvgwqy9Mw" name="Curve">
            <generalization xmi:id="_LsnaI41TEeS-muvgwqy9Mw" general="_LYm5AI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx3GgI1TEeS-muvgwqy9Mw" name="curve" visibility="private" isStatic="true" type="_LpsB8I1TEeS-muvgwqy9Mw" association="_Lz8KIY1TEeS-muvgwqy9Mw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx3GgY1TEeS-muvgwqy9Mw" value="new Area(new Ellipse2D.Double(&#xA;&#x9;&#x9;&#x9;-(TRACK_WIDTH + SEGMENT_LENGTH), -(TRACK_WIDTH + SEGMENT_LENGTH),&#xA;&#x9;&#x9;&#x9;2 * (TRACK_WIDTH + SEGMENT_LENGTH),&#xA;&#x9;&#x9;&#x9;2 * (TRACK_WIDTH + SEGMENT_LENGTH)))"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyq-0I1TEeS-muvgwqy9Mw" name="_initializer1" specification="_LYLbMI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>curve.intersect(new Area(new Rectangle(0, 0, TRACK_WIDTH
				+ SEGMENT_LENGTH, TRACK_WIDTH + SEGMENT_LENGTH)));
		curve.subtract(new Area(new Ellipse2D.Double(-SEGMENT_LENGTH,
				-SEGMENT_LENGTH, 2 * SEGMENT_LENGTH, 2 * SEGMENT_LENGTH)));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyq-0Y1TEeS-muvgwqy9Mw" name="Curve" specification="_LsjIsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyq-0o1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lyq-041TEeS-muvgwqy9Mw" type="_LYK0II1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(orientation);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyq-1I1TEeS-muvgwqy9Mw" name="getArea" specification="_LYMCQY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyq-1Y1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>Area res;
		switch (getOrientation()) {
		case DOWN:
			res = new Area(curve);
			break;
		case LEFT:
			res = curve.createTransformedArea(AffineTransform
					.getQuadrantRotateInstance(1));
			res.transform(AffineTransform.getTranslateInstance(SEGMENT_LENGTH + TRACK_WIDTH, 0));
			break;
		case UP:
			res = curve.createTransformedArea(AffineTransform
					.getQuadrantRotateInstance(2));
			res.transform(AffineTransform.getTranslateInstance(TRACK_WIDTH
					+ SEGMENT_LENGTH, TRACK_WIDTH + SEGMENT_LENGTH));
			break;
		case RIGHT:
			res = curve.createTransformedArea(AffineTransform
					.getQuadrantRotateInstance(3));
			res.transform(AffineTransform.getTranslateInstance(0, TRACK_WIDTH + SEGMENT_LENGTH));
			break;
		default:
			res = null;
		}
		res.transform(AffineTransform.getTranslateInstance(getLocation().x,
				getLocation().y));
		return res;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyrl4I1TEeS-muvgwqy9Mw" name="checkDirection" specification="_LsjvwI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyrl4Y1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lyrl4o1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return direction == getOrientation()
				|| direction == getOrientation().cclockwise();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyrl441TEeS-muvgwqy9Mw" name="getRelativeConnect" specification="_LskW0o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyrl5I1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lyrl5Y1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>if (!checkDirection(direction)) {
			throw new IllegalArgumentException(&quot;Cannot move &quot;
					+ direction.toString() + &quot; on a curve going from &quot;
					+ getOrientation().opposite().toString() + &quot; to &quot;
					+ getOrientation().clockwise().toString() + &quot;.&quot;);
		}
		switch (getOrientation()) {
		case DOWN:
			if (direction == Direction.DOWN) {
				return new Point(0, SEGMENT_LENGTH);
			} else {
				return new Point(SEGMENT_LENGTH, 0);
			}
		case RIGHT:
			if (direction == Direction.RIGHT) {
				return new Point(SEGMENT_LENGTH, TRACK_WIDTH + SEGMENT_LENGTH);
			} else {
				return new Point();
			}
		case UP:
			if (direction == Direction.UP) {
				return new Point(SEGMENT_LENGTH + TRACK_WIDTH, 0);
			} else {
				return new Point(0, SEGMENT_LENGTH + TRACK_WIDTH);
			}
		case LEFT:
			if (direction == Direction.LEFT) {
				return new Point();
			} else {
				return new Point(SEGMENT_LENGTH + TRACK_WIDTH, SEGMENT_LENGTH);
			}
		default:
			return null;
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyrl5o1TEeS-muvgwqy9Mw" name="calcLocation" specification="_Lslk8I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyrl541TEeS-muvgwqy9Mw" name="state" type="_LWTy8I1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>Point rel;
		switch (getOrientation()) {
		case DOWN:
			rel = new Point(-SEGMENT_LENGTH, -SEGMENT_LENGTH);
			break;
		case RIGHT:
			rel = new Point(-SEGMENT_LENGTH, -TRACK_WIDTH - SEGMENT_LENGTH);
			break;
		case UP:
			rel = new Point(-SEGMENT_LENGTH - TRACK_WIDTH, -SEGMENT_LENGTH - TRACK_WIDTH);
			break;
		case LEFT:
			rel = new Point(-SEGMENT_LENGTH - TRACK_WIDTH, -SEGMENT_LENGTH);
			break;
		default:
			rel = null;
		}
		Point rel2 = getRelativeConnect(state.getDirection());
		setLocation(state.getLocation().x + rel.x + rel2.x,
				state.getLocation().y + rel.y + rel2.y);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LysM8I1TEeS-muvgwqy9Mw" name="getConnect" specification="_LsmMAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LysM8Y1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LysM8o1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>Point res = new Point(getLocation());
		Point rel = getRelativeConnect(direction);
		res.translate(rel.x, rel.y);
		Direction outDir;
     if(direction == getOrientation()) {
         outDir = direction.clockwise();
     } else {
         outDir = direction.cclockwise();
     }
		return new TrackState(res, outDir);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LysM841TEeS-muvgwqy9Mw" name="getDescription" specification="_LsmzEo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LysM9I1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LysM9Y1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if(direction == getOrientation()) {
         return &quot;turnright&quot;;
     } else {
         return &quot;turnleft&quot;;
     }
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYLbMI1TEeS-muvgwqy9Mw" name="_initializer1" isStatic="true" method="_Lyq-0I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LYLbMY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LYLbMo1TEeS-muvgwqy9Mw" key="init"/>
              </eAnnotations>
            </ownedOperation>
            <ownedOperation xmi:id="_LYMCQY1TEeS-muvgwqy9Mw" name="getArea" method="_Lyq-1I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lvr8QI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsjIsI1TEeS-muvgwqy9Mw" name="Curve" method="_Lyq-0Y1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LsjIso1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LsjIs41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LsjIsY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsjItI1TEeS-muvgwqy9Mw" type="_LYK0II1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsjvwI1TEeS-muvgwqy9Mw" name="checkDirection" method="_Lyrl4I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LsjvwY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lsjvwo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LskW0o1TEeS-muvgwqy9Mw" name="getRelativeConnect" method="_Lyrl441TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LskW041TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LvsjUI1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Lslk8I1TEeS-muvgwqy9Mw" name="calcLocation" method="_Lyrl5o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lslk8Y1TEeS-muvgwqy9Mw" name="state" type="_LWTy8I1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsmMAI1TEeS-muvgwqy9Mw" name="getConnect" method="_LysM8I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LsmMAY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsmMAo1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LsmzEo1TEeS-muvgwqy9Mw" name="getDescription" method="_LysM841TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LsmzE41TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsmzFI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LYRh0I1TEeS-muvgwqy9Mw" name="Straight">
            <generalization xmi:id="_LsvV8I1TEeS-muvgwqy9Mw" general="_LYm5AI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx4UoI1TEeS-muvgwqy9Mw" name="vertical" visibility="private" isLeaf="true" isStatic="true" type="_LqghUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz8xMY1TEeS-muvgwqy9Mw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx4UoY1TEeS-muvgwqy9Mw" value="new Rectangle(TRACK_WIDTH,&#xA;&#x9;&#x9;&#x9;SEGMENT_LENGTH * 3)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lx47sI1TEeS-muvgwqy9Mw" name="horizontal" visibility="private" isLeaf="true" isStatic="true" type="_LqghUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz9_UY1TEeS-muvgwqy9Mw">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx47sY1TEeS-muvgwqy9Mw" value="new Rectangle(SEGMENT_LENGTH * 3,&#xA;&#x9;&#x9;&#x9;TRACK_WIDTH)"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lys0AI1TEeS-muvgwqy9Mw" name="Straight" specification="_LspPUI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lys0AY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lys0Ao1TEeS-muvgwqy9Mw" type="_LYRh0I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(orientation);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lys0A41TEeS-muvgwqy9Mw" name="getArea" specification="_LYSI4I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lys0BI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>int x = getLocation().x;
		int y = getLocation().y;
		Rectangle rect;
		if (getOrientation() == Direction.UP
				|| getOrientation() == Direction.DOWN) {
			rect = new Rectangle(vertical);
		} else {
			rect = new Rectangle(horizontal);
		}
		rect.setLocation(x, y);
		return new Area(rect);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lys0BY1TEeS-muvgwqy9Mw" name="checkDirection" specification="_Lsp2Y41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lys0Bo1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lys0B41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return direction == getOrientation();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LytbEI1TEeS-muvgwqy9Mw" name="getRelativeConnect" specification="_LsrEgI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LytbEY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LytbEo1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>if (!checkDirection(direction)) {
			throw new IllegalArgumentException(&quot;Cannot move &quot;
					+ direction.toString() + &quot; on a straight going &quot;
					+ getOrientation().toString() + &quot;.&quot;);
		}
		Point pos = new Point();
		if (getOrientation() == Direction.UP || getOrientation() == Direction.DOWN) {
			if (direction == Direction.DOWN) {
				pos.translate(0, SEGMENT_LENGTH * 3);
			}
		} else {
			if (direction == Direction.RIGHT) {
				pos.translate(SEGMENT_LENGTH * 3, 0);
			}
		}
		return pos;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LytbE41TEeS-muvgwqy9Mw" name="calcLocation" specification="_LssSoY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LytbFI1TEeS-muvgwqy9Mw" name="state" type="_LWTy8I1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>if (!checkDirection(state.getDirection())) {
			throw new IllegalArgumentException(&quot;Cannot move &quot;
					+ state.getDirection().toString() + &quot; on a straight going &quot;
					+ getOrientation().toString() + &quot;.&quot;);
		}
		if (getOrientation() == Direction.UP || getOrientation() == Direction.DOWN) {
			if (state.getDirection() == Direction.UP) {
				setLocation(state.getLocation().x, state.getLocation().y
						- SEGMENT_LENGTH * 3);
			} else {
				setLocation(state.getLocation());
			}
		} else {
			if (state.getDirection() == Direction.LEFT) {
				setLocation(state.getLocation().x - SEGMENT_LENGTH * 3,
						state.getLocation().y);
			} else {
				setLocation(state.getLocation());
			}
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LytbFY1TEeS-muvgwqy9Mw" name="getConnect" specification="_Lstgwo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LytbFo1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LytbF41TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>Point res = new Point(getLocation());
		Point rel = getRelativeConnect(direction);
		res.translate(rel.x, rel.y);
		return new TrackState(res, direction);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyuCII1TEeS-muvgwqy9Mw" name="getDescription" specification="_Lsuu4Y1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyuCIY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LyuCIo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;straight&quot;;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYSI4I1TEeS-muvgwqy9Mw" name="getArea" method="_Lys0A41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LvtKYI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LspPUI1TEeS-muvgwqy9Mw" name="Straight" method="_Lys0AI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lsp2YI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lsp2YY1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LspPUY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lsp2Yo1TEeS-muvgwqy9Mw" type="_LYRh0I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Lsp2Y41TEeS-muvgwqy9Mw" name="checkDirection" method="_Lys0BY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lsp2ZI1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsqdcI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LsrEgI1TEeS-muvgwqy9Mw" name="getRelativeConnect" method="_LytbEI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LsrEgY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LvtxcI1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LssSoY1TEeS-muvgwqy9Mw" name="calcLocation" method="_LytbE41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LssSoo1TEeS-muvgwqy9Mw" name="state" type="_LWTy8I1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Lstgwo1TEeS-muvgwqy9Mw" name="getConnect" method="_LytbFY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lstgw41TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LstgxI1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Lsuu4Y1TEeS-muvgwqy9Mw" name="getDescription" method="_LyuCII1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lsuu4o1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lsuu441TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LYm5AI1TEeS-muvgwqy9Mw" name="TrackTile" isAbstract="true">
            <ownedAttribute xmi:id="_Lx7_AI1TEeS-muvgwqy9Mw" name="SEGMENT_LENGTH" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx7_AY1TEeS-muvgwqy9Mw" value="45"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lx7_Ao1TEeS-muvgwqy9Mw" name="TRACK_WIDTH" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx7_A41TEeS-muvgwqy9Mw" value="SEGMENT_LENGTH * 5"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lx8mEI1TEeS-muvgwqy9Mw" name="location" type="_Lq_pgI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_L0C30Y1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx8mEY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw" isReadOnly="true"/>
            <interfaceRealization xmi:id="_LtBp0I1TEeS-muvgwqy9Mw" client="_LYm5AI1TEeS-muvgwqy9Mw" supplier="_LT274I1TEeS-muvgwqy9Mw" contract="_LT274I1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyy6oI1TEeS-muvgwqy9Mw" name="TrackTile" specification="_LtCQ4I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyy6oY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lyy6oo1TEeS-muvgwqy9Mw" type="_LYm5AI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.orientation = orientation;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyy6o41TEeS-muvgwqy9Mw" name="setLocation" specification="_LwIBIY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyy6pI1TEeS-muvgwqy9Mw" name="p" type="_Lq_pgI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>this.location = new Point(p);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyzhsI1TEeS-muvgwqy9Mw" name="setLocation" specification="_LYp8UI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyzhsY1TEeS-muvgwqy9Mw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Lyzhso1TEeS-muvgwqy9Mw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.location = new Point(x, y);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyzhs41TEeS-muvgwqy9Mw" name="toJSON" specification="_LYqjYY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyzhtI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>JSONObject obj = new JSONObject();
		obj.put(&quot;message&quot;, &quot;tile&quot;);
		obj.put(&quot;type&quot;, getClass().getSimpleName());
		obj.put(&quot;orientation&quot;, getOrientation().toString());
		return obj;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyzhtY1TEeS-muvgwqy9Mw" name="toString" specification="_LYrxgI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyzhto1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return getClass().getSimpleName() + &quot;: &quot; + getLocation().toString() + &quot;, &quot; + getOrientation().toString(); 
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYouMI1TEeS-muvgwqy9Mw" name="getArea" isAbstract="true">
              <ownedParameter xmi:id="_LwHaEI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LYp8UI1TEeS-muvgwqy9Mw" name="setLocation" visibility="protected" method="_LyzhsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LYp8UY1TEeS-muvgwqy9Mw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LYqjYI1TEeS-muvgwqy9Mw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LYqjYY1TEeS-muvgwqy9Mw" name="toJSON" method="_Lyzhs41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LwJPQI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LYrxgI1TEeS-muvgwqy9Mw" name="toString" method="_LyzhtY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LYrxgY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LtCQ4I1TEeS-muvgwqy9Mw" name="TrackTile" visibility="protected" method="_Lyy6oI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LtCQ4o1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LtCQ441TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LtCQ4Y1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LtC38I1TEeS-muvgwqy9Mw" type="_LYm5AI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LtC38Y1TEeS-muvgwqy9Mw" name="getConnect" isAbstract="true">
              <ownedParameter xmi:id="_LtC38o1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LtC3841TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LtDfAI1TEeS-muvgwqy9Mw" name="getRelativeConnect" isAbstract="true">
              <ownedParameter xmi:id="_LtDfAY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LwIBII1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LtEGEI1TEeS-muvgwqy9Mw" name="checkDirection" isAbstract="true">
              <ownedParameter xmi:id="_LtEGEY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LtEGEo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LtEtII1TEeS-muvgwqy9Mw" name="calcLocation" isAbstract="true">
              <ownedParameter xmi:id="_LtEtIY1TEeS-muvgwqy9Mw" name="state" type="_LWTy8I1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LtFUMI1TEeS-muvgwqy9Mw" name="getDescription" isAbstract="true">
              <ownedParameter xmi:id="_LtFUMY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LtF7QI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_LwIBIY1TEeS-muvgwqy9Mw" name="setLocation" visibility="protected" method="_Lyy6o41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LwIoMI1TEeS-muvgwqy9Mw" name="p" type="_Lq_pgI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz8KIY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz8KIo1TEeS-muvgwqy9Mw _Lx3GgI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz8KIo1TEeS-muvgwqy9Mw" name="" type="_LYK0II1TEeS-muvgwqy9Mw" association="_Lz8KIY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz8xMY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz8xMo1TEeS-muvgwqy9Mw _Lx4UoI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz8xMo1TEeS-muvgwqy9Mw" name="" type="_LYRh0I1TEeS-muvgwqy9Mw" association="_Lz8xMY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz9_UY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz9_Uo1TEeS-muvgwqy9Mw _Lx47sI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz9_Uo1TEeS-muvgwqy9Mw" name="" type="_LYRh0I1TEeS-muvgwqy9Mw" association="_Lz9_UY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_L0C30Y1TEeS-muvgwqy9Mw" name="" memberEnd="_L0C30o1TEeS-muvgwqy9Mw _Lx8mEI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_L0C30o1TEeS-muvgwqy9Mw" name="" type="_LYm5AI1TEeS-muvgwqy9Mw" association="_L0C30Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LPdkEI1TEeS-muvgwqy9Mw" name="gui">
          <packagedElement xmi:type="uml:Class" xmi:id="_LX35MI1TEeS-muvgwqy9Mw" name="CellRenderer">
            <generalization xmi:id="_Lu-xo41TEeS-muvgwqy9Mw" general="_LsLVQY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_LxyOAI1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxyOAY1TEeS-muvgwqy9Mw" value="1L"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Lxy1EI1TEeS-muvgwqy9Mw" name="label" visibility="private" type="_LsJgEY1TEeS-muvgwqy9Mw" association="_Lz3RoY1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_Lu7HQI1TEeS-muvgwqy9Mw" client="_LX35MI1TEeS-muvgwqy9Mw" supplier="_LsL8UY1TEeS-muvgwqy9Mw" contract="_LsL8UY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LynUcI1TEeS-muvgwqy9Mw" name="CellRenderer" specification="_LX4gQI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LynUcY1TEeS-muvgwqy9Mw" type="_LX35MI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>label = new JLabel();
     setLayout(new BorderLayout());
     add(label, BorderLayout.WEST);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LynUco1TEeS-muvgwqy9Mw" name="getListCellRendererComponent" specification="_Lu8VYI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LynUc41TEeS-muvgwqy9Mw" name="list" type="_LsKuMI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LynUdI1TEeS-muvgwqy9Mw" name="value" type="_LsI5AI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LynUdY1TEeS-muvgwqy9Mw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LynUdo1TEeS-muvgwqy9Mw" name="isSelected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LynUd41TEeS-muvgwqy9Mw" name="cellHasFocus">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_LynUeI1TEeS-muvgwqy9Mw" type="_LsHq4I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>StringBuilder builder = new StringBuilder();
     if (value.getValue().getName() != null) {
         builder.append(value.getValue().getName());
     } else {
         builder.append(&quot;Observer&quot;);
     }
     builder.append(&quot; (&quot;);
     builder.append(value.getKey().getAddress().toString());
     builder.append(&quot;)&quot;);
     label.setText(builder.toString());
     if (isSelected) {
         setBackground(list.getSelectionBackground());
         label.setForeground(list.getSelectionForeground());
     } else {
         setBackground(list.getBackground());
         label.setForeground(list.getForeground());
     }
     return this;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LX4gQI1TEeS-muvgwqy9Mw" name="CellRenderer" method="_LynUcI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LX4gQY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LX4gQo1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LX5HUI1TEeS-muvgwqy9Mw" type="_LX35MI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Lu8VYI1TEeS-muvgwqy9Mw" name="getListCellRendererComponent" method="_LynUco1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lu88cI1TEeS-muvgwqy9Mw" name="list" type="_LsKuMI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu88cY1TEeS-muvgwqy9Mw" name="value" type="_LsI5AI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lu88co1TEeS-muvgwqy9Mw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Lu88c41TEeS-muvgwqy9Mw" name="isSelected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Lu88dI1TEeS-muvgwqy9Mw" name="cellHasFocus">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Lu88dY1TEeS-muvgwqy9Mw" type="_LsHq4I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LX68gI1TEeS-muvgwqy9Mw" name="HardRockControlCenter">
            <ownedAttribute xmi:id="_LxzcII1TEeS-muvgwqy9Mw" name="abortButton" type="_LsQNwI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz3RpI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_LxzcIY1TEeS-muvgwqy9Mw" name="connections" type="_LsKuMI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz34sY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx0DMY1TEeS-muvgwqy9Mw" name="frame" type="_LsQNwo1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz5G0I1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx0DMo1TEeS-muvgwqy9Mw" name="kickButton" type="_LsQNwI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz5t4Y1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx0qQI1TEeS-muvgwqy9Mw" name="quitButton" type="_LsQNwI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz6U8Y1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_Lx0qQY1TEeS-muvgwqy9Mw" name="raceStateButton" type="_LsQNwI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz68AY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyn7gI1TEeS-muvgwqy9Mw" name="HardRockControlCenter" specification="_LX7jkI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyn7gY1TEeS-muvgwqy9Mw" type="_LX68gI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>initializeStuff();
     frame.setVisible(true);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyn7go1TEeS-muvgwqy9Mw" name="close" specification="_LX7jlI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>frame.setVisible(false);
     frame.dispose();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyn7g41TEeS-muvgwqy9Mw" name="initializeStuff" specification="_LX8KoI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>frame = new JFrame();
     frame.setTitle(&quot;Hard Rock Racing Server&quot;);
     frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
     frame.setBounds(100, 100, 390, 225);
     JPanel contentPane = new JPanel();
     contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
     frame.setContentPane(contentPane);
     contentPane.setLayout(new BorderLayout(0, 0));

     JPanel topHalf = new JPanel();
     topHalf.setBorder(new TitledBorder(null, &quot;Players&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     topHalf.setLayout(new BorderLayout());
     frame.add(topHalf, BorderLayout.NORTH);

     connections = new JList&lt;>();
     connections.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     connections.setLayoutOrientation(JList.VERTICAL);
     connections.setVisibleRowCount(5);
     connections.setCellRenderer(new CellRenderer());

     JScrollPane scrollPane = new JScrollPane(connections);
     scrollPane.setViewportBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
     scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
     topHalf.add(scrollPane, BorderLayout.CENTER);

     kickButton = new JButton(&quot;Kick&quot;, null);
     topHalf.add(kickButton, BorderLayout.EAST);

     JPanel bottomHalf = new JPanel();
     bottomHalf.setBorder(new TitledBorder(null, &quot;Controls&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));
     bottomHalf.setLayout(new FlowLayout(FlowLayout.LEADING));
     frame.add(bottomHalf);

     raceStateButton = new JButton(&quot;Racestate&quot;, null);
     bottomHalf.add(raceStateButton);

     abortButton = new JButton(&quot;Abort Race&quot;, null);
     bottomHalf.add(abortButton);

     quitButton = new JButton(&quot;Quit&quot;, null);
     bottomHalf.add(quitButton);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LX7jkI1TEeS-muvgwqy9Mw" name="HardRockControlCenter" method="_Lyn7gI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LX7jkY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LX7jko1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LX7jk41TEeS-muvgwqy9Mw" type="_LX68gI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LX7jlI1TEeS-muvgwqy9Mw" name="close" method="_Lyn7go1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_LX8KoI1TEeS-muvgwqy9Mw" name="initializeStuff" visibility="private" method="_Lyn7g41TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_LX_N8I1TEeS-muvgwqy9Mw" name="QueuedAction" isAbstract="true">
            <ownedAttribute xmi:id="_Lx1RUI1TEeS-muvgwqy9Mw" name="game" visibility="private" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lz7jEY1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_LvBN4I1TEeS-muvgwqy9Mw" client="_LX_N8I1TEeS-muvgwqy9Mw" supplier="_LsXigI1TEeS-muvgwqy9Mw" contract="_LsXigI1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_LvCcAI1TEeS-muvgwqy9Mw" client="_LX_N8I1TEeS-muvgwqy9Mw" supplier="_LsYwoY1TEeS-muvgwqy9Mw" contract="_LsYwoY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyoikI1TEeS-muvgwqy9Mw" name="QueuedAction" specification="_LsZ-wI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyoikY1TEeS-muvgwqy9Mw" name="game" type="_LWnU8I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_Lyoiko1TEeS-muvgwqy9Mw" type="_LX_N8I1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.game = game;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyoik41TEeS-muvgwqy9Mw" name="actionPerformed" specification="_LvDDEI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LyoilI1TEeS-muvgwqy9Mw" name="e" type="_LsWUYI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>game.queueAction(this);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyoilY1TEeS-muvgwqy9Mw" name="windowClosing" specification="_LvGtcI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_Lyoilo1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>game.queueAction(this);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_LYAcEI1TEeS-muvgwqy9Mw" name="perform" isAbstract="true"/>
            <ownedOperation xmi:id="_LsZ-wI1TEeS-muvgwqy9Mw" name="QueuedAction" method="_LyoikI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_LsZ-wo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_LsZ-w41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_LsZ-wY1TEeS-muvgwqy9Mw" name="game" type="_LWnU8I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_LsZ-xI1TEeS-muvgwqy9Mw" type="_LX_N8I1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvDDEI1TEeS-muvgwqy9Mw" name="actionPerformed" method="_Lyoik41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LvDDEY1TEeS-muvgwqy9Mw" name="e" type="_LsWUYI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvERMI1TEeS-muvgwqy9Mw" name="windowActivated">
              <ownedParameter xmi:id="_LvERMY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvFfUI1TEeS-muvgwqy9Mw" name="windowClosed">
              <ownedParameter xmi:id="_LvFfUY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvGtcI1TEeS-muvgwqy9Mw" name="windowClosing" method="_LyoilY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_LvGtcY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvHUgI1TEeS-muvgwqy9Mw" name="windowDeactivated">
              <ownedParameter xmi:id="_LvHUgY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvIioI1TEeS-muvgwqy9Mw" name="windowDeiconified">
              <ownedParameter xmi:id="_LvIioY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvJwwI1TEeS-muvgwqy9Mw" name="windowIconified">
              <ownedParameter xmi:id="_LvJwwY1TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_LvKX0o1TEeS-muvgwqy9Mw" name="windowOpened">
              <ownedParameter xmi:id="_LvKX041TEeS-muvgwqy9Mw" name="e" type="_LsYJkI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz3RoY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz3Roo1TEeS-muvgwqy9Mw _Lxy1EI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz3Roo1TEeS-muvgwqy9Mw" name="" type="_LX35MI1TEeS-muvgwqy9Mw" association="_Lz3RoY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz3RpI1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz3RpY1TEeS-muvgwqy9Mw _LxzcII1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz3RpY1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz3RpI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz34sY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz34so1TEeS-muvgwqy9Mw _LxzcIY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz34so1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz34sY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz5G0I1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz5G0Y1TEeS-muvgwqy9Mw _Lx0DMY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz5G0Y1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz5G0I1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz5t4Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz5t4o1TEeS-muvgwqy9Mw _Lx0DMo1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz5t4o1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz5t4Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz6U8Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz6U8o1TEeS-muvgwqy9Mw _Lx0qQI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz6U8o1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz6U8Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz68AY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz68Ao1TEeS-muvgwqy9Mw _Lx0qQY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz68Ao1TEeS-muvgwqy9Mw" name="" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lz68AY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Lz7jEY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz7jEo1TEeS-muvgwqy9Mw _Lx1RUI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_Lz7jEo1TEeS-muvgwqy9Mw" name="" type="_LX_N8I1TEeS-muvgwqy9Mw" association="_Lz7jEY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LTuZAI1TEeS-muvgwqy9Mw" name="Collides">
          <ownedAttribute xmi:id="_LTvnII1TEeS-muvgwqy9Mw" name="area" type="_LpsB8I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzWUQI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_LTw1QI1TEeS-muvgwqy9Mw" name="CarType">
          <ownedAttribute xmi:id="_Lwz9oI1TEeS-muvgwqy9Mw" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_LTzRgI1TEeS-muvgwqy9Mw" name="CarType" visibility="private" method="_LyBekI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LTz4kY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LTz4ko1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LTz4kI1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LTz4k41TEeS-muvgwqy9Mw" type="_LTw1QI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LT0foI1TEeS-muvgwqy9Mw" name="getFromString" isStatic="true" method="_LyCFoo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LT0foY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lpw6cI1TEeS-muvgwqy9Mw" type="_LTw1QI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedLiteral xmi:id="_LTxcUI1TEeS-muvgwqy9Mw" name="AIRBLADE">
            <specification xmi:type="uml:Expression" xmi:id="_LTxcUY1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_Ly_H4I1TEeS-muvgwqy9Mw" value="&quot;Airblade&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LTxcUo1TEeS-muvgwqy9Mw" name="BATTLE_TRAK">
            <specification xmi:type="uml:Expression" xmi:id="_LTxcU41TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_Ly_H4Y1TEeS-muvgwqy9Mw" value="&quot;Battle Trak&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LTxcVI1TEeS-muvgwqy9Mw" name="DIRT_DEVIL">
            <specification xmi:type="uml:Expression" xmi:id="_LTyDYI1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_Ly_H4o1TEeS-muvgwqy9Mw" value="&quot;Dirt Devil&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LTyDYY1TEeS-muvgwqy9Mw" name="HAVAC">
            <specification xmi:type="uml:Expression" xmi:id="_LTyDYo1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_Ly_H441TEeS-muvgwqy9Mw" value="&quot;Havac&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LTyDY41TEeS-muvgwqy9Mw" name="MARAUDER">
            <specification xmi:type="uml:Expression" xmi:id="_LTyDZI1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_Ly_u8I1TEeS-muvgwqy9Mw" value="&quot;Marauder&quot;"/>
            </specification>
          </ownedLiteral>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LT274I1TEeS-muvgwqy9Mw" name="JSONable">
          <ownedOperation xmi:id="_LT274Y1TEeS-muvgwqy9Mw" name="toJSON">
            <ownedParameter xmi:id="_Ltx3wI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_LT4KAI1TEeS-muvgwqy9Mw" name="Direction">
          <ownedOperation xmi:id="_LT4xEY1TEeS-muvgwqy9Mw" name="opposite" method="_LyCsso1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lp0k0I1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LT4xEo1TEeS-muvgwqy9Mw" name="clockwise" method="_LyDTwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lp0k0Y1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LT5YII1TEeS-muvgwqy9Mw" name="cclockwise" method="_LyDTwo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lp1L4I1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LT5_MI1TEeS-muvgwqy9Mw" name="getAngle" method="_LyDTxI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LT5_MY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedLiteral xmi:id="_LT4KAY1TEeS-muvgwqy9Mw" name="LEFT"/>
          <ownedLiteral xmi:id="_LT4KAo1TEeS-muvgwqy9Mw" name="UP"/>
          <ownedLiteral xmi:id="_LT4KA41TEeS-muvgwqy9Mw" name="RIGHT"/>
          <ownedLiteral xmi:id="_LT4xEI1TEeS-muvgwqy9Mw" name="DOWN"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LT7NUI1TEeS-muvgwqy9Mw" name="ConnectionListener">
          <ownedAttribute xmi:id="_Lw0ksI1TEeS-muvgwqy9Mw" name="server" visibility="private" type="_Lp2aAY1TEeS-muvgwqy9Mw" association="_LzW7UY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw1LwI1TEeS-muvgwqy9Mw" name="protocol" visibility="private" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzYJcI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw1y0I1TEeS-muvgwqy9Mw" name="running" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Ltzs8Y1TEeS-muvgwqy9Mw" client="_LT7NUI1TEeS-muvgwqy9Mw" supplier="_LtzF4Y1TEeS-muvgwqy9Mw" contract="_LtzF4Y1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyD60I1TEeS-muvgwqy9Mw" name="ConnectionListener" specification="_Lt07EI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyD60Y1TEeS-muvgwqy9Mw" name="server" type="_Lp2aAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyD60o1TEeS-muvgwqy9Mw" name="protocol" type="_LVPb8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyD6041TEeS-muvgwqy9Mw" type="_LT7NUI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.server = server;
		this.protocol = protocol;
		this.running = false;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyEh4I1TEeS-muvgwqy9Mw" name="run" specification="_LT9CgI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = true;
		Protocol.log(this, &quot;Now listening for incoming connections.&quot;);
		while (running) {
			Socket socket;
			try {
				socket = server.accept();
				socket.setSoTimeout(10000);
			} catch (IOException e) {
				return;
			}
			Protocol.log(this, &quot;Incoming connection from &quot;
					+ socket.getInetAddress().toString());
			Connection connection;
			try {
				connection = new Connection(socket, protocol);
			} catch (IOException e) {
				throw new RuntimeException(e);
			}
			new Thread(connection).start();
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyEh4Y1TEeS-muvgwqy9Mw" name="stop" specification="_LT-Qoo1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = false;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LT9CgI1TEeS-muvgwqy9Mw" name="run" method="_LyEh4I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LT-Qoo1TEeS-muvgwqy9Mw" name="stop" method="_LyEh4Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_Lt07EI1TEeS-muvgwqy9Mw" name="ConnectionListener" method="_LyD60I1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lt1iII1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lt1iIY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lt07EY1TEeS-muvgwqy9Mw" name="server" type="_Lp2aAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt07Eo1TEeS-muvgwqy9Mw" name="protocol" type="_LVPb8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt1iIo1TEeS-muvgwqy9Mw" type="_LT7NUI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LUB7AI1TEeS-muvgwqy9Mw" name="Connection">
          <ownedAttribute xmi:id="_Lw2Z4I1TEeS-muvgwqy9Mw" name="socket" visibility="private" type="_Lp3BEY1TEeS-muvgwqy9Mw" association="_LzYwgY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw2Z4o1TEeS-muvgwqy9Mw" name="out" visibility="private" type="_LqAyEY1TEeS-muvgwqy9Mw" association="_LzZ-oI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw3A8Y1TEeS-muvgwqy9Mw" name="in" visibility="private" type="_Lp75kI1TEeS-muvgwqy9Mw" association="_LzalsY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw3oAI1TEeS-muvgwqy9Mw" name="protocol" visibility="private" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzbMwY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw3oAo1TEeS-muvgwqy9Mw" name="inputQueue" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_Lzbz0Y1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw42Io1TEeS-muvgwqy9Mw" name="outputQueue" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_LzdB8I1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw6EQY1TEeS-muvgwqy9Mw" name="running" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Lt2JMI1TEeS-muvgwqy9Mw" client="_LUB7AI1TEeS-muvgwqy9Mw" supplier="_Lp-V0I1TEeS-muvgwqy9Mw" contract="_Lp-V0I1TEeS-muvgwqy9Mw"/>
          <interfaceRealization xmi:id="_Lt3XUI1TEeS-muvgwqy9Mw" client="_LUB7AI1TEeS-muvgwqy9Mw" supplier="_LtzF4Y1TEeS-muvgwqy9Mw" contract="_LtzF4Y1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFI8I1TEeS-muvgwqy9Mw" name="Connection" specification="_Lt4lcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyFI8Y1TEeS-muvgwqy9Mw" name="socket" type="_Lp3BEY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyFI8o1TEeS-muvgwqy9Mw" name="protocol" type="_LVPb8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyFI841TEeS-muvgwqy9Mw" type="_LUB7AI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.socket = socket;
		out = new PrintWriter(socket.getOutputStream(), true);
		in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		this.protocol = protocol;
		running = false;
		inputQueue = new ConcurrentLinkedQueue&lt;>();
		outputQueue = new ConcurrentLinkedQueue&lt;>();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFI9I1TEeS-muvgwqy9Mw" name="run" specification="_LUE-UI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = true;
		// Handshake
		Protocol.log(this, &quot;Waiting for handshake...&quot;);
		String line = null;
		try {
			line = in.readLine();
		} catch (SocketTimeoutException e) {
			Protocol.log(this, socket.getInetAddress().toString()
					+ &quot; did not send handshake.&quot;);
			close();
			return;
		} catch (IOException e) {
			Protocol.log(this,
					&quot;I/O error while reading connection from &quot;
							+ socket.getInetAddress().toString());
			close();
			return;
		}
		if (line == null) {
			Protocol.log(this, &quot;Connection to &quot;
					+ socket.getInetAddress().toString()
					+ &quot; was remotely closed.&quot;);
			close();
			return;
		}

		Player player = protocol.attemptHandShake(line, out);
		if (player == null) {
			Protocol
					.log(this, &quot;Handshake from &quot;
							+ socket.getInetAddress().toString()
							+ &quot; was unsuccessful.&quot;);
		} else {
			protocol.connectPlayer(this, player);
		}
		try {
         socket.setSoTimeout(10);
     } catch (SocketException e1) {
         close();
     }
		while (running) {
		    while(!outputQueue.isEmpty()) {
		        out.println(outputQueue.poll());
		    }
			try {
				line = in.readLine();
			} catch (SocketTimeoutException e) {
				continue;
			} catch (IOException e) {
				Protocol.log(this, &quot;Connection to &quot;
						+ socket.getInetAddress().toString()
						+ &quot; ended unexpectedly.&quot;);
				protocol.connectionLost(this);
				close();
				break;
			}
			if (line == null) {
				Protocol.log(this, &quot;Connection to &quot;
						+ socket.getInetAddress().toString()
						+ &quot; was remotely closed.&quot;);
				protocol.connectionLost(this);
				close();
				break;
			}
			inputQueue.add(line);
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFI9Y1TEeS-muvgwqy9Mw" name="close" specification="_LUFlYo1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>stop();
		out.close();
		try {
			in.close();
			socket.close();
		} catch (IOException e) {
			// like I give a fuck
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFI9o1TEeS-muvgwqy9Mw" name="stop" specification="_LUGMc41TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = false;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFwAI1TEeS-muvgwqy9Mw" name="equals" specification="_Lt7BsY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyFwAY1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyFwAo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(other instanceof Connection)) {
			return false;
		}
		return socket == ((Connection) other).socket;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFwA41TEeS-muvgwqy9Mw" name="hashCode" specification="_LUGzgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyFwBI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return socket.hashCode();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyFwBY1TEeS-muvgwqy9Mw" name="getAddress" specification="_LUIBoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyFwBo1TEeS-muvgwqy9Mw" type="_LqCAMY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return socket.getInetAddress();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyGXEI1TEeS-muvgwqy9Mw" name="hasInput" specification="_LUIBoY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyGXEY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return !inputQueue.isEmpty();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyGXEo1TEeS-muvgwqy9Mw" name="nextInput" specification="_LUIosI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyGXE41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return inputQueue.poll();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyGXFI1TEeS-muvgwqy9Mw" name="send" specification="_LUJPwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyGXFY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if(outputQueue.size() > 5) {
	        outputQueue.poll();
	    }
	    outputQueue.add(message);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyGXFo1TEeS-muvgwqy9Mw" name="send" specification="_Lt8P0Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyGXF41TEeS-muvgwqy9Mw" name="message" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>send(message.toString());
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyG-II1TEeS-muvgwqy9Mw" name="send" specification="_LqLKII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyG-IY1TEeS-muvgwqy9Mw" name="message" type="_LT274I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>send(message.toJSON());
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LUE-UI1TEeS-muvgwqy9Mw" name="run" method="_LyFI9I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LUFlYo1TEeS-muvgwqy9Mw" name="close" method="_LyFI9Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LUGMc41TEeS-muvgwqy9Mw" name="stop" method="_LyFI9o1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LUGzgI1TEeS-muvgwqy9Mw" name="hashCode" method="_LyFwA41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUHakI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUIBoI1TEeS-muvgwqy9Mw" name="getAddress" method="_LyFwBY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lt8P0I1TEeS-muvgwqy9Mw" type="_LqCAMY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LUIBoY1TEeS-muvgwqy9Mw" name="hasInput" method="_LyGXEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUIBoo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUIosI1TEeS-muvgwqy9Mw" name="nextInput" method="_LyGXEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUIosY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUJPwI1TEeS-muvgwqy9Mw" name="send" method="_LyGXFI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUJPwY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LqLKII1TEeS-muvgwqy9Mw" name="send" method="_LyG-II1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqLKIY1TEeS-muvgwqy9Mw" name="message" type="_LT274I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lt4lcI1TEeS-muvgwqy9Mw" name="Connection" method="_LyFI8I1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lt5Mgo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lt5Mg41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lt5MgI1TEeS-muvgwqy9Mw" name="socket" type="_Lp3BEY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt5MgY1TEeS-muvgwqy9Mw" name="protocol" type="_LVPb8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt5MhI1TEeS-muvgwqy9Mw" type="_LUB7AI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lt7BsY1TEeS-muvgwqy9Mw" name="equals" method="_LyFwAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lt7Bso1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt7Bs41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lt8P0Y1TEeS-muvgwqy9Mw" name="send" method="_LyGXFo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lt8P0o1TEeS-muvgwqy9Mw" name="message" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LUQkgI1TEeS-muvgwqy9Mw" name="GameObject">
          <ownedAttribute xmi:id="_Lw6rUY1TEeS-muvgwqy9Mw" name="idcounter" visibility="private" isStatic="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lw7SYI1TEeS-muvgwqy9Mw" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lw7SYo1TEeS-muvgwqy9Mw" name="destroyed" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lw75cI1TEeS-muvgwqy9Mw" name="listeners" visibility="protected" type="_LqTF8Y1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzdpAY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw75cY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw" association="_Ly_u8Y1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw8ggI1TEeS-muvgwqy9Mw" name="speed" type="_LqTtAY1TEeS-muvgwqy9Mw" association="_LzAWAI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw8ggY1TEeS-muvgwqy9Mw" name="id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_LqUUEY1TEeS-muvgwqy9Mw" client="_LUQkgI1TEeS-muvgwqy9Mw" supplier="_LT274I1TEeS-muvgwqy9Mw" contract="_LT274I1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyHlMI1TEeS-muvgwqy9Mw" name="GameObject" specification="_Lt_TII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyHlMY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyHlMo1TEeS-muvgwqy9Mw" name="speed" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyHlM41TEeS-muvgwqy9Mw" type="_LUQkgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.location = location;
     this.speed = speed;
     listeners = new EventListenerList();
     destroyed = false;
     id = idcounter++;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyHlNI1TEeS-muvgwqy9Mw" name="addDestroyedListener" specification="_LqViMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyHlNY1TEeS-muvgwqy9Mw" name="listener" type="_LXs6EI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.add(DestroyedListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyHlNo1TEeS-muvgwqy9Mw" name="destroy" specification="_LUSZsI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>destroyed = true;
     DestroyedListener[] ls = listeners
             .getListeners(DestroyedListener.class);
     DestroyedEvent e = new DestroyedEvent(this);
     for (DestroyedListener listener : ls) {
         listener.destroyed(e);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyIMQI1TEeS-muvgwqy9Mw" name="removeDestroyedListener" specification="_LqWJQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyIMQY1TEeS-muvgwqy9Mw" name="listener" type="_LXs6EI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.remove(DestroyedListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyIMQo1TEeS-muvgwqy9Mw" name="getID" specification="_LUTAwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyIMQ41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return id;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyIMRI1TEeS-muvgwqy9Mw" name="toJSON" specification="_LUTAwo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyIMRY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject obj = new JSONObject();
     obj.put(&quot;id&quot;, getID());
     obj.put(&quot;locationX&quot;, getLocation().getX());
     obj.put(&quot;locationY&quot;, getLocation().getY());
     obj.put(&quot;speedX&quot;, getSpeed().getX());
     obj.put(&quot;speedY&quot;, getSpeed().getY());
     return obj;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyIMRo1TEeS-muvgwqy9Mw" name="update" specification="_LUUO4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyIMR41TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>location = speed.scale(delta).applyTo(location);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LUSZsI1TEeS-muvgwqy9Mw" name="destroy" method="_LyHlNo1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LUTAwI1TEeS-muvgwqy9Mw" name="getID" method="_LyIMQo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUTAwY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUTAwo1TEeS-muvgwqy9Mw" name="toJSON" method="_LyIMRI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lt_6MI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LUUO4o1TEeS-muvgwqy9Mw" name="update" method="_LyIMRo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUUO441TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LqViMI1TEeS-muvgwqy9Mw" name="addDestroyedListener" method="_LyHlNI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqViMY1TEeS-muvgwqy9Mw" name="listener" type="_LXs6EI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqWJQI1TEeS-muvgwqy9Mw" name="removeDestroyedListener" method="_LyIMQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqWJQY1TEeS-muvgwqy9Mw" name="listener" type="_LXs6EI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lt_TII1TEeS-muvgwqy9Mw" name="GameObject" visibility="protected" method="_LyHlMI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lt_TI41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lt_TJI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lt_TIY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt_TIo1TEeS-muvgwqy9Mw" name="speed" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lt_TJY1TEeS-muvgwqy9Mw" type="_LUQkgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LUYgUI1TEeS-muvgwqy9Mw" name="Mine">
          <generalization xmi:id="_LqeFEI1TEeS-muvgwqy9Mw" general="_LUQkgI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw9uoI1TEeS-muvgwqy9Mw" name="damage" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lw-VsI1TEeS-muvgwqy9Mw" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lw-8wI1TEeS-muvgwqy9Mw" name="hitbox" isLeaf="true" isStatic="true" type="_Lqbo0Y1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzeQEY1TEeS-muvgwqy9Mw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lw_j0I1TEeS-muvgwqy9Mw" value="new Ellipse2D.Double(0, 0, 20, 20)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lw_j0Y1TEeS-muvgwqy9Mw" name="disableDuration" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lw_j0o1TEeS-muvgwqy9Mw" value=".5"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_Lqc28I1TEeS-muvgwqy9Mw" client="_LUYgUI1TEeS-muvgwqy9Mw" supplier="_LTuZAI1TEeS-muvgwqy9Mw" contract="_LTuZAI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyIzUI1TEeS-muvgwqy9Mw" name="Mine" specification="_LuBIUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyIzUY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyIzUo1TEeS-muvgwqy9Mw" type="_LUYgUI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(location, new Vector2D.Cartesian(0, 0));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyJaYI1TEeS-muvgwqy9Mw" name="collideWith" specification="_LqdeAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyJaYY1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>other.mine();
		other.damage(damage);
		destroy();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyJaYo1TEeS-muvgwqy9Mw" name="getArea" specification="_LUaVgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyJaY41TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Area res = new Area(hitbox);
		res.transform(AffineTransform.getTranslateInstance(
				-hitbox.getWidth() / 2, -hitbox.getHeight() / 2));
		res.transform(AffineTransform.getTranslateInstance(
				getLocation().getX(), getLocation().getY()));
		return res;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyJaZI1TEeS-muvgwqy9Mw" name="toJSON" specification="_LUcKsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyJaZY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject obj = super.toJSON();
		obj.put(&quot;message&quot;, &quot;mine&quot;);
		return obj;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LUaVgI1TEeS-muvgwqy9Mw" name="getArea" method="_LyJaYo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuBvYo1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LUa8ko1TEeS-muvgwqy9Mw" name="update">
            <ownedParameter xmi:id="_LUbjoI1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUcKsI1TEeS-muvgwqy9Mw" name="toJSON" method="_LyJaZI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuCWcI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqdeAI1TEeS-muvgwqy9Mw" name="collideWith" method="_LyJaYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqdeAY1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuBIUI1TEeS-muvgwqy9Mw" name="Mine" method="_LyIzUI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LuBIUo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LuBvYI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LuBIUY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuBvYY1TEeS-muvgwqy9Mw" type="_LUYgUI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_LUfOAI1TEeS-muvgwqy9Mw" name="RaceState">
          <ownedLiteral xmi:id="_LUf1EI1TEeS-muvgwqy9Mw" name="WAITING"/>
          <ownedLiteral xmi:id="_LUf1EY1TEeS-muvgwqy9Mw" name="PRERACE"/>
          <ownedLiteral xmi:id="_LUf1Eo1TEeS-muvgwqy9Mw" name="RACE"/>
          <ownedLiteral xmi:id="_LUgcII1TEeS-muvgwqy9Mw" name="POSTRACE"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LUgcIY1TEeS-muvgwqy9Mw" name="Missile">
          <generalization xmi:id="_LqkLsI1TEeS-muvgwqy9Mw" general="_LUQkgI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lw_j041TEeS-muvgwqy9Mw" name="range" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxAK4I1TEeS-muvgwqy9Mw" value="1000"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxAK4Y1TEeS-muvgwqy9Mw" name="speed" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxAK4o1TEeS-muvgwqy9Mw" value="600"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxAK441TEeS-muvgwqy9Mw" name="damage" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxAK5I1TEeS-muvgwqy9Mw" value="2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxAx8I1TEeS-muvgwqy9Mw" name="hitbox" isLeaf="true" isStatic="true" type="_LqghUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lze3IY1TEeS-muvgwqy9Mw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxAx8Y1TEeS-muvgwqy9Mw" value="new Rectangle(20, 8)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxAx8o1TEeS-muvgwqy9Mw" name="shooter" type="_LV2f8I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzgFQY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxAx841TEeS-muvgwqy9Mw" name="startPoint" visibility="private" type="_LqSe4I1TEeS-muvgwqy9Mw" association="_LzgsUY1TEeS-muvgwqy9Mw"/>
          <interfaceRealization xmi:id="_LqhvcY1TEeS-muvgwqy9Mw" client="_LUgcIY1TEeS-muvgwqy9Mw" supplier="_LTuZAI1TEeS-muvgwqy9Mw" contract="_LTuZAI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyKBcI1TEeS-muvgwqy9Mw" name="Missile" specification="_Lqi9kI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyKBcY1TEeS-muvgwqy9Mw" name="shooter" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyKBco1TEeS-muvgwqy9Mw" type="_LUgcIY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(shooter.getCar().getLocation(), new Vector2D.Polar(shooter
				.getCar().getFacing(), speed));
		this.shooter = shooter;
		startPoint = shooter.getCar().getLocation();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyKBc41TEeS-muvgwqy9Mw" name="update" specification="_LUhqQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyKBdI1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>super.update(delta);
		if (startPoint.distanceSq(getLocation()) > range * range) {
			destroy();
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyKogI1TEeS-muvgwqy9Mw" name="collideWith" specification="_LqjkoY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyKogY1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (other != shooter.getCar()) {
			other.damage(damage);
			destroy();
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyKogo1TEeS-muvgwqy9Mw" name="getArea" specification="_LUlUoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyKog41TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Area res = new Area(hitbox);
		res.transform(AffineTransform.getTranslateInstance(
				-hitbox.getWidth() / 2, -hitbox.getHeight() / 2));
		res.transform(AffineTransform.getRotateInstance(getSpeed()
				.getDirection()));
		res.transform(AffineTransform.getTranslateInstance(
				getLocation().getX(), getLocation().getY()));
		return res;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyKohI1TEeS-muvgwqy9Mw" name="toJSON" specification="_LUl7so1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyKohY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject obj = super.toJSON();
		obj.put(&quot;message&quot;, &quot;missile&quot;);
		obj.put(&quot;shooter&quot;, shooter.getName());
		return obj;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LUhqQI1TEeS-muvgwqy9Mw" name="update" method="_LyKBc41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LUiRUI1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LUlUoI1TEeS-muvgwqy9Mw" name="getArea" method="_LyKogo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuELoI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LUl7so1TEeS-muvgwqy9Mw" name="toJSON" method="_LyKohI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuEysI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lqi9kI1TEeS-muvgwqy9Mw" name="Missile" method="_LyKBcI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lqi9ko1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lqi9k41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lqi9kY1TEeS-muvgwqy9Mw" name="shooter" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LqjkoI1TEeS-muvgwqy9Mw" type="_LUgcIY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqjkoY1TEeS-muvgwqy9Mw" name="collideWith" method="_LyKogI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lqjkoo1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_LVJVUI1TEeS-muvgwqy9Mw" name="RaceCharacter">
          <ownedAttribute xmi:id="_LxCnII1TEeS-muvgwqy9Mw" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_LVM_sI1TEeS-muvgwqy9Mw" name="RaceCharacter" visibility="private" method="_LyLPkI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LVM_so1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LVM_s41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LVM_sY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LVNmwI1TEeS-muvgwqy9Mw" type="_LVJVUI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LVNmwY1TEeS-muvgwqy9Mw" name="getFromName" isStatic="true" method="_LyLPk41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVNmwo1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LqnPAI1TEeS-muvgwqy9Mw" type="_LVJVUI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedLiteral xmi:id="_LVJ8YI1TEeS-muvgwqy9Mw" name="CYBERHAWK">
            <specification xmi:type="uml:Expression" xmi:id="_LVJ8YY1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzA9EI1TEeS-muvgwqy9Mw" value="&quot;Cyberhawk&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVJ8Yo1TEeS-muvgwqy9Mw" name="IVANZYPHER">
            <specification xmi:type="uml:Expression" xmi:id="_LVKjcI1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzA9EY1TEeS-muvgwqy9Mw" value="&quot;Ivanzypher&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVKjcY1TEeS-muvgwqy9Mw" name="JAKE_BADLANDS">
            <specification xmi:type="uml:Expression" xmi:id="_LVKjco1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzA9Eo1TEeS-muvgwqy9Mw" value="&quot;Jake Badlands&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVKjc41TEeS-muvgwqy9Mw" name="KATARINA_LYONS">
            <specification xmi:type="uml:Expression" xmi:id="_LVKjdI1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzA9E41TEeS-muvgwqy9Mw" value="&quot;Katarina Lyons&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVKjdY1TEeS-muvgwqy9Mw" name="RIP">
            <specification xmi:type="uml:Expression" xmi:id="_LVKjdo1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzA9FI1TEeS-muvgwqy9Mw" value="&quot;Rip&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVLKgI1TEeS-muvgwqy9Mw" name="SNAKE_SANDERS">
            <specification xmi:type="uml:Expression" xmi:id="_LVLKgY1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzBkII1TEeS-muvgwqy9Mw" value="&quot;Snake Sanders&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVLxkI1TEeS-muvgwqy9Mw" name="TARQUINN">
            <specification xmi:type="uml:Expression" xmi:id="_LVLxkY1TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzBkIY1TEeS-muvgwqy9Mw" value="&quot;Tarquinn&quot;"/>
            </specification>
          </ownedLiteral>
          <ownedLiteral xmi:id="_LVLxko1TEeS-muvgwqy9Mw" name="VIPER_MACKAY">
            <specification xmi:type="uml:Expression" xmi:id="_LVLxk41TEeS-muvgwqy9Mw">
              <operand xmi:type="uml:LiteralString" xmi:id="_LzBkIo1TEeS-muvgwqy9Mw" value="&quot;Viper Mackay&quot;"/>
            </specification>
          </ownedLiteral>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LVPb8I1TEeS-muvgwqy9Mw" name="Protocol">
          <ownedAttribute xmi:id="_LxDOMI1TEeS-muvgwqy9Mw" name="port" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxDOMY1TEeS-muvgwqy9Mw" value="1993"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxDOMo1TEeS-muvgwqy9Mw" name="constants" visibility="private" isLeaf="true" isStatic="true" type="_LqpEMY1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzhTYY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxD1QY1TEeS-muvgwqy9Mw" name="successfulHandshake" visibility="private" isLeaf="true" isStatic="true" type="_LpyvoI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzihgI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxD1Qo1TEeS-muvgwqy9Mw" name="disconnected" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_LzjIkY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxFqcI1TEeS-muvgwqy9Mw" name="game" visibility="private" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_LzjvoY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxGRgI1TEeS-muvgwqy9Mw" name="hasPlayers" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxGRgo1TEeS-muvgwqy9Mw" name="listener" visibility="private" type="_LT7NUI1TEeS-muvgwqy9Mw" association="_LzkWsY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxG4kY1TEeS-muvgwqy9Mw" name="players" visibility="private" type="_Lqq5Yo1TEeS-muvgwqy9Mw" association="_Lzlk0Y1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxJU0I1TEeS-muvgwqy9Mw" name="playerQueue" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_Lzlk1I1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxKi8I1TEeS-muvgwqy9Mw" name="server" visibility="private" type="_Lp2aAY1TEeS-muvgwqy9Mw" association="_LzmL4Y1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyL2oI1TEeS-muvgwqy9Mw" name="_initializer1" specification="_LVQqEI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>successfulHandshake = new JSONObject();
     successfulHandshake.put(&quot;message&quot;, &quot;connect&quot;);
     successfulHandshake.put(&quot;status&quot;, true);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyL2oY1TEeS-muvgwqy9Mw" name="_initializer2" specification="_LVRRI41TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>constants = new HashMap&lt;>();
     constants.put(&quot;car.hitbox.width&quot;, Car.hitbox.getWidth());
     constants.put(&quot;car.hitbox.height&quot;, Car.hitbox.getHeight());
     constants.put(&quot;car.maxfriction&quot;, Car.frontFriction);
     constants.put(&quot;car.minfriction&quot;, Car.sidewaysFriction);
     constants.put(&quot;car.acceleration&quot;, Car.acceleration);
     constants.put(&quot;car.boostedacceleration&quot;, Car.acceleration);
     constants.put(&quot;car.topspeed&quot;, Car.topSpeed);
     constants.put(&quot;car.boostedtopspeed&quot;, Car.boostSpeed);
     constants.put(&quot;car.turnspeed&quot;, Car.turningSpeed);
     constants.put(&quot;car.minturnspeed&quot;, Car.minSpeed);
     constants.put(&quot;car.collision.rotation&quot;, Car.collisionRotation);
     constants.put(&quot;car.collision.bounce&quot;, Car.collisionRepulsion);
     constants.put(&quot;car.collision.mindamagespeed&quot;, Car.damageThreshHold);
     constants.put(&quot;car.hp&quot;, Car.maxHP);
     constants.put(&quot;missile.hitbox.width&quot;, Missile.hitbox.getWidth());
     constants.put(&quot;missile.hitbox.height&quot;, Missile.hitbox.getHeight());
     constants.put(&quot;missile.speed&quot;, Missile.speed);
     constants.put(&quot;missile.range&quot;, Missile.range);
     constants.put(&quot;missile.damage&quot;, Missile.damage);
     constants.put(&quot;mine.hitbox.width&quot;, Mine.hitbox.getWidth());
     constants.put(&quot;mine.hitbox.height&quot;, Mine.hitbox.getHeight());
     constants.put(&quot;mine.damage&quot;, Mine.damage);
     constants.put(&quot;mine.stuntime&quot;, Mine.disableDuration);
     constants.put(&quot;player.maxmissiles&quot;, Player.maxMissiles);
     constants.put(&quot;player.maxboosts&quot;, Player.maxBoosts);
     constants.put(&quot;player.maxmines&quot;, Player.maxMines);
     constants.put(&quot;race.laps&quot;, Racing.laps);
     constants.put(&quot;track.straight.legnth&quot;, TrackTile.SEGMENT_LENGTH);
     constants.put(&quot;track.straight.width&quot;, TrackTile.TRACK_WIDTH);
     constants.put(&quot;track.curve.innerradius&quot;, TrackTile.SEGMENT_LENGTH);
     constants.put(&quot;track.curve.outerradius&quot;, TrackTile.SEGMENT_LENGTH + TrackTile.TRACK_WIDTH);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyL2oo1TEeS-muvgwqy9Mw" name="log" specification="_LuHO8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyL2o41TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyL2pI1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>System.out.println(&quot;[&quot; + source.getClass().getSimpleName() + &quot;] &quot; + message);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyMdsI1TEeS-muvgwqy9Mw" name="Protocol" specification="_LqujwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyMdsY1TEeS-muvgwqy9Mw" name="game" type="_LWnU8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyMdso1TEeS-muvgwqy9Mw" type="_LVPb8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.game = game;
     players = new ConcurrentHashMap&lt;>();
     disconnected = new ConcurrentLinkedQueue&lt;>();
     try {
         server = new ServerSocket(port);
     } catch (IOException e) {
         throw new RuntimeException(e);
     }
     log(this, &quot;Opened socket on port &quot; + server.getLocalPort());
     listener = new ConnectionListener(server, this);
     hasPlayers = false;
     playerQueue = new ConcurrentLinkedQueue&lt;>();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyMds41TEeS-muvgwqy9Mw" name="connectPlayer" specification="_LqvK0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyMdtI1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyMdtY1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>// check name
     if (!player.isObserver()) {
         for (Player player2 : players.values()) {
             if (player2.isObserver()) {
                 continue;
             }
             if (player2.getName().equals(player.getName())) {
                 connection.send(&quot;Could not connect, name already in use.&quot;);
                 connection.close();
                 return;
             }
         }
         playerQueue.add(player);
     }
     players.put(connection, player);
     if (player.isObserver() &amp;&amp; game.getCurrentTrack() != null) {
         connection.send(getGameStartMessage(player.transferMapTiled()));
     }
     log(this, &quot;Player &quot; + player.toString() + &quot; connected successfully.&quot;);
     hasPlayers = getNumberOfPlayers() > 0;
     game.updateGUI();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNEwI1TEeS-muvgwqy9Mw" name="getConnectionEntries" specification="_LVTtYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyNEwY1TEeS-muvgwqy9Mw" type="_Lqvx4Y1TEeS-muvgwqy9Mw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LyNEwo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return players.entrySet();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNEw41TEeS-muvgwqy9Mw" name="getNumberOfConnections" specification="_LVU7gI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyNExI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return players.size();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNExY1TEeS-muvgwqy9Mw" name="getNumberOfObservers" specification="_LVU7go1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyNExo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return getNumberOfConnections() - getNumberOfPlayers();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNr0I1TEeS-muvgwqy9Mw" name="getNumberOfPlayers" specification="_LVU7hI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyNr0Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int i = 0;
     for (Player player : players.values()) {
         if (!player.isObserver()) {
             i++;
         }
     }
     return i;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNr0o1TEeS-muvgwqy9Mw" name="sendDestroyed" specification="_LqxAAY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyNr041TEeS-muvgwqy9Mw" name="car" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;destroyed&quot;);
     message.put(&quot;car&quot;, car.getID());
     sendToAll(message.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNr1I1TEeS-muvgwqy9Mw" name="sendGameStart" specification="_LVVikY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>String notTiled = getGameStartMessage(false).toString();
     String tiled = getGameStartMessage(true).toString();
     for (Connection connection : this.players.keySet()) {
         Player player = this.players.get(connection);
         if (player == null) {
             continue;
         }
         if (!player.isObserver() &amp;&amp; !game.getRacers().contains(player)) {
             continue;
         }
         if (player.transferMapTiled()) {
             connection.send(tiled);
         } else {
             connection.send(notTiled);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyNr1Y1TEeS-muvgwqy9Mw" name="sendGameState" specification="_LVViko1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>JSONObject gamestate = new JSONObject();
     gamestate.put(&quot;message&quot;, &quot;gamestate&quot;);
     gamestate.put(&quot;time&quot;, game.getTimer());
     ArrayList&lt;JSONObject> cars = new ArrayList&lt;>();
     for (Player player : game.getRacers()) {
         Car car = player.getCar();
         if (car == null) {
             continue;
         }
         JSONObject obj = car.toJSON();
         obj.put(&quot;driver&quot;, player.getName());
         obj.put(&quot;missiles&quot;, player.getMissiles());
         obj.put(&quot;boosts&quot;, player.getBoosts());
         obj.put(&quot;mines&quot;, player.getMines());
         obj.put(&quot;lapscomplete&quot;, player.getCompletedLaps());
         cars.add(obj);
     }
     gamestate.put(&quot;cars&quot;, cars);

     ArrayList&lt;JSONObject> missiles = new ArrayList&lt;>();
     for (Missile missile : game.getMissiles()) {
         missiles.add(missile.toJSON());
     }
     gamestate.put(&quot;missiles&quot;, missiles);

     ArrayList&lt;JSONObject> mines = new ArrayList&lt;>();
     for (Mine mine : game.getMines()) {
         mines.add(mine.toJSON());
     }
     gamestate.put(&quot;mines&quot;, mines);

     sendToAll(gamestate.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyOS4I1TEeS-muvgwqy9Mw" name="sendLapComplete" specification="_LqxnEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyOS4Y1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;lapcomplete&quot;);
     message.put(&quot;player&quot;, player.getName());
     message.put(&quot;lapsleft&quot;, Racing.laps - player.getCompletedLaps());
     sendToAll(message.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyOS4o1TEeS-muvgwqy9Mw" name="sendMineHit" specification="_LqyOII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyOS441TEeS-muvgwqy9Mw" name="mine" type="_LUYgUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyOS5I1TEeS-muvgwqy9Mw" name="victim" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;minehit&quot;);
     message.put(&quot;mine&quot;, mine.getID());
     message.put(&quot;target&quot;, victim.getName());
     sendToAll(message.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyOS5Y1TEeS-muvgwqy9Mw" name="sendMissileHit" specification="_Lqy1MI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyOS5o1TEeS-muvgwqy9Mw" name="missile" type="_LUgcIY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyOS541TEeS-muvgwqy9Mw" name="victim" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;missilehit&quot;);
     message.put(&quot;missile&quot;, missile.getID());
     message.put(&quot;target&quot;, victim.getName());
     message.put(&quot;shooter&quot;, missile.getShooter().getName());
     sendToAll(message.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyO58I1TEeS-muvgwqy9Mw" name="sendBoost" specification="_LqzcQo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyO58Y1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;boost&quot;);
     message.put(&quot;player&quot;, player.getName());
     sendToAll(message.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyO58o1TEeS-muvgwqy9Mw" name="sendRaceOver" specification="_LuJEII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyO5841TEeS-muvgwqy9Mw" name="placement" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;raceover&quot;);
     JSONArray array = new JSONArray();
     for (Player player : placement) {
         array.put(player.toJSON());
     }
     message.put(&quot;placement&quot;, array);
     sendToAll(message.toString());
     for (Player player : placement) {
         playerQueue.add(player);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyO59I1TEeS-muvgwqy9Mw" name="sendToAll" specification="_LVWwsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyO59Y1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>for (Connection connection : players.keySet()) {
         Player p = players.get(connection);
         if (p == null) {
             continue;
         }
         if (game.getState() != RaceState.RACE
                 || p.isObserver()
                 || game.getRacers().contains(p)) {
             connection.send(message);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyPhAI1TEeS-muvgwqy9Mw" name="start" specification="_LVWwso1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>new Thread(listener).start();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyPhAY1TEeS-muvgwqy9Mw" name="stop" specification="_LVXXwI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>listener.stop();
     for (Connection connection : players.keySet()) {
         connection.close();
     }
     try {
         server.close();
     } catch (IOException e) {
     }
     log(this, &quot;Server was stopped.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyPhAo1TEeS-muvgwqy9Mw" name="update" specification="_LVXXwY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>while (!disconnected.isEmpty()) {
         disconnect(disconnected.poll());
     }

     for (Connection connection : players.keySet()) {
         while (connection.hasInput()) {
             parseInput(connection, connection.nextInput());
         }
     }
     if (game.getState() == RaceState.WAITING &amp;&amp; hasPlayers) {
         startRace();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyPhA41TEeS-muvgwqy9Mw" name="attemptHandShake" specification="_LuKSQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyPhBI1TEeS-muvgwqy9Mw" name="line">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyPhBY1TEeS-muvgwqy9Mw" name="err" type="_LqAyEY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyPhBo1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject object;
     try {
         object = new JSONObject(line);
     } catch (JSONException e) {
         err.println(e.getMessage());
         return null;
     }

     String message = getString(object, &quot;message&quot;);
     if (message == null) {
         err.println(&quot;no message field&quot;);
         return null;
     }
     if (!message.equals(&quot;connect&quot;)) {
         err.println(&quot;Expected handshake, got &quot; + message);
         return null;
     }
     String type = getString(object, &quot;type&quot;);
     if (type == null) {
         err.println(&quot;no type field&quot;);
         return null;
     }
     if (type.equals(&quot;observer&quot;)) {
         boolean tiledMap = false;
         try {
             tiledMap = object.getBoolean(&quot;tracktiled&quot;);
         } catch (JSONException e) {

         }
         log(this, &quot;Handshake successful for new observer with tiledTrack &quot; + tiledMap);
         err.println(successfulHandshake.toString());
         return new Player(tiledMap);
     } else if (type.equals(&quot;player&quot;)) {
         String name = getString(object, &quot;name&quot;);
         if (name == null || name.equals(&quot;&quot;)) {
             err.println(&quot;No name field&quot;);
             return null;
         }

         String character = getString(object, &quot;character&quot;);
         if (character == null) {
             return null;
         }
         RaceCharacter charac = RaceCharacter.getFromName(character);
         if (charac == null) {
             err.println(&quot;Unknown character: &quot; + character);
             return null;
         }

         String ctype = getString(object, &quot;cartype&quot;);
         if (ctype == null) {
             err.println(&quot;No cartype field&quot;);
             return null;
         }
         CarType carType = CarType.getFromString(ctype);
         if (carType == null) {
             err.println(&quot;Unknown car type: &quot; + ctype);
             return null;
         }

         boolean tiledMap = false;
         try {
             tiledMap = object.getBoolean(&quot;tracktiled&quot;);
         } catch (JSONException e) {

         }
         Player player = new Player(name, charac, carType, tiledMap);
         Protocol.log(this, &quot;Handshake successful for new Player: &quot; + player.toString());
         err.println(successfulHandshake.toString());
         return player;
     } else {
         err.println(&quot;Expected one of \&quot;player\&quot; or \&quot;observer\&quot; for type.&quot;);
         return null;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQIEI1TEeS-muvgwqy9Mw" name="connectionLost" specification="_Lq0qYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyQIEY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>disconnected.add(connection);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQIEo1TEeS-muvgwqy9Mw" name="parseInput" specification="_Lq1RcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyQIE41TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyQIFI1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>JSONObject object;
     try {
         object = new JSONObject(message);
     } catch (JSONException e) {
         connection.send(e.getMessage());
         return;
     }
     String msg;
     try {
         msg = object.getString(&quot;message&quot;);
     } catch (JSONException e) {
         connection.send(e.getMessage());
         return;
     }
     if (msg == null) {
         connection.send(&quot;Invalid message: &quot; + null);
         return;
     }
     if (msg.equals(&quot;action&quot;)) {
         parseAction(connection, object);
         return;
     } else if (msg.equals(&quot;request&quot;)) {
         parseRequest(connection, object);
     } else {
         connection.send(&quot;Unknown message: &quot; + message);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQIFY1TEeS-muvgwqy9Mw" name="startRace" specification="_LVX-0I1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>// Pick racers
     ArrayList&lt;Player> racers = new ArrayList&lt;>();

     for (int i = 0; i &lt; 4 &amp;&amp; !playerQueue.isEmpty(); i++) {
         racers.add(playerQueue.poll());
     }

     // Assign Characters
     List&lt;RaceCharacter> characters = new ArrayList&lt;>(Arrays.asList(RaceCharacter.values()));
     for (Player player : racers) {
         if (characters.contains(player.getPreferredCharacter())) {
             player.setCharacter(player.getPreferredCharacter());
             characters.remove(player.getPreferredCharacter());
         } else {
             RaceCharacter character = Util.getRandom(characters);
             player.setCharacter(character);
             characters.remove(character);
         }
     }
     game.startPreRace(racers);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQvII1TEeS-muvgwqy9Mw" name="getGameStartMessage" specification="_LVYl4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyQvIY1TEeS-muvgwqy9Mw" name="tiled">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyQvIo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;gamestart&quot;);

     ArrayList&lt;JSONObject> players = new ArrayList&lt;>();
     for (Player player : game.getRacers()) {
         players.add(player.toJSON());
     }
     message.put(&quot;players&quot;, players);

     message.put(&quot;laps&quot;, Racing.laps);

     message.put(&quot;track&quot;, game.getCurrentTrack().toJSON(tiled));
     return message;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQvI41TEeS-muvgwqy9Mw" name="disconnect" specification="_Lq14gI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyQvJI1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Player player = players.get(connection);
     if (player != null) {
         log(this, &quot;Player &quot; + player.toString() + &quot; disconnected.&quot;);
         game.dropPlayer(player);
     }
     players.remove(connection);
     playerQueue.remove(player);
     hasPlayers = getNumberOfPlayers() > 0;
     game.updateGUI();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyQvJY1TEeS-muvgwqy9Mw" name="getString" specification="_LuMugI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyQvJo1TEeS-muvgwqy9Mw" name="obj" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyQvJ41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyQvKI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String val = null;
     try {
         val = obj.getString(key);
     } catch (JSONException e) {
     }
     return val;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyRWMI1TEeS-muvgwqy9Mw" name="parseAction" specification="_LuNVkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyRWMY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyRWMo1TEeS-muvgwqy9Mw" name="action" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Player player = players.get(connection);
     if (player == null || !game.getRacers().contains(player)) {
         return;
     }
     String type;
     try {
         type = action.getString(&quot;type&quot;);
     } catch (JSONException e) {
         connection.send(e.getMessage());
         return;
     }
     if (type == null) {
         connection.send(&quot;Invalid action type: &quot; + null);
         return;
     }
     if (type.equals(&quot;turnleft&quot;)) {
         player.turnLeft();
     } else if (type.equals(&quot;turnright&quot;)) {
         player.turnRight();
     } else if (type.equals(&quot;accelerate&quot;)) {
         player.accelerate();
     } else if (type.equals(&quot;stopaccelerate&quot;)) {
         player.stopAccelerating();
     } else if (type.equals(&quot;stopturning&quot;)) {
         player.stopTurning();
     } else if (type.equals(&quot;missile&quot;)) {
         player.fireMissile();
     } else if (type.equals(&quot;boost&quot;)) {
         player.boost();
         sendBoost(player);
     } else if (type.equals(&quot;mine&quot;)) {
         player.dropMine();
     } else {
         connection.send(&quot;Unknown action type: &quot; + type);
         return;
     }
     action.put(&quot;player&quot;, player.getName());
     sendToAll(action.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyRWM41TEeS-muvgwqy9Mw" name="parseRequest" specification="_LuN8oI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyRWNI1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyRWNY1TEeS-muvgwqy9Mw" name="request" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>String key;
     try {
         key = request.getString(&quot;key&quot;);
     } catch (JSONException e) {
         connection.send(e.getMessage());
         return;
     }
     Number value = constants.get(key);
     JSONObject response = new JSONObject();
     response.put(&quot;message&quot;, &quot;constant&quot;);
     response.put(&quot;name&quot;, key);
     if (value == null) {
         response.put(&quot;value&quot;, JSONObject.NULL);
     } else {
         response.put(&quot;value&quot;, value.toString());
     }
     connection.send(response);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LVQqEI1TEeS-muvgwqy9Mw" name="_initializer1" isStatic="true" method="_LyL2oI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LVRRII1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LVRRIY1TEeS-muvgwqy9Mw" key="init"/>
            </eAnnotations>
          </ownedOperation>
          <ownedOperation xmi:id="_LVRRI41TEeS-muvgwqy9Mw" name="_initializer2" isStatic="true" method="_LyL2oY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LVRRJI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LVR4MI1TEeS-muvgwqy9Mw" key="init"/>
            </eAnnotations>
          </ownedOperation>
          <ownedOperation xmi:id="_LVTtYI1TEeS-muvgwqy9Mw" name="getConnectionEntries" method="_LyNEwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVTtYY1TEeS-muvgwqy9Mw" type="_Lqvx4Y1TEeS-muvgwqy9Mw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LVTtYo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVU7gI1TEeS-muvgwqy9Mw" name="getNumberOfConnections" method="_LyNEw41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVU7gY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVU7go1TEeS-muvgwqy9Mw" name="getNumberOfObservers" method="_LyNExY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVU7g41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVU7hI1TEeS-muvgwqy9Mw" name="getNumberOfPlayers" method="_LyNr0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVVikI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVVikY1TEeS-muvgwqy9Mw" name="sendGameStart" method="_LyNr1I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVViko1TEeS-muvgwqy9Mw" name="sendGameState" method="_LyNr1Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVWwsI1TEeS-muvgwqy9Mw" name="sendToAll" method="_LyO59I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVWwsY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVWwso1TEeS-muvgwqy9Mw" name="start" method="_LyPhAI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVXXwI1TEeS-muvgwqy9Mw" name="stop" method="_LyPhAY1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVXXwY1TEeS-muvgwqy9Mw" name="update" method="_LyPhAo1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVX-0I1TEeS-muvgwqy9Mw" name="startRace" visibility="protected" method="_LyQIFY1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVYl4I1TEeS-muvgwqy9Mw" name="getGameStartMessage" visibility="private" method="_LyQvII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVYl4Y1TEeS-muvgwqy9Mw" name="tiled">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LuLgYI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqujwI1TEeS-muvgwqy9Mw" name="Protocol" method="_LyMdsI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lqujwo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lqujw41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LqujwY1TEeS-muvgwqy9Mw" name="game" type="_LWnU8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LqujxI1TEeS-muvgwqy9Mw" type="_LVPb8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqvK0I1TEeS-muvgwqy9Mw" name="connectPlayer" method="_LyMds41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqvK0Y1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lqvx4I1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqxAAY1TEeS-muvgwqy9Mw" name="sendDestroyed" method="_LyNr0o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqxAAo1TEeS-muvgwqy9Mw" name="car" type="_LVi98I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqxnEI1TEeS-muvgwqy9Mw" name="sendLapComplete" method="_LyOS4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqxnEY1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqyOII1TEeS-muvgwqy9Mw" name="sendMineHit" method="_LyOS4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqyOIY1TEeS-muvgwqy9Mw" name="mine" type="_LUYgUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LqyOIo1TEeS-muvgwqy9Mw" name="victim" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lqy1MI1TEeS-muvgwqy9Mw" name="sendMissileHit" method="_LyOS5Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LqzcQI1TEeS-muvgwqy9Mw" name="missile" type="_LUgcIY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LqzcQY1TEeS-muvgwqy9Mw" name="victim" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LqzcQo1TEeS-muvgwqy9Mw" name="sendBoost" method="_LyO58I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lq0DUI1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lq0qYI1TEeS-muvgwqy9Mw" name="connectionLost" visibility="protected" method="_LyQIEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lq0qYY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lq1RcI1TEeS-muvgwqy9Mw" name="parseInput" visibility="protected" method="_LyQIEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lq1RcY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lq1Rco1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lq14gI1TEeS-muvgwqy9Mw" name="disconnect" visibility="private" method="_LyQvI41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lq14gY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuHO8I1TEeS-muvgwqy9Mw" name="log" isStatic="true" method="_LyL2oo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuHO8Y1TEeS-muvgwqy9Mw" name="source" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuHO8o1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LuJEII1TEeS-muvgwqy9Mw" name="sendRaceOver" method="_LyO58o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuJEIY1TEeS-muvgwqy9Mw" name="placement" type="_LqprQY1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuKSQI1TEeS-muvgwqy9Mw" name="attemptHandShake" visibility="protected" method="_LyPhA41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuK5UI1TEeS-muvgwqy9Mw" name="line">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LuK5UY1TEeS-muvgwqy9Mw" name="err" type="_LqAyEY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuK5Uo1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuMugI1TEeS-muvgwqy9Mw" name="getString" visibility="private" method="_LyQvJY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuMugY1TEeS-muvgwqy9Mw" name="obj" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuMugo1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LuMug41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LuNVkI1TEeS-muvgwqy9Mw" name="parseAction" visibility="private" method="_LyRWMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuNVkY1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuNVko1TEeS-muvgwqy9Mw" name="action" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuN8oI1TEeS-muvgwqy9Mw" name="parseRequest" visibility="private" method="_LyRWM41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuOjsI1TEeS-muvgwqy9Mw" name="connection" type="_LUB7AI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuOjsY1TEeS-muvgwqy9Mw" name="request" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LVi98I1TEeS-muvgwqy9Mw" name="Car">
          <generalization xmi:id="_LrG-Q41TEeS-muvgwqy9Mw" general="_LUQkgI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxMYII1TEeS-muvgwqy9Mw" name="sidewaysFriction" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxM_MI1TEeS-muvgwqy9Mw" value="500"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxM_MY1TEeS-muvgwqy9Mw" name="frontFriction" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxM_Mo1TEeS-muvgwqy9Mw" value="100"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxNmQI1TEeS-muvgwqy9Mw" name="acceleration" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxNmQY1TEeS-muvgwqy9Mw" value="140 + frontFriction"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxNmQo1TEeS-muvgwqy9Mw" name="boostAcceleration" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxNmQ41TEeS-muvgwqy9Mw" value="acceleration * 3"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxONUI1TEeS-muvgwqy9Mw" name="topSpeed" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxONUY1TEeS-muvgwqy9Mw" value="200"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxONUo1TEeS-muvgwqy9Mw" name="boostSpeed" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxONU41TEeS-muvgwqy9Mw" value="topSpeed * 2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxO0YI1TEeS-muvgwqy9Mw" name="boostDuration" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxO0YY1TEeS-muvgwqy9Mw" value=".8"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxO0Yo1TEeS-muvgwqy9Mw" name="turningSpeed" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxO0Y41TEeS-muvgwqy9Mw" value=".35 * Math.PI"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxPbcI1TEeS-muvgwqy9Mw" name="collisionCooldown" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxPbcY1TEeS-muvgwqy9Mw" value=".5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxPbco1TEeS-muvgwqy9Mw" name="collisionRepulsion" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxQCgI1TEeS-muvgwqy9Mw" value="40"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxQCgY1TEeS-muvgwqy9Mw" name="collisionRotation" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxQCgo1TEeS-muvgwqy9Mw" value="Math.toRadians(15)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxQCg41TEeS-muvgwqy9Mw" name="damageThreshHold" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxQpkI1TEeS-muvgwqy9Mw" value="90"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxQpkY1TEeS-muvgwqy9Mw" name="hitbox" isLeaf="true" isStatic="true" type="_LrA3oI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lzmy8Y1TEeS-muvgwqy9Mw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxQpko1TEeS-muvgwqy9Mw" value="new Rectangle2D.Double(0, 0, 60, 45)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxRQoI1TEeS-muvgwqy9Mw" name="maxHP" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxRQoY1TEeS-muvgwqy9Mw" value="6"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxRQoo1TEeS-muvgwqy9Mw" name="minSpeed" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxRQo41TEeS-muvgwqy9Mw" value="50"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxR3sI1TEeS-muvgwqy9Mw" name="epsilon" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxR3sY1TEeS-muvgwqy9Mw" value="10e-5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxR3so1TEeS-muvgwqy9Mw" name="accelerating">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxSewI1TEeS-muvgwqy9Mw" name="boost" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxTF0I1TEeS-muvgwqy9Mw" name="cooldown" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxTF0o1TEeS-muvgwqy9Mw" name="facing" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxTs4I1TEeS-muvgwqy9Mw" name="hp" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxUT8I1TEeS-muvgwqy9Mw" name="mine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxU7AI1TEeS-muvgwqy9Mw" name="turning">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_LrBesY1TEeS-muvgwqy9Mw" client="_LVi98I1TEeS-muvgwqy9Mw" supplier="_LTuZAI1TEeS-muvgwqy9Mw" contract="_LTuZAI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyR9QI1TEeS-muvgwqy9Mw" name="Car" specification="_LVmBQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyR9QY1TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(new Point(), 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LySkUI1TEeS-muvgwqy9Mw" name="Car" specification="_LuSOEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LySkUY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LySkUo1TEeS-muvgwqy9Mw" name="facing" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LySkU41TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(location, facing.getAngle());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LySkVI1TEeS-muvgwqy9Mw" name="Car" specification="_LuTcMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LySkVY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LySkVo1TEeS-muvgwqy9Mw" name="facing">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LySkV41TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(location, new Vector2D.Polar(0, 0));
     this.facing = facing;
     accelerating = 0;
     turning = 0;
     cooldown = 0;
     hp = maxHP;
     boost = 0;
     mine = 0;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LySkWI1TEeS-muvgwqy9Mw" name="addCheckPointListener" specification="_LrD68I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LySkWY1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>getListeners().add(CheckPointListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTLYI1TEeS-muvgwqy9Mw" name="boost" specification="_LVnPYI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>boost = boostDuration;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTLYY1TEeS-muvgwqy9Mw" name="collideWith" specification="_LrEiAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTLYo1TEeS-muvgwqy9Mw" name="other" type="_LYEtgI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>CheckPointListener[] ls = getListeners().getListeners(
             CheckPointListener.class);
     CheckPointEvent event = new CheckPointEvent(this, other);
     for (CheckPointListener listener : ls) {
         listener.checkPoint(event);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTLY41TEeS-muvgwqy9Mw" name="collideWith" specification="_LrFJEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTLZI1TEeS-muvgwqy9Mw" name="other" type="_LWYrcI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Point2D center = new Point2D.Double(other.getTrackArea().getBounds2D()
             .getCenterX(), other.getTrackArea().getBounds2D().getCenterY());
     Vector2D fromCenter = new Vector2D.Cartesian(center, getLocation());
     double bounceDirection = fromCenter.getDirection();
     int turndir = -1;
     Area test = getArea();
     test.intersect(other.getOuterArea());
     if (!test.isEmpty() || !getArea().intersects(other.getArea().getBounds2D())) {
         bounceDirection += Math.PI;
         turndir = 1;
     }
     Vector2D facingVector = new Vector2D.Polar(facing, 10);
     Line2D facingLine = new Line2D.Double(getLocation(),
             facingVector.applyTo(getLocation()));
     turndir *= CollisionTools.isRight(facingLine, center);

     // turn the car, but only if that doesn't cause another collision
     double oldFacing = facing;
     facing += turndir * collisionRotation;
     test = getArea();
     test.intersect(other.getNegative());
     if (!test.isEmpty()) {
         facing = oldFacing;
     }

     // brake the car
     setSpeed(getSpeed().scale(
             Math.abs(Math.sin(getSpeed().angleBetween(fromCenter)))));

     // bounce
     setSpeed(getSpeed().add(
             new Vector2D.Polar(bounceDirection, collisionRepulsion)));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTLZY1TEeS-muvgwqy9Mw" name="damage" specification="_LVn2cI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTLZo1TEeS-muvgwqy9Mw" name="damage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyTLZ41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>hp -= damage;
     if (hp &lt;= 0) {
         stopTurning();
         setAccelerating(0);
         destroy();
     }
     return hp &lt;= 0;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTycI1TEeS-muvgwqy9Mw" name="getArea" specification="_LVodgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTycY1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Area res = new Area(hitbox);
     res.transform(AffineTransform.getTranslateInstance(
             -hitbox.getWidth() / 2, -hitbox.getHeight() / 2));
     res.transform(AffineTransform.getRotateInstance(facing));
     res.transform(AffineTransform.getTranslateInstance(
             getLocation().getX(), getLocation().getY()));
     return res;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTyco1TEeS-muvgwqy9Mw" name="getHP" specification="_LVpEko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTyc41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return hp;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyTydI1TEeS-muvgwqy9Mw" name="getIntLocation" specification="_LVproI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyTydY1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return new Point((int) getLocation().getX(), (int) getLocation().getY());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyUZgI1TEeS-muvgwqy9Mw" name="isBoosting" specification="_LVproY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyUZgY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return boost > 0;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyUZgo1TEeS-muvgwqy9Mw" name="isStunned" specification="_LVqSsY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyUZg41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return mine > 0;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyUZhI1TEeS-muvgwqy9Mw" name="mine" specification="_LVqSs41TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>mine = Mine.disableDuration;
     setSpeed(new Vector2D.Polar(facing, 0));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyUZhY1TEeS-muvgwqy9Mw" name="removeCheckPointListener" specification="_LrFwII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyUZho1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>getListeners().remove(CheckPointListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyVAkI1TEeS-muvgwqy9Mw" name="setTurning" specification="_LrGXMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyVAkY1TEeS-muvgwqy9Mw" name="dir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (dir == Direction.LEFT) {
         turning = -1;
     } else if (dir == Direction.RIGHT) {
         turning = 1;
     } else {
         turning = 0;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyVAko1TEeS-muvgwqy9Mw" name="stopTurning" specification="_LVq5wI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>setTurning(0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyVAk41TEeS-muvgwqy9Mw" name="update" specification="_LVrg0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyVAlI1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (cooldown > 0) {
         cooldown -= delta;
     }

     if (mine > 0) {
         mine -= delta;
         return;
     }

     if (turning != 0) {
         facing += Math.signum(turning) * turningSpeed
                 * Math.min(1, getSpeed().getMagnitude() / minSpeed) * delta;
     }

     Vector2D accel = new Vector2D.Cartesian(0, 0);

     // car acceleration
     if (isBoosting()) {
         accel = accel.add(new Vector2D.Polar(facing, boostAcceleration));
     } else if (accelerating > 0) {
         accel = accel.add(new Vector2D.Polar(facing, acceleration));
     }

     // friction and drag
     if (getSpeed().getSquareMagnitude() > epsilon * epsilon) {
         double angle = facing - getSpeed().getDirection();
         double magnitude = Math.abs(Math.sin(angle))
                 * (sidewaysFriction - frontFriction) + frontFriction;
         accel = accel.add(new Vector2D.Polar(getSpeed().getDirection()
                 - Math.PI, magnitude));
     }

     Vector2D loc = new Vector2D.Cartesian(getLocation().getX(),
             getLocation().getY());
     Vector2D oldSpeed = getSpeed();
     setSpeed(getSpeed().add(accel.scale(delta)));
     if (!isBoosting()
             &amp;&amp; getSpeed().getSquareMagnitude() > topSpeed * topSpeed) {
         setSpeed(new Vector2D.Polar(getSpeed().getDirection(), topSpeed));
     } else if (isBoosting()
             &amp;&amp; getSpeed().getSquareMagnitude() > boostSpeed * boostSpeed) {
         setSpeed(new Vector2D.Polar(getSpeed().getDirection(), boostSpeed));
     }
     loc = loc.add(oldSpeed.add(getSpeed()).scale(delta));

     setLocation(new Point2D.Double(loc.getX(), loc.getY()));

     if (boost > 0) {
         boost -= delta;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyVAlY1TEeS-muvgwqy9Mw" name="toJSON" specification="_LVsH4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyVAlo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject result = super.toJSON();
     result.put(&quot;message&quot;, &quot;car&quot;);
     result.put(&quot;hp&quot;, getHP());
     result.put(&quot;facing&quot;, getFacing());
     result.put(&quot;accelerating&quot;, getAccelerating() == 1);
     result.put(&quot;turning&quot;, getTurning());
     return result;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyVnoI1TEeS-muvgwqy9Mw" name="collide" specification="_LrG-QI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyVnoY1TEeS-muvgwqy9Mw" name="one" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyVnoo1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (one.cooldown > 0 &amp;&amp; other.cooldown > 0) {
         return;
     }
     one.cooldown = collisionCooldown;
     other.cooldown = collisionCooldown;
     double onespeed = one.getSpeed().getMagnitude();
     double otherspeed = other.getSpeed().getMagnitude();
     double fasterspeed = Math.max(onespeed, otherspeed);
     double slowerspeed = Math.min(onespeed, otherspeed);
     // if the cars are headed towards each other - add the speeds
     // if they are going the same way - subtract
     // if they are going perpendicular to eacth other, take the faster one
     double speedDiff = fasterspeed
             - Math.cos(one.getSpeed().angleBetween(other.getSpeed())) * slowerspeed;
     Vector2D ab = new Vector2D.Polar(new Vector2D.Cartesian(
             one.getLocation(), other.getLocation()).getDirection(),
             speedDiff);
     one.setSpeed(one.getSpeed().subtract(ab));
     other.setSpeed(other.getSpeed().add(ab));
     if (speedDiff > damageThreshHold) {
         if (fasterspeed == onespeed) {
             other.damage((int) (speedDiff / damageThreshHold));
         } else {
             one.damage((int) (speedDiff / damageThreshHold));
         }
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LVmBQI1TEeS-muvgwqy9Mw" name="Car" method="_LyR9QI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LVmBQY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LVmBQo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LVmBQ41TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LVnPYI1TEeS-muvgwqy9Mw" name="boost" method="_LyTLYI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVn2cI1TEeS-muvgwqy9Mw" name="damage" method="_LyTLZY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVn2cY1TEeS-muvgwqy9Mw" name="damage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LVn2co1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVodgI1TEeS-muvgwqy9Mw" name="getArea" method="_LyTycI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuUqUI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LVpEko1TEeS-muvgwqy9Mw" name="getHP" method="_LyTyco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVpEk41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVproI1TEeS-muvgwqy9Mw" name="getIntLocation" method="_LyTydI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuUqUY1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LVproY1TEeS-muvgwqy9Mw" name="isBoosting" method="_LyUZgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVqSsI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVqSsY1TEeS-muvgwqy9Mw" name="isStunned" method="_LyUZgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVqSso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVqSs41TEeS-muvgwqy9Mw" name="mine" method="_LyUZhI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVq5wI1TEeS-muvgwqy9Mw" name="stopTurning" method="_LyVAko1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LVrg0I1TEeS-muvgwqy9Mw" name="update" method="_LyVAk41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LVrg0Y1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LVsH4o1TEeS-muvgwqy9Mw" name="toJSON" method="_LyVAlY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuVRYI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrD68I1TEeS-muvgwqy9Mw" name="addCheckPointListener" method="_LySkWI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrD68Y1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrEiAI1TEeS-muvgwqy9Mw" name="collideWith" method="_LyTLYY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrEiAY1TEeS-muvgwqy9Mw" name="other" type="_LYEtgI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrFJEI1TEeS-muvgwqy9Mw" name="collideWith" method="_LyTLY41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrFJEY1TEeS-muvgwqy9Mw" name="other" type="_LWYrcI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrFwII1TEeS-muvgwqy9Mw" name="removeCheckPointListener" method="_LyUZhY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrFwIY1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrGXMI1TEeS-muvgwqy9Mw" name="setTurning" method="_LyVAkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrGXMY1TEeS-muvgwqy9Mw" name="dir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrG-QI1TEeS-muvgwqy9Mw" name="collide" isStatic="true" method="_LyVnoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrG-QY1TEeS-muvgwqy9Mw" name="one" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LrG-Qo1TEeS-muvgwqy9Mw" name="other" type="_LVi98I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuSOEI1TEeS-muvgwqy9Mw" name="Car" method="_LySkUI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LuSOE41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LuSOFI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LuSOEY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuSOEo1TEeS-muvgwqy9Mw" name="facing" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuSOFY1TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuTcMI1TEeS-muvgwqy9Mw" name="Car" method="_LySkVI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LuUDQI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LuUDQY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LuTcMY1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuTcMo1TEeS-muvgwqy9Mw" name="facing">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LuUDQo1TEeS-muvgwqy9Mw" type="_LVi98I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LV2f8I1TEeS-muvgwqy9Mw" name="Player">
          <ownedAttribute xmi:id="_LxWJII1TEeS-muvgwqy9Mw" name="maxMissiles" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxWJIY1TEeS-muvgwqy9Mw" value="3"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxWJIo1TEeS-muvgwqy9Mw" name="maxBoosts" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxWwMI1TEeS-muvgwqy9Mw" value="3"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxWwMY1TEeS-muvgwqy9Mw" name="maxMines" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxWwMo1TEeS-muvgwqy9Mw" value="3"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxWwM41TEeS-muvgwqy9Mw" name="car" type="_LVi98I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LznaAY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxXXQI1TEeS-muvgwqy9Mw" name="checkPoints" visibility="private" type="_LYEtgI1TEeS-muvgwqy9Mw" isOrdered="true" association="_LzoBEI1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxXXQY1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxX-UY1TEeS-muvgwqy9Mw" name="completedLaps" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxX-Uo1TEeS-muvgwqy9Mw" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxYlYI1TEeS-muvgwqy9Mw" name="missiles" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxYlYY1TEeS-muvgwqy9Mw" name="boosts" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxYlYo1TEeS-muvgwqy9Mw" name="mines" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxZMcI1TEeS-muvgwqy9Mw" name="preferredCharacter" type="_LVJVUI1TEeS-muvgwqy9Mw" isReadOnly="true"/>
          <ownedAttribute xmi:id="_LxZMcY1TEeS-muvgwqy9Mw" name="character" type="_LVJVUI1TEeS-muvgwqy9Mw" association="_LzCLMI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxZzgI1TEeS-muvgwqy9Mw" name="carType" type="_LTw1QI1TEeS-muvgwqy9Mw" isReadOnly="true"/>
          <ownedAttribute xmi:id="_LxZzgY1TEeS-muvgwqy9Mw" name="tiledMap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxaakY1TEeS-muvgwqy9Mw" name="listeners" visibility="private" type="_LqTF8Y1TEeS-muvgwqy9Mw" association="_LzoBE41TEeS-muvgwqy9Mw"/>
          <interfaceRealization xmi:id="_LrPhII1TEeS-muvgwqy9Mw" client="_LV2f8I1TEeS-muvgwqy9Mw" supplier="_LT274I1TEeS-muvgwqy9Mw" contract="_LT274I1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyWOsI1TEeS-muvgwqy9Mw" name="Player" specification="_LV48MI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyWOsY1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(false);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyWOso1TEeS-muvgwqy9Mw" name="Player" specification="_LV5jQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyWOs41TEeS-muvgwqy9Mw" name="tiledMap">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyWOtI1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>name = null;
     preferredCharacter = null;
     carType = null;
     checkPoints = null;
     car = null;
     completedLaps = -1;
     listeners = null;
     missiles = -1;
     this.tiledMap = tiledMap;
     boosts = -1;
     mines = -1;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyW1wI1TEeS-muvgwqy9Mw" name="Player" specification="_LrQvQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyW1wY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyW1wo1TEeS-muvgwqy9Mw" name="raceCharacter" type="_LVJVUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyW1w41TEeS-muvgwqy9Mw" name="carType" type="_LTw1QI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyW1xI1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(name, raceCharacter, carType, false);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyW1xY1TEeS-muvgwqy9Mw" name="Player" specification="_LrRWUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyW1xo1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyW1x41TEeS-muvgwqy9Mw" name="raceCharacter" type="_LVJVUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyW1yI1TEeS-muvgwqy9Mw" name="carType" type="_LTw1QI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyW1yY1TEeS-muvgwqy9Mw" name="tiledMap">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyW1yo1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.name = name;
     preferredCharacter = raceCharacter;
     character = null;
     this.carType = carType;
     checkPoints = new ArrayList&lt;>();
     car = null;
     completedLaps = 0;
     listeners = new EventListenerList();
     missiles = maxMissiles;
     this.tiledMap = tiledMap;
     boosts = maxBoosts;
     mines = maxMines;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyXc0I1TEeS-muvgwqy9Mw" name="checkPointCompleted" specification="_LrR9ZI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyXc0Y1TEeS-muvgwqy9Mw" name="e" type="_LWQvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (checkPoints.contains(e.getCheckPoint())) {
         if (!(e.getCheckPoint() instanceof FinishLine)
                 || e.getCheckPoint() == getLastCheckPoint()) {
             return;
         }
     } else {
         checkPoints.add(0, e.getCheckPoint());
     }
     CheckPointListener[] ls = listeners.getListeners(CheckPointListener.class);
     CheckPointEvent event = new CheckPointEvent(this, e.getCheckPoint());
     for (CheckPointListener listener : ls) {
         listener.checkPoint(event);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyXc0o1TEeS-muvgwqy9Mw" name="completeLap" specification="_LV7YcI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>checkPoints.clear();
     completedLaps++;
     missiles = maxMissiles;
     boosts = maxBoosts;
     mines = maxMines;
     LapCompletedListener[] ls = listeners.getListeners(LapCompletedListener.class);
     LapCompletedEvent event = new LapCompletedEvent(this);
     for (LapCompletedListener listener : ls) {
         listener.lapCompleted(event);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyXc041TEeS-muvgwqy9Mw" name="carDestroyed" specification="_LrSkcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyXc1I1TEeS-muvgwqy9Mw" name="e" type="_LXoooI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>car = null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD4I1TEeS-muvgwqy9Mw" name="accelerate" specification="_LV7_gI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null) {
         car.setAccelerating(1);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD4Y1TEeS-muvgwqy9Mw" name="stopAccelerating" specification="_LV7_gY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null) {
         car.setAccelerating(0);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD4o1TEeS-muvgwqy9Mw" name="turnLeft" specification="_LV8mkI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null) {
         car.setTurning(Direction.LEFT);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD441TEeS-muvgwqy9Mw" name="turnRight" specification="_LV9NoI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null) {
         car.setTurning(Direction.RIGHT);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD5I1TEeS-muvgwqy9Mw" name="stopTurning" specification="_LV9NoY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null) {
         car.setTurning(0);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD5Y1TEeS-muvgwqy9Mw" name="fireMissile" specification="_LV9Noo1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null &amp;&amp; missiles > 0) {
         missiles--;
         Missile missile = new Missile(this);
         // activate listeners
         MissileFireListener[] ls = listeners.getListeners(MissileFireListener.class);
         MissileFireEvent event = new MissileFireEvent(this, missile);
         for (MissileFireListener listener : ls) {
             listener.missileFired(event);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYD5o1TEeS-muvgwqy9Mw" name="boost" specification="_LV90sI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null &amp;&amp; boosts > 0) {
         boosts--;
         car.boost();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYq8I1TEeS-muvgwqy9Mw" name="dropMine" specification="_LV90sY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (car != null &amp;&amp; mines > 0) {
         mines--;
         Vector2D offset = new Vector2D.Polar(car.getFacing() + Math.PI,
                 Car.hitbox.getWidth() * .6);
         Mine mine = new Mine(offset.applyTo(car.getLocation()));
         // activate Listeners
         MineDropListener[] ls = listeners.getListeners(MineDropListener.class);
         MineDropEvent event = new MineDropEvent(this, mine);
         for (MineDropListener listener : ls) {
             listener.mineDropped(event);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYq8Y1TEeS-muvgwqy9Mw" name="setCar" specification="_LrSkco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyYq8o1TEeS-muvgwqy9Mw" name="car" type="_LVi98I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (car == this.car) {
         return;
     }
     this.car = car;
     if(car == null) {
     	return;
     }
     car.addCheckPointListener(new CheckPointListener() {
         @Override
         public void checkPoint(CheckPointEvent e) {
             checkPointCompleted(e);
         }
     });
     car.addDestroyedListener(new DestroyedListener() {
         @Override
         public void destroyed(DestroyedEvent e) {
             carDestroyed(e);
             
         }
     });
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYq841TEeS-muvgwqy9Mw" name="clear" specification="_LV-bwI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>completedLaps = 0;
 	checkPoints.clear();
 	listeners = new EventListenerList();
 	missiles = maxMissiles;
 	boosts = maxBoosts;
 	mines = maxMines;
 	setCar(null);
 	character = null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYq9I1TEeS-muvgwqy9Mw" name="isObserver" specification="_LV_C0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyYq9Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return name == null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyYq9o1TEeS-muvgwqy9Mw" name="transferMapTiled" specification="_LV_p4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyYq941TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return tiledMap;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZSAI1TEeS-muvgwqy9Mw" name="getNumberOfCheckPoints" specification="_LV_p4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZSAY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return checkPoints.size();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZSAo1TEeS-muvgwqy9Mw" name="getLastCheckPoint" specification="_LWAQ8Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZSA41TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return checkPoints.get(0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZSBI1TEeS-muvgwqy9Mw" name="addMissileFireListener" specification="_LrTLgY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZSBY1TEeS-muvgwqy9Mw" name="listener" type="_LX3SII1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.add(MissileFireListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZSBo1TEeS-muvgwqy9Mw" name="removeMissileFireListener" specification="_LrTykI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZSB41TEeS-muvgwqy9Mw" name="listener" type="_LX3SII1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.remove(MissileFireListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZ5EI1TEeS-muvgwqy9Mw" name="addLapCompletedListener" specification="_LrTyko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZ5EY1TEeS-muvgwqy9Mw" name="listener" type="_LXv9YI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.add(LapCompletedListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZ5Eo1TEeS-muvgwqy9Mw" name="removeLapCompletedListener" specification="_LrUZoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZ5E41TEeS-muvgwqy9Mw" name="listener" type="_LXv9YI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.remove(LapCompletedListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyZ5FI1TEeS-muvgwqy9Mw" name="addCheckPointListener" specification="_LrUZoo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyZ5FY1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.add(CheckPointListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyagII1TEeS-muvgwqy9Mw" name="removeCheckPointListener" specification="_LrVAsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyagIY1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.remove(CheckPointListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyagIo1TEeS-muvgwqy9Mw" name="addMineDropListener" specification="_LrVAso1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyagI41TEeS-muvgwqy9Mw" name="listener" type="_LXznwI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.add(MineDropListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyagJI1TEeS-muvgwqy9Mw" name="removeMineDropListener" specification="_LrVnwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyagJY1TEeS-muvgwqy9Mw" name="listener" type="_LXznwI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>listeners.remove(MineDropListener.class, listener);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyagJo1TEeS-muvgwqy9Mw" name="toString" specification="_LWBfEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyagJ41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (isObserver()) {
         return &quot;Observer&quot;;
     }
     RaceCharacter ch = character;
     if (ch == null) {
         ch = preferredCharacter;
     }
     return name + &quot;(&quot; + ch.getName() + &quot;), in a &quot; + carType.getName();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LybHMI1TEeS-muvgwqy9Mw" name="toJSON" specification="_LWCGI41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LybHMY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject message = new JSONObject();
     message.put(&quot;message&quot;, &quot;player&quot;);
     message.put(&quot;name&quot;, name);
     RaceCharacter ch = character;
     if (ch == null) {
         ch = preferredCharacter;
     }
     message.put(&quot;character&quot;, ch.getName());
     message.put(&quot;cartype&quot;, carType.getName());
     return message;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LV48MI1TEeS-muvgwqy9Mw" name="Player" method="_LyWOsI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LV48MY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LV48Mo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LV48M41TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LV5jQI1TEeS-muvgwqy9Mw" name="Player" method="_LyWOso1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LV5jQo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LV5jQ41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LV5jQY1TEeS-muvgwqy9Mw" name="tiledMap">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LV5jRI1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LV7YcI1TEeS-muvgwqy9Mw" name="completeLap" method="_LyXc0o1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV7_gI1TEeS-muvgwqy9Mw" name="accelerate" method="_LyYD4I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV7_gY1TEeS-muvgwqy9Mw" name="stopAccelerating" method="_LyYD4Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV8mkI1TEeS-muvgwqy9Mw" name="turnLeft" method="_LyYD4o1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV9NoI1TEeS-muvgwqy9Mw" name="turnRight" method="_LyYD441TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV9NoY1TEeS-muvgwqy9Mw" name="stopTurning" method="_LyYD5I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV9Noo1TEeS-muvgwqy9Mw" name="fireMissile" method="_LyYD5Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV90sI1TEeS-muvgwqy9Mw" name="boost" method="_LyYD5o1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV90sY1TEeS-muvgwqy9Mw" name="dropMine" method="_LyYq8I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV-bwI1TEeS-muvgwqy9Mw" name="clear" method="_LyYq841TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LV_C0I1TEeS-muvgwqy9Mw" name="isObserver" method="_LyYq9I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LV_C0Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LV_p4I1TEeS-muvgwqy9Mw" name="transferMapTiled" method="_LyYq9o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LV_p4Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LV_p4o1TEeS-muvgwqy9Mw" name="getNumberOfCheckPoints" method="_LyZSAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LWAQ8I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LWAQ8Y1TEeS-muvgwqy9Mw" name="getLastCheckPoint" method="_LyZSAo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrTLgI1TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWBfEI1TEeS-muvgwqy9Mw" name="toString" method="_LyagJo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LWBfEY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LWCGI41TEeS-muvgwqy9Mw" name="toJSON" method="_LybHMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Luaw8I1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrQvQI1TEeS-muvgwqy9Mw" name="Player" method="_LyW1wI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LrQvRI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LrQvRY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LrQvQY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LrQvQo1TEeS-muvgwqy9Mw" name="raceCharacter" type="_LVJVUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LrQvQ41TEeS-muvgwqy9Mw" name="carType" type="_LTw1QI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LrQvRo1TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrRWUI1TEeS-muvgwqy9Mw" name="Player" method="_LyW1xY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LrR9YY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LrR9Yo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LrRWUY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LrRWUo1TEeS-muvgwqy9Mw" name="raceCharacter" type="_LVJVUI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LrRWU41TEeS-muvgwqy9Mw" name="carType" type="_LTw1QI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LrR9YI1TEeS-muvgwqy9Mw" name="tiledMap">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LrR9Y41TEeS-muvgwqy9Mw" type="_LV2f8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrR9ZI1TEeS-muvgwqy9Mw" name="checkPointCompleted" method="_LyXc0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrR9ZY1TEeS-muvgwqy9Mw" name="e" type="_LWQvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrSkcI1TEeS-muvgwqy9Mw" name="carDestroyed" method="_LyXc041TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrSkcY1TEeS-muvgwqy9Mw" name="e" type="_LXoooI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrSkco1TEeS-muvgwqy9Mw" name="setCar" method="_LyYq8Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrSkc41TEeS-muvgwqy9Mw" name="car" type="_LVi98I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrTLgY1TEeS-muvgwqy9Mw" name="addMissileFireListener" method="_LyZSBI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrTLgo1TEeS-muvgwqy9Mw" name="listener" type="_LX3SII1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrTykI1TEeS-muvgwqy9Mw" name="removeMissileFireListener" method="_LyZSBo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrTykY1TEeS-muvgwqy9Mw" name="listener" type="_LX3SII1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrTyko1TEeS-muvgwqy9Mw" name="addLapCompletedListener" method="_LyZ5EI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrTyk41TEeS-muvgwqy9Mw" name="listener" type="_LXv9YI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrUZoI1TEeS-muvgwqy9Mw" name="removeLapCompletedListener" method="_LyZ5Eo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrUZoY1TEeS-muvgwqy9Mw" name="listener" type="_LXv9YI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrUZoo1TEeS-muvgwqy9Mw" name="addCheckPointListener" method="_LyZ5FI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrUZo41TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrVAsI1TEeS-muvgwqy9Mw" name="removeCheckPointListener" method="_LyagII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrVAsY1TEeS-muvgwqy9Mw" name="listener" type="_LWO6cI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrVAso1TEeS-muvgwqy9Mw" name="addMineDropListener" method="_LyagIo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrVAs41TEeS-muvgwqy9Mw" name="listener" type="_LXznwI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LrVnwI1TEeS-muvgwqy9Mw" name="removeMineDropListener" method="_LyagJI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LrVnwY1TEeS-muvgwqy9Mw" name="listener" type="_LXznwI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LWR9wI1TEeS-muvgwqy9Mw" name="TrackLoader">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LycVUI1TEeS-muvgwqy9Mw" name="loadTrack" specification="_LWSk0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LycVUY1TEeS-muvgwqy9Mw" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LycVUo1TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>BufferedReader reader;
		try {
			reader = new BufferedReader(new FileReader(path));
		} catch (FileNotFoundException e) {
			throw new RuntimeException(e);
		}
		Direction startDir = null;
		String line = reader.readLine();
		ArrayList&lt;TrackTile> tiles = new ArrayList&lt;>();
		while (line != null) {
			String[] tokens = line.split(&quot; &quot;);
			if (tokens.length != 2) {
				reader.close();
				throw new RuntimeException(
						&quot;Invalid track format - wrong number of tokens in line :&quot;
								+ line);
			}
			Direction dir;
			try {
				 dir = Direction.valueOf(tokens[1]);
			} catch (IllegalArgumentException e) {
				reader.close();
				throw new RuntimeException(e);
			}
			if(startDir == null) {
				startDir = dir;
			}
			
			if(tokens[0].equals(&quot;Straight&quot;)) {
				tiles.add(new Straight(dir));
			} else if(tokens[0].equals(&quot;Curve&quot;)) {
				tiles.add(new Curve(dir));
			} else if(tokens[0].equals(&quot;FinishLine&quot;)) {
				tiles.add(new FinishLine(dir));
			} else if(tokens[0].equals(&quot;CheckPoint&quot;)) {
				tiles.add(new CheckPoint(dir));
			}

			line = reader.readLine();
		}
		reader.close();
		return new Track(startDir, tiles);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LWSk0I1TEeS-muvgwqy9Mw" name="loadTrack" isStatic="true" method="_LycVUI1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LWSk0Y1TEeS-muvgwqy9Mw" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LrexsY1TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LWTy8I1TEeS-muvgwqy9Mw" name="TrackState">
          <ownedAttribute xmi:id="_Lxdd4Y1TEeS-muvgwqy9Mw" name="location" type="_Lq_pgI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzpPMY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxesAY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw" isReadOnly="true"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyc8YI1TEeS-muvgwqy9Mw" name="TrackState" specification="_Lrf_0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyc8YY1TEeS-muvgwqy9Mw" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lyc8Yo1TEeS-muvgwqy9Mw" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lyc8Y41TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyc8ZI1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.location = new Point(x, y);
		this.direction = direction;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyc8ZY1TEeS-muvgwqy9Mw" name="TrackState" specification="_LugQgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyc8Zo1TEeS-muvgwqy9Mw" name="location" type="_Lq_pgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyc8Z41TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyc8aI1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(location.x, location.y, direction);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyc8aY1TEeS-muvgwqy9Mw" name="equals" specification="_LuiFsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyc8ao1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyc8a41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(other instanceof TrackState)) {
			return false;
		}
		TrackState other2 = (TrackState) other;
		return location.equals(other2.location)
				&amp;&amp; direction == other2.direction;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Lrf_0I1TEeS-muvgwqy9Mw" name="TrackState" method="_Lyc8YI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lrgm4I1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lrgm4Y1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lrf_0Y1TEeS-muvgwqy9Mw" name="x">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lrf_0o1TEeS-muvgwqy9Mw" name="y">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lrf_041TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lrgm4o1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LugQgI1TEeS-muvgwqy9Mw" name="TrackState" method="_Lyc8ZY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lug3ko1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lug3k41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lug3kI1TEeS-muvgwqy9Mw" name="location" type="_Lq_pgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lug3kY1TEeS-muvgwqy9Mw" name="direction" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lug3lI1TEeS-muvgwqy9Mw" type="_LWTy8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LuiFsI1TEeS-muvgwqy9Mw" name="equals" method="_Lyc8aY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuiFsY1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuiFso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LWXdUI1TEeS-muvgwqy9Mw" name="Updates">
          <ownedOperation xmi:id="_LWYEYI1TEeS-muvgwqy9Mw" name="update">
            <ownedParameter xmi:id="_LWYEYY1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LWYrcI1TEeS-muvgwqy9Mw" name="Track">
          <ownedAttribute xmi:id="_LxfTEI1TEeS-muvgwqy9Mw" name="checkPoints" visibility="private" type="_LYEtgI1TEeS-muvgwqy9Mw" isOrdered="true" association="_Lzp2QY1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lxf6II1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lxf6Io1TEeS-muvgwqy9Mw" name="finishLine" type="_LYIX4I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzqdUY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxghMI1TEeS-muvgwqy9Mw" name="image" visibility="private" type="_LrlfYY1TEeS-muvgwqy9Mw" association="_LzrEYY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxhIQI1TEeS-muvgwqy9Mw" name="innerArea" type="_LpsB8I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzsSgY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxhIQY1TEeS-muvgwqy9Mw" name="negative" type="_LpsB8I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lzs5kY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxhIQo1TEeS-muvgwqy9Mw" name="outerArea" type="_LpsB8I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_LzuHsI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxhvUI1TEeS-muvgwqy9Mw" name="startDir" visibility="private" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxiWYI1TEeS-muvgwqy9Mw" name="tiles" visibility="private" type="_LYm5AI1TEeS-muvgwqy9Mw" association="_LzuuwY1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxiWYY1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lxi9cY1TEeS-muvgwqy9Mw" name="track" visibility="private" type="_LpsB8I1TEeS-muvgwqy9Mw" association="_LzvV0Y1TEeS-muvgwqy9Mw"/>
          <interfaceRealization xmi:id="_LrmtgI1TEeS-muvgwqy9Mw" client="_LWYrcI1TEeS-muvgwqy9Mw" supplier="_LTuZAI1TEeS-muvgwqy9Mw" contract="_LTuZAI1TEeS-muvgwqy9Mw"/>
          <interfaceRealization xmi:id="_LrmtgY1TEeS-muvgwqy9Mw" client="_LWYrcI1TEeS-muvgwqy9Mw" supplier="_LT274I1TEeS-muvgwqy9Mw" contract="_LT274I1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LydjcI1TEeS-muvgwqy9Mw" name="convert" specification="_Luj64I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LydjcY1TEeS-muvgwqy9Mw" name="tiles" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lydjco1TEeS-muvgwqy9Mw" type="_LYm5AI1TEeS-muvgwqy9Mw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lydjc41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>TrackTile[] tiles2 = new TrackTile[tiles.size()];
     tiles.toArray(tiles2);
     return tiles2;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyeKgI1TEeS-muvgwqy9Mw" name="Track" specification="_Lum-MI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyeKgY1TEeS-muvgwqy9Mw" name="startDir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyeKgo1TEeS-muvgwqy9Mw" name="tiles" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyeKg41TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(startDir, convert(tiles));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyeKhI1TEeS-muvgwqy9Mw" name="Track" specification="_LroisI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyeKhY1TEeS-muvgwqy9Mw" name="startDir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyeKho1TEeS-muvgwqy9Mw" name="tiles" type="_LYm5AI1TEeS-muvgwqy9Mw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LyeKh41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyeKiI1TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>TrackState startstate = new TrackState(new Point(), startDir);
     TrackState state = startstate;
     checkPoints = new ArrayList&lt;>();
     finishLine = null;

     for (TrackTile tile : tiles) {
         if (tile instanceof FinishLine) {
             if (finishLine == null) {
                 finishLine = (FinishLine) tile;
             } else {
                 throw new IllegalArgumentException(&quot;Track contains several start/finish lines.&quot;);
             }
         }
         if (tile instanceof CheckPoint) {
             checkPoints.add((CheckPoint) tile);
         }
         tile.calcLocation(state);
         state = tile.getConnect(state.getDirection());
     }
     if (!state.equals(startstate)) {
         for(TrackTile tile : tiles) {
             System.out.println(tile.toString());
         }
         throw new IllegalArgumentException(&quot;Track is not a closed circuit: Startdir: &quot;
                 + startstate.getDirection().toString() + &quot;, enddir &quot; + state.getDirection().toString()
                 + &quot;; startPos &quot; + startstate.getLocation().toString() + &quot;, endpos &quot; + state.getLocation().toString());
     }
     if (finishLine == null) {
         throw new IllegalArgumentException(
                 &quot;Track contains no start/finish line.&quot;);
     }
     if (checkPoints.size() &lt;= 1) {
         throw new IllegalArgumentException(&quot;Track contains no checkpoints.&quot;);
     }
     this.startDir = startDir;
     this.tiles = tiles;
     bake();
     makeNegative();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyexkI1TEeS-muvgwqy9Mw" name="getArea" specification="_LWbHsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyexkY1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return getNegative();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyexko1TEeS-muvgwqy9Mw" name="getCheckpoints" specification="_LWcV0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyexk41TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LyexlI1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return new ArrayList&lt;>(checkPoints);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyexlY1TEeS-muvgwqy9Mw" name="getStartDirection" specification="_LWcV041TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyexlo1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return startDir;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyfYoI1TEeS-muvgwqy9Mw" name="getTrackArea" specification="_LWc84I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyfYoY1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return track;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyfYoo1TEeS-muvgwqy9Mw" name="getTrackImage" specification="_LWc84Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyfYo41TEeS-muvgwqy9Mw" type="_LrlfYY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return image;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyfYpI1TEeS-muvgwqy9Mw" name="toJSON" specification="_LWdj8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyfYpY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSON(false);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyfYpo1TEeS-muvgwqy9Mw" name="toJSON" specification="_LWeLAo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyfYp41TEeS-muvgwqy9Mw" name="asTiles">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyfYqI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject obj = new JSONObject();
     obj.put(&quot;message&quot;, &quot;track&quot;);
     obj.put(&quot;tiled&quot;, asTiles);
     obj.put(&quot;startdir&quot;, startDir.toString());
     obj.put(&quot;width&quot;, image.getWidth());
     obj.put(&quot;height&quot;, image.getHeight());
     if (asTiles) {
         List&lt;JSONArray> tiled = new ArrayList&lt;>();
         Direction direction = startDir;
         for (TrackTile tile : tiles) {
             JSONArray array = new JSONArray();
             array.put(tile.getDescription(direction));
             array.put(tile.getLocation().getX());
             array.put(tile.getLocation().getY());
             tiled.add(array);
             direction = tile.getConnect(direction).getDirection();
         }
         obj.put(&quot;tiles&quot;, tiled);
     } else {
         obj.put(&quot;data&quot;, ((DataBufferInt) image.getRaster().getDataBuffer()).getData());
     }
     return obj;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyf_sI1TEeS-muvgwqy9Mw" name="bake" specification="_LWeLBI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>track = new Area();
     for (TrackTile t : tiles) {
         track.add(t.getArea());
     }
     Rectangle bounds = track.getBounds();

     track.transform(AffineTransform.getTranslateInstance(-bounds.x,
             -bounds.y));
     // calculate final location for tiles
     TrackState state = new TrackState(new Point((int) -bounds.getX(),
             (int) -bounds.getY()), startDir);
     for (TrackTile t : tiles) {
         t.calcLocation(state);
         state = t.getConnect(state.getDirection());
     }
     track = new Area();
     image = new BufferedImage(bounds.width, bounds.height,
             BufferedImage.TYPE_INT_RGB);
     Graphics2D g = image.createGraphics();
     g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
             RenderingHints.VALUE_ANTIALIAS_OFF);
     g.setColor(new Color(0xffffff));
     for (TrackTile t : tiles) {
         track.add(t.getArea());
         g.fill(t.getArea());
     }
     g.setColor(new Color(0x00ff00));
     g.fill(finishLine.getArea());
     g.dispose();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyf_sY1TEeS-muvgwqy9Mw" name="makeNegative" specification="_LWeyEI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>PathIterator iterator = track.getPathIterator(null);
     Path2D pathA = new Path2D.Double();
     Path2D pathB = new Path2D.Double();
     Path2D current = pathA;
     boolean firstDone = false;
     for (; !iterator.isDone(); iterator.next()) {
         double[] pts = new double[6];
         int type = iterator.currentSegment(pts);
         if (type == PathIterator.SEG_MOVETO) {
             if (!firstDone) {
                 firstDone = true;
             } else {
                 current = pathB;
             }
             current.moveTo(pts[0], pts[1]);
         } else if (type == PathIterator.SEG_LINETO) {
             current.lineTo(pts[0], pts[1]);
         } else if (type == PathIterator.SEG_QUADTO) {
             current.quadTo(pts[0], pts[1], pts[2], pts[3]);
         } else if (type == PathIterator.SEG_CUBICTO) {
             current.curveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);
         } else if (type == PathIterator.SEG_CLOSE) {
             current.closePath();
         }
     }
     Area areaA = new Area(pathA);
     Area areaB = new Area(pathB);
     Area areaC = new Area(areaA);
     areaC.intersect(areaB);
     if (areaC.equals(areaB)) {
         innerArea = areaB;
         outerArea = areaA;
     } else if (areaC.equals(areaA)) {
         innerArea = areaA;
         outerArea = areaB;
     } else {
         throw new IllegalStateException();
     }
     Rectangle bounds = new Rectangle(track.getBounds());
     bounds.grow(10, 10);
     Area boundsArea = new Area(bounds);
     boundsArea.subtract(outerArea);
     outerArea = boundsArea;
     negative = new Area(boundsArea);
     negative.add(innerArea);
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LWbHsI1TEeS-muvgwqy9Mw" name="getArea" method="_LyexkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuoMUI1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWcV0I1TEeS-muvgwqy9Mw" name="getCheckpoints" method="_Lyexko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LWcV0Y1TEeS-muvgwqy9Mw" type="_LYEtgI1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LWcV0o1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LWcV041TEeS-muvgwqy9Mw" name="getStartDirection" method="_LyexlY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lrpw0I1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWc84I1TEeS-muvgwqy9Mw" name="getTrackArea" method="_LyfYoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuoMUY1TEeS-muvgwqy9Mw" type="_LpsB8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWc84Y1TEeS-muvgwqy9Mw" name="getTrackImage" method="_LyfYoo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LuozYI1TEeS-muvgwqy9Mw" type="_LrlfYY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWdj8I1TEeS-muvgwqy9Mw" name="toJSON" method="_LyfYpI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LupacI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWeLAo1TEeS-muvgwqy9Mw" name="toJSON" method="_LyfYpo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LWeLA41TEeS-muvgwqy9Mw" name="asTiles">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LupacY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LWeLBI1TEeS-muvgwqy9Mw" name="bake" visibility="private" method="_Lyf_sI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LWeyEI1TEeS-muvgwqy9Mw" name="makeNegative" visibility="private" method="_Lyf_sY1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LroisI1TEeS-muvgwqy9Mw" name="Track" method="_LyeKhI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lrois41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LroitI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LroisY1TEeS-muvgwqy9Mw" name="startDir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lroiso1TEeS-muvgwqy9Mw" name="tiles" type="_LYm5AI1TEeS-muvgwqy9Mw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LrpJwo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LrpJwY1TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Luj64I1TEeS-muvgwqy9Mw" name="convert" visibility="private" isStatic="true" method="_LydjcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lukh8I1TEeS-muvgwqy9Mw" name="tiles" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lukh8Y1TEeS-muvgwqy9Mw" type="_LYm5AI1TEeS-muvgwqy9Mw" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lukh8o1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lum-MI1TEeS-muvgwqy9Mw" name="Track" method="_LyeKgI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lum-M41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lum-NI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_Lum-MY1TEeS-muvgwqy9Mw" name="startDir" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lum-Mo1TEeS-muvgwqy9Mw" name="tiles" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lum-NY1TEeS-muvgwqy9Mw" type="_LWYrcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LWnU8I1TEeS-muvgwqy9Mw" name="Racing">
          <ownedAttribute xmi:id="_LxkyoI1TEeS-muvgwqy9Mw" name="debug" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxkyoY1TEeS-muvgwqy9Mw" value="true"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxlZsI1TEeS-muvgwqy9Mw" name="fps" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxlZsY1TEeS-muvgwqy9Mw" value="30"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxlZso1TEeS-muvgwqy9Mw" name="laps" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxlZs41TEeS-muvgwqy9Mw" value="4"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxmAwI1TEeS-muvgwqy9Mw" name="pauseAfterRace" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxmAwY1TEeS-muvgwqy9Mw" value="10"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxmAwo1TEeS-muvgwqy9Mw" name="pauseBeforeRace" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_LxmAw41TEeS-muvgwqy9Mw" value="5"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lxmn0I1TEeS-muvgwqy9Mw" name="controlCenter" visibility="private" type="_LX68gI1TEeS-muvgwqy9Mw" association="_Lzv84I1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxnO4I1TEeS-muvgwqy9Mw" name="curIndex" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxnO4o1TEeS-muvgwqy9Mw" name="currentTrack" type="_LWYrcI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lzv8441TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lxn18I1TEeS-muvgwqy9Mw" name="finished" visibility="private" type="_LV2f8I1TEeS-muvgwqy9Mw" isOrdered="true" association="_Lzwj8Y1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lxn18Y1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxodAY1TEeS-muvgwqy9Mw" name="maps" visibility="private" isOrdered="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxodAo1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxpEEY1TEeS-muvgwqy9Mw" name="mines" type="_LUYgUI1TEeS-muvgwqy9Mw" isOrdered="true" isReadOnly="true" association="_LzxyEY1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxpEEo1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxpEE41TEeS-muvgwqy9Mw" name="missiles" type="_LUgcIY1TEeS-muvgwqy9Mw" isOrdered="true" isReadOnly="true" association="_LzxyFI1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxprII1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxprIY1TEeS-muvgwqy9Mw" name="pause" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxqSMY1TEeS-muvgwqy9Mw" name="protocol" visibility="private" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzyZIY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lxq5QI1TEeS-muvgwqy9Mw" name="queuedActions" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_LzznQI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_LxsHYI1TEeS-muvgwqy9Mw" name="racers" type="_LV2f8I1TEeS-muvgwqy9Mw" isOrdered="true" isReadOnly="true" association="_Lz0OUI1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxsHYY1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxsHYo1TEeS-muvgwqy9Mw" name="running" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_LxsucI1TEeS-muvgwqy9Mw" name="serverTime" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lxsuco1TEeS-muvgwqy9Mw" name="state" type="_LUfOAI1TEeS-muvgwqy9Mw" isReadOnly="true"/>
          <ownedAttribute xmi:id="_LxtVgI1TEeS-muvgwqy9Mw" name="toBeDestroyed" visibility="private" type="_LUQkgI1TEeS-muvgwqy9Mw" association="_Lz01YY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LxtVgo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LxtVg41TEeS-muvgwqy9Mw" key="generic_container"/>
            </eAnnotations>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LxtVgY1TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lxt8kI1TEeS-muvgwqy9Mw" name="newProjectiles" visibility="private" type="_LqGRoY1TEeS-muvgwqy9Mw" association="_Lz01ZI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LygmwI1TEeS-muvgwqy9Mw" name="Racing" specification="_LusdwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LygmwY1TEeS-muvgwqy9Mw" name="maps" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lygmwo1TEeS-muvgwqy9Mw" type="_LWnU8I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>running = false;
     pause = 0;
     this.maps = maps;
     curIndex = 0;
     currentTrack = null;
     if (maps.size() == 0) {
         throw new IllegalArgumentException(&quot;No map rotation!&quot;);
     }
     racers = new ArrayList&lt;>();
     missiles = new ArrayList&lt;>();
     mines = new ArrayList&lt;>();
     state = RaceState.WAITING;
     serverTime = 0;
     toBeDestroyed = new ArrayList&lt;>();
     finished = new ArrayList&lt;>();
     queuedActions = new ConcurrentLinkedQueue&lt;>();
     protocol = new Protocol(this);
     controlCenter = new HardRockControlCenter();
     newProjectiles = new ConcurrentLinkedQueue&lt;>();
     initializeGUI();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lygmw41TEeS-muvgwqy9Mw" name="dropPlayer" specification="_Lrzh0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LygmxI1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>boolean removed = racers.remove(player);
     if (!removed) {
         removed = finished.remove(player);
     }
     if (!removed) {
         return;
     }
     for (Missile missile : missiles) {
         if (missile.getShooter() == player) {
             missile.destroy();
         }
     }
     if (racers.isEmpty()) {
         setRaceState(RaceState.WAITING);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyhN0I1TEeS-muvgwqy9Mw" name="getTimer" specification="_LXVGoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyhN0Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return serverTime;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyhN0o1TEeS-muvgwqy9Mw" name="queueAction" specification="_Lr0I4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyhN041TEeS-muvgwqy9Mw" name="action" type="_LX_N8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>queuedActions.add(action);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyhN1I1TEeS-muvgwqy9Mw" name="setRaceState" specification="_Lr0v8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyh04I1TEeS-muvgwqy9Mw" name="raceState" type="_LUfOAI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>while (state != raceState &amp;&amp; state != RaceState.WAITING) {
         advanceGameState();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyh04Y1TEeS-muvgwqy9Mw" name="start" specification="_LXWUwI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = true;
     protocol.start();
     long timeA = System.nanoTime();
     long timeB = timeA;
     Protocol.log(this, &quot;Game ready, now waiting for players.&quot;);
     while (running) {
         try {
             Thread.sleep((int) (1000 / ((double) fps) - (timeB - timeA) / 1e6));
         } catch (InterruptedException e) {
         } catch (IllegalArgumentException e) {
             Protocol.log(this, &quot;Cannot keep up!&quot;);
         }
         while (!queuedActions.isEmpty()) {
             queuedActions.poll().perform();
         }
         protocol.update();
         timeB = System.nanoTime();
         double delta = (timeB - timeA) / 1e9;
         timeA = System.nanoTime();
         update(delta);
         timeB = System.nanoTime();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyh04o1TEeS-muvgwqy9Mw" name="startPreRace" specification="_Lutr4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyh0441TEeS-muvgwqy9Mw" name="racers" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (state != RaceState.WAITING) {
         return;
     }
     // set to PRERACE
     // load track
     try {
         currentTrack = TrackLoader.loadTrack(maps.get(curIndex));
     } catch (IOException e) {
         stop();
         throw new RuntimeException(e);
     }
     curIndex = (curIndex + 1) % maps.size();
     if (racers.size() > 4 || racers.isEmpty()) {
         stop();
         throw new IllegalArgumentException(&quot;Trying to start race with &quot; + racers.size() + &quot; players!&quot;);
     }
     for (Player player : racers) {
         this.racers.add(player);
         player.addMineDropListener(new MineDropListener() {

             @Override
             public void mineDropped(MineDropEvent event) {
                 mineDrop(event);
             }
         });
         player.addMissileFireListener(new MissileFireListener() {

             @Override
             public void missileFired(MissileFireEvent e) {
                 missileFire(e);
             }
         });
         player.addCheckPointListener(new CheckPointListener() {

             @Override
             public void checkPoint(CheckPointEvent e) {
                 checkPointReached(e);
             }
         });
         player.addLapCompletedListener(new LapCompletedListener() {

             @Override
             public void lapCompleted(LapCompletedEvent e) {
                 lapComplete(e);
             }
         });
     }
     pause = pauseBeforeRace;
     state = RaceState.PRERACE;
     protocol.sendGameStart();
    Protocol.log(this, &quot;Prerace wait started, now waiting for &quot; + pauseBeforeRace + &quot; seconds.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyh05I1TEeS-muvgwqy9Mw" name="stop" specification="_LXW70I1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>running = false;
     protocol.stop();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyib8I1TEeS-muvgwqy9Mw" name="updateGUI" specification="_LXW70Y1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (state == RaceState.WAITING) {
         controlCenter.getRaceStateButton().setEnabled(false);
     } else {
         controlCenter.getRaceStateButton().setEnabled(true);
     }
     if (state == RaceState.RACE) {
         controlCenter.getAbortButton().setEnabled(true);
     } else {
         controlCenter.getAbortButton().setEnabled(false);
     }
     controlCenter.getRaceStateButton().setText(state.toString());
     Vector&lt;Map.Entry&lt;Connection, Player>> data = new Vector&lt;>(protocol.getConnectionEntries());
     controlCenter.getConnections().setListData(data);
     controlCenter.getFrame().repaint();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyib8Y1TEeS-muvgwqy9Mw" name="advanceGameState" specification="_LXW70o1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>switch (state) {
     case PRERACE:
         startRace();
         break;
     case RACE:
         finishRace();
         break;
     case POSTRACE:
         cleanup();
     default:
         break;
     }
     updateGUI();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyib8o1TEeS-muvgwqy9Mw" name="checkPointReached" specification="_Lr0v8o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyib841TEeS-muvgwqy9Mw" name="event" type="_LWQvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (!(event.getSource() instanceof Player)) {
         return;
     }
     Player player = (Player) event.getSource();
     if (player.getNumberOfCheckPoints() == currentTrack.getCheckpoints().size()
             &amp;&amp; event.getCheckPoint() instanceof FinishLine) {
         player.completeLap();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyib9I1TEeS-muvgwqy9Mw" name="cleanup" specification="_LXXi4I1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>// set to WAITING
     clearFinished();
     state = RaceState.WAITING;
     Protocol.log(this, &quot;Cleaning up after race, now waiting for players.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyib9Y1TEeS-muvgwqy9Mw" name="clearFinished" specification="_LXXi4Y1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>for (Player player : finished) {
         player.clear();
     }
     finished.clear();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjDAI1TEeS-muvgwqy9Mw" name="collide" specification="_Lr1XAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyjDAY1TEeS-muvgwqy9Mw" name="a" type="_LTuZAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyjDAo1TEeS-muvgwqy9Mw" name="b" type="_LTuZAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyjDA41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>Area intersect = a.getArea();
     intersect.intersect(b.getArea());
     return !intersect.isEmpty();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjDBI1TEeS-muvgwqy9Mw" name="collisions" specification="_LXYJ8I1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>for (Missile missile : missiles) {
         for (Player player : racers) {
             if (player == missile.getShooter() || player.getCar() == null) {
                 continue;
             }
             if (collide(missile, player.getCar())) {
                 missile.collideWith(player.getCar());
                 protocol.sendMissileHit(missile, player);
             }
         }
     }
     for (Mine mine : mines) {
         for (Player player : racers) {
             if (player.getCar() != null &amp;&amp; collide(mine, player.getCar())) {
                 mine.collideWith(player.getCar());
                 protocol.sendMineHit(mine, player);
             }
         }
     }
     for (int i = 0; i &lt; racers.size(); i++) {
         Player player = racers.get(i);
         if (player.getCar() == null) {
             continue;
         }
         if (collide(player.getCar(), currentTrack) ||
                 !player.getCar().getArea().intersects(currentTrack.getArea().getBounds2D())) {
             player.getCar().collideWith(currentTrack);
         }
         for (CheckPoint checkpoint : currentTrack.getCheckpoints()) {
             if (collide(player.getCar(), checkpoint)) {
                 player.getCar().collideWith(checkpoint);
             }
         }
         for (int j = i + 1; j &lt; racers.size(); j++) {
             Player player2 = racers.get(i);
             if (player2.getCar() != null &amp;&amp; collide(player.getCar(), player2.getCar())) {
                 Car.collide(player.getCar(), player2.getCar());
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjDBY1TEeS-muvgwqy9Mw" name="destroy" specification="_Lr1-EI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyjDBo1TEeS-muvgwqy9Mw" name="e" type="_LXoooI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (e.getSource() instanceof GameObject) {
         toBeDestroyed.add((GameObject) e.getSource());
     }
     if (e.getSource() instanceof Car) {
         protocol.sendDestroyed((Car) e.getSource());
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjqEI1TEeS-muvgwqy9Mw" name="finishRace" specification="_LXYxAI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>// set to POSTRACE
     pause = pauseAfterRace;
     // despawn all players, in case they have not finished
     for (Player player : racers) {
         finished.add(player);
     }
     for (Player player : finished) {
         player.setCar(null);
     }
     currentTrack = null;
     racers.clear();
     missiles.clear();
     mines.clear();
     newProjectiles.clear();
     state = RaceState.POSTRACE;
     protocol.sendRaceOver(finished);
     Protocol.log(this, &quot;Race finished, placings were &quot; + finished.toString() +
             &quot; now waiting for &quot; + pauseAfterRace + &quot; seconds.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjqEY1TEeS-muvgwqy9Mw" name="initializeGUI" specification="_LXYxAY1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>controlCenter.getFrame().addWindowListener(new QueuedAction(this) {
         @Override
         public void perform() {
             controlCenter.close();
             stop();
         }
     });
     controlCenter.getAbortButton().addActionListener(new QueuedAction(this) {
         @Override
         public void perform() {
             setRaceState(RaceState.WAITING);
         }
     });
     controlCenter.getKickButton().addActionListener(new QueuedAction(this) {
         @Override
         public void perform() {
             Map.Entry&lt;Connection, Player> selectedEntry;
             selectedEntry = controlCenter.getConnections().getSelectedValue();
             if (selectedEntry == null) {
                 return;
             }
             protocol.connectionLost(selectedEntry.getKey());
             selectedEntry.getKey().close();
         }
     });
     controlCenter.getQuitButton().addActionListener(new QueuedAction(this) {
         @Override
         public void perform() {
             controlCenter.close();
             stop();
         }
     });
     controlCenter.getRaceStateButton().addActionListener(new QueuedAction(this) {
         @Override
         public void perform() {
             advanceGameState();
         }
     });
     updateGUI();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjqEo1TEeS-muvgwqy9Mw" name="lapComplete" specification="_Lr1-Eo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyjqE41TEeS-muvgwqy9Mw" name="e" type="_LXuIMI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (!(e.getSource() instanceof Player)) {
         return;
     }
     Player player = (Player) e.getSource();
     protocol.sendLapComplete(player);
     Protocol.log(this, &quot;Player &quot; + player.getName() +
             &quot; has completed lap &quot; + player.getCompletedLaps());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyjqFI1TEeS-muvgwqy9Mw" name="mineDrop" specification="_Lr2lII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyjqFY1TEeS-muvgwqy9Mw" name="event" type="_LXxLgI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>event.getMine().addDestroyedListener(new DestroyedListener() {

         @Override
         public void destroyed(DestroyedEvent e) {
             destroy(e);
         }
     });
     newProjectiles.add(event.getMine());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LykRII1TEeS-muvgwqy9Mw" name="missileFire" specification="_Lr2lIo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LykRIY1TEeS-muvgwqy9Mw" name="event" type="_LX014I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>event.getMissile().addDestroyedListener(new DestroyedListener() {

         @Override
         public void destroyed(DestroyedEvent e) {
             destroy(e);
         }
     });
     newProjectiles.add(event.getMissile());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LykRIo1TEeS-muvgwqy9Mw" name="spawn" specification="_Lr3MMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LykRI41TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Point2D spawnloc = player.getLastCheckPoint().getSpawnLocation();
     spawn(player, spawnloc, player.getLastCheckPoint().getOrientation());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LykRJI1TEeS-muvgwqy9Mw" name="spawn" specification="_Luu6AI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LykRJY1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LykRJo1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LykRJ41TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Car car = new Car(location, orientation);
     player.setCar(car);
     car.addDestroyedListener(new DestroyedListener() {

         @Override
         public void destroyed(DestroyedEvent e) {
             destroy(e);
         }
     });
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyk4MI1TEeS-muvgwqy9Mw" name="startRace" specification="_LXZYEI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>// set to RACE
     serverTime = 0;
     for (int i = 0; i &lt; racers.size(); i++) {
         spawn(racers.get(i), currentTrack.getFinishLine().getStartLocation(i + 1), currentTrack.getStartDirection());
     }
     newProjectiles.clear();
     state = RaceState.RACE;
     Protocol.log(this, &quot;The stage is set, the green flag drops!&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyk4MY1TEeS-muvgwqy9Mw" name="update" specification="_LXZYEY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyk4Mo1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>if (state == RaceState.PRERACE || state == RaceState.POSTRACE) {
         pause -= delta;
         if (pause &lt;= 0) {
             advanceGameState();
         }
     } else if (state == RaceState.RACE) {
         serverTime += delta;
         for (Player player : racers) {
             if (player.getCar() == null) {
                 spawn(player);
             }
             player.getCar().update(delta);
         }
         for (Missile missile : missiles) {
             missile.update(delta);
         }
         collisions();
         protocol.sendGameState();
         Iterator&lt;Player> racerIterator = racers.iterator();
         while (racerIterator.hasNext()) {
             Player player = racerIterator.next();
             if (player.getCompletedLaps() == laps) {
                 racerIterator.remove();
                 finished.add(player);
             }
         }
         if (racers.isEmpty()) {
             advanceGameState();
         }
         while (!newProjectiles.isEmpty()) {
             GameObject go = newProjectiles.poll();
             if (go instanceof Missile) {
                 missiles.add((Missile) go);
             } else if (go instanceof Mine) {
                 mines.add((Mine) go);
             }
         }
         for (GameObject go : toBeDestroyed) {
             missiles.remove(go);
             mines.remove(go);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyk4M41TEeS-muvgwqy9Mw" name="main" specification="_LXZ_II1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyk4NI1TEeS-muvgwqy9Mw" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lyk4NY1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;String> tracks = new ArrayList&lt;>();
     tracks.add(&quot;res/basictrack&quot;);
     Racing racing = new Racing(tracks);
     racing.start();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LXVGoI1TEeS-muvgwqy9Mw" name="getTimer" method="_LyhN0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LXVtsI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LXWUwI1TEeS-muvgwqy9Mw" name="start" method="_Lyh04Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXW70I1TEeS-muvgwqy9Mw" name="stop" method="_Lyh05I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXW70Y1TEeS-muvgwqy9Mw" name="updateGUI" visibility="protected" method="_Lyib8I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXW70o1TEeS-muvgwqy9Mw" name="advanceGameState" visibility="private" method="_Lyib8Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXXi4I1TEeS-muvgwqy9Mw" name="cleanup" visibility="private" method="_Lyib9I1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXXi4Y1TEeS-muvgwqy9Mw" name="clearFinished" visibility="private" method="_Lyib9Y1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXYJ8I1TEeS-muvgwqy9Mw" name="collisions" visibility="private" method="_LyjDBI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXYxAI1TEeS-muvgwqy9Mw" name="finishRace" visibility="private" method="_LyjqEI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXYxAY1TEeS-muvgwqy9Mw" name="initializeGUI" visibility="private" method="_LyjqEY1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXZYEI1TEeS-muvgwqy9Mw" name="startRace" visibility="private" method="_Lyk4MI1TEeS-muvgwqy9Mw"/>
          <ownedOperation xmi:id="_LXZYEY1TEeS-muvgwqy9Mw" name="update" visibility="private" method="_Lyk4MY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LXZYEo1TEeS-muvgwqy9Mw" name="delta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LXZ_II1TEeS-muvgwqy9Mw" name="main" isStatic="true" method="_Lyk4M41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LXZ_IY1TEeS-muvgwqy9Mw" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LXZ_Io1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lrzh0I1TEeS-muvgwqy9Mw" name="dropPlayer" method="_Lygmw41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lrzh0Y1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr0I4I1TEeS-muvgwqy9Mw" name="queueAction" method="_LyhN0o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr0I4Y1TEeS-muvgwqy9Mw" name="action" type="_LX_N8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr0v8I1TEeS-muvgwqy9Mw" name="setRaceState" method="_LyhN1I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr0v8Y1TEeS-muvgwqy9Mw" name="raceState" type="_LUfOAI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr0v8o1TEeS-muvgwqy9Mw" name="checkPointReached" visibility="private" method="_Lyib8o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr0v841TEeS-muvgwqy9Mw" name="event" type="_LWQvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr1XAI1TEeS-muvgwqy9Mw" name="collide" visibility="private" method="_LyjDAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr1XAY1TEeS-muvgwqy9Mw" name="a" type="_LTuZAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lr1XAo1TEeS-muvgwqy9Mw" name="b" type="_LTuZAI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lr1XA41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr1-EI1TEeS-muvgwqy9Mw" name="destroy" visibility="private" method="_LyjDBY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr1-EY1TEeS-muvgwqy9Mw" name="e" type="_LXoooI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr1-Eo1TEeS-muvgwqy9Mw" name="lapComplete" visibility="private" method="_LyjqEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr1-E41TEeS-muvgwqy9Mw" name="e" type="_LXuIMI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr2lII1TEeS-muvgwqy9Mw" name="mineDrop" visibility="private" method="_LyjqFI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr2lIY1TEeS-muvgwqy9Mw" name="event" type="_LXxLgI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr2lIo1TEeS-muvgwqy9Mw" name="missileFire" visibility="private" method="_LykRII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr2lI41TEeS-muvgwqy9Mw" name="event" type="_LX014I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lr3MMI1TEeS-muvgwqy9Mw" name="spawn" visibility="private" method="_LykRIo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lr3MMY1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LusdwI1TEeS-muvgwqy9Mw" name="Racing" method="_LygmwI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_Lusdwo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_Lusdw41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LusdwY1TEeS-muvgwqy9Mw" name="maps" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LusdxI1TEeS-muvgwqy9Mw" type="_LWnU8I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lutr4I1TEeS-muvgwqy9Mw" name="startPreRace" method="_Lyh04o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lutr4Y1TEeS-muvgwqy9Mw" name="racers" type="_LqprQY1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Luu6AI1TEeS-muvgwqy9Mw" name="spawn" visibility="private" method="_LykRJI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Luu6AY1TEeS-muvgwqy9Mw" name="player" type="_LV2f8I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuvhEI1TEeS-muvgwqy9Mw" name="location" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LuvhEY1TEeS-muvgwqy9Mw" name="orientation" type="_LT4KAI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Ly_u8Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lw75cY1TEeS-muvgwqy9Mw _Ly_u8o1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Ly_u8o1TEeS-muvgwqy9Mw" name="" type="_LUQkgI1TEeS-muvgwqy9Mw" association="_Ly_u8Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzAWAI1TEeS-muvgwqy9Mw" name="" memberEnd="_Lw8ggI1TEeS-muvgwqy9Mw _LzAWAY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzAWAY1TEeS-muvgwqy9Mw" name="" type="_LUQkgI1TEeS-muvgwqy9Mw" association="_LzAWAI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzCLMI1TEeS-muvgwqy9Mw" name="" memberEnd="_LxZMcY1TEeS-muvgwqy9Mw _LzCLMY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzCLMY1TEeS-muvgwqy9Mw" name="" type="_LV2f8I1TEeS-muvgwqy9Mw" association="_LzCLMI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzWUQI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzWUQY1TEeS-muvgwqy9Mw _LTvnII1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzWUQY1TEeS-muvgwqy9Mw" name="" type="_LTuZAI1TEeS-muvgwqy9Mw" association="_LzWUQI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzW7UY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzW7Uo1TEeS-muvgwqy9Mw _Lw0ksI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzW7Uo1TEeS-muvgwqy9Mw" name="" type="_LT7NUI1TEeS-muvgwqy9Mw" association="_LzW7UY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzYJcI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzYJcY1TEeS-muvgwqy9Mw _Lw1LwI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzYJcY1TEeS-muvgwqy9Mw" name="" type="_LT7NUI1TEeS-muvgwqy9Mw" association="_LzYJcI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzYwgY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzYwgo1TEeS-muvgwqy9Mw _Lw2Z4I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzYwgo1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_LzYwgY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzZ-oI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzZ-oY1TEeS-muvgwqy9Mw _Lw2Z4o1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzZ-oY1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_LzZ-oI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzalsY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzalso1TEeS-muvgwqy9Mw _Lw3A8Y1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzalso1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_LzalsY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzbMwY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzbMwo1TEeS-muvgwqy9Mw _Lw3oAI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzbMwo1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_LzbMwY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzbz0Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzbz0o1TEeS-muvgwqy9Mw _Lw3oAo1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzbz0o1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_Lzbz0Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzdB8I1TEeS-muvgwqy9Mw" name="" memberEnd="_LzdB8Y1TEeS-muvgwqy9Mw _Lw42Io1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzdB8Y1TEeS-muvgwqy9Mw" name="" type="_LUB7AI1TEeS-muvgwqy9Mw" association="_LzdB8I1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzdpAY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzdpAo1TEeS-muvgwqy9Mw _Lw75cI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzdpAo1TEeS-muvgwqy9Mw" name="" type="_LUQkgI1TEeS-muvgwqy9Mw" association="_LzdpAY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzeQEY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzeQEo1TEeS-muvgwqy9Mw _Lw-8wI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzeQEo1TEeS-muvgwqy9Mw" name="" type="_LUYgUI1TEeS-muvgwqy9Mw" association="_LzeQEY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lze3IY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lze3Io1TEeS-muvgwqy9Mw _LxAx8I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lze3Io1TEeS-muvgwqy9Mw" name="" type="_LUgcIY1TEeS-muvgwqy9Mw" association="_Lze3IY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzgFQY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzgFQo1TEeS-muvgwqy9Mw _LxAx8o1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzgFQo1TEeS-muvgwqy9Mw" name="" type="_LUgcIY1TEeS-muvgwqy9Mw" association="_LzgFQY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzgsUY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzgsUo1TEeS-muvgwqy9Mw _LxAx841TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzgsUo1TEeS-muvgwqy9Mw" name="" type="_LUgcIY1TEeS-muvgwqy9Mw" association="_LzgsUY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzhTYY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzhTYo1TEeS-muvgwqy9Mw _LxDOMo1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzhTYo1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzhTYY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzihgI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzihgY1TEeS-muvgwqy9Mw _LxD1QY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzihgY1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzihgI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzjIkY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzjIko1TEeS-muvgwqy9Mw _LxD1Qo1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzjIko1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzjIkY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzjvoY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzjvoo1TEeS-muvgwqy9Mw _LxFqcI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzjvoo1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzjvoY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzkWsY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzkWso1TEeS-muvgwqy9Mw _LxGRgo1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzkWso1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzkWsY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzlk0Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzlk0o1TEeS-muvgwqy9Mw _LxG4kY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzlk0o1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_Lzlk0Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzlk1I1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzlk1Y1TEeS-muvgwqy9Mw _LxJU0I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzlk1Y1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_Lzlk1I1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzmL4Y1TEeS-muvgwqy9Mw" name="" memberEnd="_LzmL4o1TEeS-muvgwqy9Mw _LxKi8I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzmL4o1TEeS-muvgwqy9Mw" name="" type="_LVPb8I1TEeS-muvgwqy9Mw" association="_LzmL4Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzmy8Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzmy8o1TEeS-muvgwqy9Mw _LxQpkY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzmy8o1TEeS-muvgwqy9Mw" name="" type="_LVi98I1TEeS-muvgwqy9Mw" association="_Lzmy8Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LznaAY1TEeS-muvgwqy9Mw" name="" memberEnd="_LznaAo1TEeS-muvgwqy9Mw _LxWwM41TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LznaAo1TEeS-muvgwqy9Mw" name="" type="_LV2f8I1TEeS-muvgwqy9Mw" association="_LznaAY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzoBEI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzoBEY1TEeS-muvgwqy9Mw _LxXXQI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzoBEY1TEeS-muvgwqy9Mw" name="" type="_LV2f8I1TEeS-muvgwqy9Mw" association="_LzoBEI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzoBE41TEeS-muvgwqy9Mw" name="" memberEnd="_LzoBFI1TEeS-muvgwqy9Mw _LxaakY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzoBFI1TEeS-muvgwqy9Mw" name="" type="_LV2f8I1TEeS-muvgwqy9Mw" association="_LzoBE41TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzpPMY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzpPMo1TEeS-muvgwqy9Mw _Lxdd4Y1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzpPMo1TEeS-muvgwqy9Mw" name="" type="_LWTy8I1TEeS-muvgwqy9Mw" association="_LzpPMY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzp2QY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzp2Qo1TEeS-muvgwqy9Mw _LxfTEI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzp2Qo1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_Lzp2QY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzqdUY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzqdUo1TEeS-muvgwqy9Mw _Lxf6Io1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzqdUo1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzqdUY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzrEYY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzrEYo1TEeS-muvgwqy9Mw _LxghMI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzrEYo1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzrEYY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzsSgY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzsSgo1TEeS-muvgwqy9Mw _LxhIQI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzsSgo1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzsSgY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzs5kY1TEeS-muvgwqy9Mw" name="" memberEnd="_LztgoI1TEeS-muvgwqy9Mw _LxhIQY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LztgoI1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_Lzs5kY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzuHsI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzuHsY1TEeS-muvgwqy9Mw _LxhIQo1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzuHsY1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzuHsI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzuuwY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzuuwo1TEeS-muvgwqy9Mw _LxiWYI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzuuwo1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzuuwY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzvV0Y1TEeS-muvgwqy9Mw" name="" memberEnd="_LzvV0o1TEeS-muvgwqy9Mw _Lxi9cY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzvV0o1TEeS-muvgwqy9Mw" name="" type="_LWYrcI1TEeS-muvgwqy9Mw" association="_LzvV0Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzv84I1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzv84Y1TEeS-muvgwqy9Mw _Lxmn0I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzv84Y1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lzv84I1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzv8441TEeS-muvgwqy9Mw" name="" memberEnd="_Lzv85I1TEeS-muvgwqy9Mw _LxnO4o1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzv85I1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lzv8441TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lzwj8Y1TEeS-muvgwqy9Mw" name="" memberEnd="_Lzwj8o1TEeS-muvgwqy9Mw _Lxn18I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lzwj8o1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lzwj8Y1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzxyEY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzxyEo1TEeS-muvgwqy9Mw _LxpEEY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzxyEo1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_LzxyEY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzxyFI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzxyFY1TEeS-muvgwqy9Mw _LxpEE41TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzxyFY1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_LzxyFI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzyZIY1TEeS-muvgwqy9Mw" name="" memberEnd="_LzyZIo1TEeS-muvgwqy9Mw _LxqSMY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzyZIo1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_LzyZIY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_LzznQI1TEeS-muvgwqy9Mw" name="" memberEnd="_LzznQY1TEeS-muvgwqy9Mw _Lxq5QI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_LzznQY1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_LzznQI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lz0OUI1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz0OUY1TEeS-muvgwqy9Mw _LxsHYI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lz0OUY1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lz0OUI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lz01YY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz01Yo1TEeS-muvgwqy9Mw _LxtVgI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lz01Yo1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lz01YY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lz01ZI1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz01ZY1TEeS-muvgwqy9Mw _Lxt8kI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lz01ZY1TEeS-muvgwqy9Mw" name="" type="_LWnU8I1TEeS-muvgwqy9Mw" association="_Lz01ZI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LL-yQI1TEeS-muvgwqy9Mw" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_LYXocI1TEeS-muvgwqy9Mw" name="Util">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyuCI41TEeS-muvgwqy9Mw" name="getRandom" specification="_LvvmoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyuCJI1TEeS-muvgwqy9Mw" name="list" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyuCJY1TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (list.size() == 0) {
			return null;
		}
		return list.get(new Random().nextInt(list.size()));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyuCJo1TEeS-muvgwqy9Mw" name="getRandom" specification="_Lvw0wI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyuCJ41TEeS-muvgwqy9Mw" name="list" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyuCKI1TEeS-muvgwqy9Mw" name="except" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyuCKY1TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>ArrayList&lt;T> cross = new ArrayList&lt;>(list);
		for (T item : except) {
			cross.remove(item);
		}
		return getRandom(cross);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyupMI1TEeS-muvgwqy9Mw" name="getRandom" specification="_LvzRAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyupMY1TEeS-muvgwqy9Mw" name="coll" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyupMo1TEeS-muvgwqy9Mw" name="except" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyupM41TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return getRandom(new ArrayList&lt;>(coll), except);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyupNI1TEeS-muvgwqy9Mw" name="mod" specification="_LYY2kI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyupNY1TEeS-muvgwqy9Mw" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyupNo1TEeS-muvgwqy9Mw" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LyupN41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int d = Math.abs(b);
		int c = a % d;
		while (c &lt; 0) {
			c += d;
		}
		return c;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LYY2kI1TEeS-muvgwqy9Mw" name="mod" isStatic="true" method="_LyupNI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LYZdoI1TEeS-muvgwqy9Mw" name="a">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LYZdoY1TEeS-muvgwqy9Mw" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LYZdoo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LvvmoI1TEeS-muvgwqy9Mw" name="getRandom" isStatic="true" method="_LyuCI41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LvvmoY1TEeS-muvgwqy9Mw" name="list" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lvvmo41TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lvw0wI1TEeS-muvgwqy9Mw" name="getRandom" isStatic="true" method="_LyuCJo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lvw0wY1TEeS-muvgwqy9Mw" name="list" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lvw0wo1TEeS-muvgwqy9Mw" name="except" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lvxb0I1TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LvzRAI1TEeS-muvgwqy9Mw" name="getRandom" isStatic="true" method="_LyupMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lvz4EI1TEeS-muvgwqy9Mw" name="coll" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lvz4EY1TEeS-muvgwqy9Mw" name="except" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lvz4E41TEeS-muvgwqy9Mw" type="_LvuYgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LYb54I1TEeS-muvgwqy9Mw" name="CollisionTools">
          <ownedAttribute xmi:id="_Lx5iwI1TEeS-muvgwqy9Mw" name="minLength" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx6J0I1TEeS-muvgwqy9Mw" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_Lx6J0Y1TEeS-muvgwqy9Mw" name="minAngle" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx6J0o1TEeS-muvgwqy9Mw" value="Math.toRadians(5)"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyvQQI1TEeS-muvgwqy9Mw" name="getMidPoints" specification="_Lv2UUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyvQQY1TEeS-muvgwqy9Mw" name="sides" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyvQQo1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LyvQQ41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;Point2D> midPoints = new ArrayList&lt;>();
		for (Side side : sides) {
			midPoints.add(side.getMidPoint());
		}
		return midPoints;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyv3UI1TEeS-muvgwqy9Mw" name="getClosest" specification="_Lv5XoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyv3UY1TEeS-muvgwqy9Mw" name="points" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyv3Uo1TEeS-muvgwqy9Mw" name="reference" type="_LqSe4I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lyv3U41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lyv3VI1TEeS-muvgwqy9Mw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Lyv3VY1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return Collections.min(points, new Comparator&lt;Point2D>() {
			@Override
			public int compare(Point2D arg0, Point2D arg1) {
				return Double.compare(arg0.distance(reference),
						arg1.distance(reference));
			}
		});
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyv3Vo1TEeS-muvgwqy9Mw" name="getClosestSide" specification="_Lv8a8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lyv3V41TEeS-muvgwqy9Mw" name="sides" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lyv3WI1TEeS-muvgwqy9Mw" name="reference" type="_LqSe4I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lyv3WY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lyv3Wo1TEeS-muvgwqy9Mw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Lyv3W41TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (sides.size() == 0) {
			return null;
		}
		int smallestIndex = 0;
		double smallestDistance = sides.get(0).getMidPoint()
				.distance(reference);
		for (int i = 1; i &lt; sides.size(); i++) {
			double dist = sides.get(i).getMidPoint().distance(reference);
			if (dist &lt; smallestDistance) {
				smallestDistance = dist;
				smallestIndex = i;
			}
		}
		return sides.get(smallestIndex);
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyweYI1TEeS-muvgwqy9Mw" name="getNormal" specification="_Lv-3MI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyweYY1TEeS-muvgwqy9Mw" name="side" type="_LYiAgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyweYo1TEeS-muvgwqy9Mw" name="side2" type="_LYiAgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyweY41TEeS-muvgwqy9Mw" name="object" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyweZI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Point2D p1 = side.getP1();
		Point2D p2 = side.getP2();
		Point2D p3 = side2.getP1();
		Point2D p4 = side2.getP2();

		if (p2 == p3) {
			return null;
		}

		Vector2D ab = new Vector2D.Cartesian(p2, p1);
		Vector2D ac = new Vector2D.Cartesian(p3, p4);
		Vector2D n = new Vector2D.Cartesian(ab.getY(), -ab.getX());
		if (n.dotProduct(ac) > 0) {
			return n.scale(-1);
		}
		return n;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyweZY1TEeS-muvgwqy9Mw" name="isRight" specification="_LwAsYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyweZo1TEeS-muvgwqy9Mw" name="line" type="_LrAQkY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyweZ41TEeS-muvgwqy9Mw" name="c" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyweaI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Vector2D ab = new Vector2D.Cartesian(line.getP1(), line.getP2());
		Vector2D b = new Vector2D.Cartesian(c.getY(), -c.getX());
		b = b.subtract(new Vector2D.Cartesian(line.getP1().getY(), -line
				.getP1().getX()));
		return (int) Math.signum(ab.dotProduct(b));
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyxFcI1TEeS-muvgwqy9Mw" name="getSides" specification="_LwBTcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyxsgI1TEeS-muvgwqy9Mw" name="s" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyxsgY1TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lyxsgo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>ArrayList&lt;Side> sides = new ArrayList&lt;>();
		PathIterator iter = s.getPathIterator(null);
		double currentX = 0;
		double currentY = 0;
		double startX = 0;
		double startY = 0;
		boolean moveDone = false;
		Side lastSide = null;
		for (; !iter.isDone(); iter.next()) {
			double[] coords = new double[6];
			int currentSegment = iter.currentSegment(coords);
			Side side = null;
			if (currentSegment == PathIterator.SEG_CUBICTO) {
				side = new Side(new CubicCurve2D.Double(currentX, currentY,
						coords[2], coords[3], coords[4], coords[5], coords[0],
						coords[1]));
			} else if (currentSegment == PathIterator.SEG_QUADTO) {
				side = new Side(new QuadCurve2D.Double(currentX, currentY,
						coords[2], coords[3], coords[0], coords[1]));
			} else if (currentSegment == PathIterator.SEG_LINETO) {
				side = new Side(new Line2D.Double(currentX, currentY,
						coords[0], coords[1]));
			} else if (currentSegment == PathIterator.SEG_CLOSE) {
				side = new Side(new Line2D.Double(currentX, currentY, startX,
						startY));
			} else if (currentSegment == PathIterator.SEG_MOVETO) {
				if (moveDone) {
					break;
				} else {
					moveDone = true;
				}
				startX = coords[0];
				startY = coords[1];
			}
			boolean ok = false;
			if (side != null) {
				Vector2D v = new Vector2D.Cartesian(side.getP1(), side.getP2());
				if (v.getMagnitude() > minLength) {
					ok = true;
				}
				if (lastSide == null) {
					ok = ok &amp;&amp; true;
				} else {
					Vector2D v2 = new Vector2D.Cartesian(lastSide.getP1(), lastSide.getP2());
					if(v2.angleBetween(v) > minAngle) {
						ok = ok &amp;&amp; true;
					}
				}
				if(ok) {
					sides.add(side);
				}
			}
			currentX = coords[0];
			currentY = coords[1];
			lastSide = side;
		}
		return sides;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_Lv2UUI1TEeS-muvgwqy9Mw" name="getMidPoints" isStatic="true" method="_LyvQQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lv2UUY1TEeS-muvgwqy9Mw" name="sides" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv2UUo1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Lv2UU41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Lv5XoI1TEeS-muvgwqy9Mw" name="getClosest" isStatic="true" method="_Lyv3UI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lv5XoY1TEeS-muvgwqy9Mw" name="points" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv5Xoo1TEeS-muvgwqy9Mw" name="reference" type="_LqSe4I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lv7M0Y1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lv7z4I1TEeS-muvgwqy9Mw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Lv5-sI1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lv8a8I1TEeS-muvgwqy9Mw" name="getClosestSide" isStatic="true" method="_Lyv3Vo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lv9CAI1TEeS-muvgwqy9Mw" name="sides" type="_LqprQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv9CAY1TEeS-muvgwqy9Mw" name="reference" type="_LqSe4I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_Lv9pEY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Lv9pEo1TEeS-muvgwqy9Mw" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_Lv9CAo1TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lv-3MI1TEeS-muvgwqy9Mw" name="getNormal" isStatic="true" method="_LyweYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lv-3MY1TEeS-muvgwqy9Mw" name="side" type="_LYiAgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv-3Mo1TEeS-muvgwqy9Mw" name="side2" type="_LYiAgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv-3M41TEeS-muvgwqy9Mw" name="object" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lv_eQI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwAsYI1TEeS-muvgwqy9Mw" name="isRight" isStatic="true" method="_LyweZY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwAsYY1TEeS-muvgwqy9Mw" name="line" type="_LrAQkY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwAsYo1TEeS-muvgwqy9Mw" name="c" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwAsY41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwBTcI1TEeS-muvgwqy9Mw" name="getSides" isStatic="true" method="_LyxFcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwBTcY1TEeS-muvgwqy9Mw" name="s" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwB6gI1TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" isOrdered="true" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LwB6gY1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LYiAgI1TEeS-muvgwqy9Mw" name="Side">
          <ownedAttribute xmi:id="_Lx6w4I1TEeS-muvgwqy9Mw" name="p1" type="_LqSe4I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_Lz-mYY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lx7X8I1TEeS-muvgwqy9Mw" name="p2" type="_LqSe4I1TEeS-muvgwqy9Mw" isReadOnly="true" association="_L0BCoI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_Lx7X8Y1TEeS-muvgwqy9Mw" name="shape" visibility="private" type="_Ls2qsI1TEeS-muvgwqy9Mw" association="_L0CQwI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Lyxsg41TEeS-muvgwqy9Mw" name="Side" specification="_LwDIoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyxshI1TEeS-muvgwqy9Mw" name="side" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyxshY1TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (side instanceof Line2D) {
			p1 = ((Line2D) side).getP1();
			p2 = ((Line2D) side).getP2();
		} else if (side instanceof QuadCurve2D) {
			p1 = ((QuadCurve2D) side).getP1();
			p2 = ((QuadCurve2D) side).getP2();
		} else if (side instanceof CubicCurve2D) {
			p1 = ((CubicCurve2D) side).getP1();
			p2 = ((CubicCurve2D) side).getP2();
		} else {
			throw new IllegalArgumentException();
		}
		shape = side;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyyTkI1TEeS-muvgwqy9Mw" name="getMidPoint" specification="_LYj1sI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyyTkY1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (shape instanceof CubicCurve2D) {
			CubicCurve2D curve = (CubicCurve2D) shape;
			curve.subdivide(curve, null);
			return curve.getP2();
		} else if (shape instanceof QuadCurve2D) {
			QuadCurve2D curve = (QuadCurve2D) shape;
			curve.subdivide(curve, null);
			return curve.getP2();
		} else if (shape instanceof Line2D) {
			return new Point2D.Double(
					p1.getX() + 0.5 * (p2.getX() - p1.getX()), p1.getY() + 0.5
							* (p2.getY() - p1.getY()));
		} else {
			return null;
		}
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyyTko1TEeS-muvgwqy9Mw" name="toString" specification="_LYj1sY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyyTk41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;Side from &quot; + p1.toString() + &quot; to &quot; + p2.toString();
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_LyyTlI1TEeS-muvgwqy9Mw" name="equals" specification="_LwFk4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LyyTlY1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LyyTlo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(other instanceof Side)) {
			return false;
		}
		return shape.equals(((Side) other).shape);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LYj1sI1TEeS-muvgwqy9Mw" name="getMidPoint" method="_LyyTkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwE90I1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LYj1sY1TEeS-muvgwqy9Mw" name="toString" method="_LyyTko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LYkcwI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwDIoI1TEeS-muvgwqy9Mw" name="Side" method="_Lyxsg41TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LwEWwY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LwEWwo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LwEWwI1TEeS-muvgwqy9Mw" name="side" type="_Ls2qsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwEWw41TEeS-muvgwqy9Mw" type="_LYiAgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwFk4I1TEeS-muvgwqy9Mw" name="equals" method="_LyyTlI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwFk4Y1TEeS-muvgwqy9Mw" name="other" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwGL8I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqTtAY1TEeS-muvgwqy9Mw" name="Vector2D" isAbstract="true">
          <ownedAttribute xmi:id="_NXgOoI1TEeS-muvgwqy9Mw" name="direction" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXg1so1TEeS-muvgwqy9Mw" name="magnitude" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXhcw41TEeS-muvgwqy9Mw" name="x" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXiD041TEeS-muvgwqy9Mw" name="y" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYXKQ41TEeS-muvgwqy9Mw" name="angleBetween" specification="_NM_AsY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYXKRI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYXKRY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return other.getDirection() - getDirection();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYXxUI1TEeS-muvgwqy9Mw" name="applyTo" specification="_NM_As41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYXxUY1TEeS-muvgwqy9Mw" name="what" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYXxUo1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return new Point2D.Double(what.getX() + getX(), what.getY() + getY());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYXxU41TEeS-muvgwqy9Mw" name="normalize" specification="_NNAO0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYXxVI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return scale(1 / getMagnitude());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYYYYI1TEeS-muvgwqy9Mw" name="toString" specification="_NNA14Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYYYYY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;(&quot; + getX() + &quot;, &quot; + getY() + &quot;)&quot;;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NM9ykI1TEeS-muvgwqy9Mw" name="Vector2D" visibility="protected">
            <eAnnotations xmi:id="_NM-ZoI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NM-ZoY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NM-Zoo1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NM-Zo41TEeS-muvgwqy9Mw" name="add" isAbstract="true">
            <ownedParameter xmi:id="_NM-ZpI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NM_AsI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NM_AsY1TEeS-muvgwqy9Mw" name="angleBetween" method="_NYXKQ41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NM_Aso1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQGmII1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NM_As41TEeS-muvgwqy9Mw" name="applyTo" method="_NYXxUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NM_AtI1TEeS-muvgwqy9Mw" name="what" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NM_nwI1TEeS-muvgwqy9Mw" type="_LqSe4I1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NM_nwY1TEeS-muvgwqy9Mw" name="dotProduct" isAbstract="true">
            <ownedParameter xmi:id="_NM_nwo1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQGmIY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NM_nw41TEeS-muvgwqy9Mw" name="getSquareMagnitude" isAbstract="true">
            <ownedParameter xmi:id="_NQGmIo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNAO0I1TEeS-muvgwqy9Mw" name="normalize" method="_NYXxU41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNAO0Y1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNAO0o1TEeS-muvgwqy9Mw" name="subtract" isAbstract="true">
            <ownedParameter xmi:id="_NNAO041TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNA14I1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNA14Y1TEeS-muvgwqy9Mw" name="toString" method="_NYYYYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQH0RI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQHNMI1TEeS-muvgwqy9Mw" name="rotate" isAbstract="true">
            <ownedParameter xmi:id="_NQHNMY1TEeS-muvgwqy9Mw" name="theta">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQH0QI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQH0QY1TEeS-muvgwqy9Mw" name="scale" isAbstract="true">
            <ownedParameter xmi:id="_NQH0Qo1TEeS-muvgwqy9Mw" name="factor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQH0Q41TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_NQJCYI1TEeS-muvgwqy9Mw" name="Cartesian">
            <eAnnotations xmi:id="_NQJCYY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQJCYo1TEeS-muvgwqy9Mw" key="static"/>
            </eAnnotations>
            <generalization xmi:id="_NQTaco1TEeS-muvgwqy9Mw" general="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYYYYo1TEeS-muvgwqy9Mw" name="Cartesian" specification="_NQJpcI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYYYY41TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(1, 0);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYYYZI1TEeS-muvgwqy9Mw" name="Cartesian" specification="_NQJpdI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYYYZY1TEeS-muvgwqy9Mw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYYYZo1TEeS-muvgwqy9Mw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYYYZ41TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.x = x;
         this.y = y;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYY_cI1TEeS-muvgwqy9Mw" name="Cartesian" specification="_NQKQhY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYY_cY1TEeS-muvgwqy9Mw" name="p" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYY_co1TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(p.getX(), p.getY());
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYY_c41TEeS-muvgwqy9Mw" name="Cartesian" specification="_NQK3k41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYY_dI1TEeS-muvgwqy9Mw" name="p1" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYY_dY1TEeS-muvgwqy9Mw" name="p2" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYY_do1TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(p2.getX() - p1.getX(), p2.getY() - p1.getY());
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYY_d41TEeS-muvgwqy9Mw" name="Cartesian" specification="_NQLepI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYY_eI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYY_eY1TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(other.getX(), other.getY());
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYY_eo1TEeS-muvgwqy9Mw" name="add" specification="_NQMFtI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYY_e41TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYY_fI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Cartesian(x + other.getX(), y + other.getY());
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYZmgI1TEeS-muvgwqy9Mw" name="dotProduct" specification="_NQMsxI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYZmgY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYZmgo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return x * other.getX() + y * other.getY();
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYZmg41TEeS-muvgwqy9Mw" name="getDirection" specification="_NQN64o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYZmhI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return Math.atan2(y, x);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYZmhY1TEeS-muvgwqy9Mw" name="getMagnitude" specification="_NQOh841TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYZmho1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return Math.sqrt(x * x + y * y);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYZmh41TEeS-muvgwqy9Mw" name="getSquareMagnitude" specification="_NQPJA41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYZmiI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return x * x + y * y;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYZmiY1TEeS-muvgwqy9Mw" name="getX" specification="_NQPwE41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYZmio1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return x;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYaNkI1TEeS-muvgwqy9Mw" name="getY" specification="_NQQXI41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYaNkY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return y;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYaNko1TEeS-muvgwqy9Mw" name="rotate" specification="_NQQ-M41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYaNk41TEeS-muvgwqy9Mw" name="theta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYaNlI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Polar(this).rotate(theta);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYa0oI1TEeS-muvgwqy9Mw" name="scale" specification="_NQSMUI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYa0oY1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYa0oo1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Cartesian(x * factor, y * factor);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYa0o41TEeS-muvgwqy9Mw" name="subtract" specification="_NQSzYo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYa0pI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYa0pY1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Cartesian(x - other.getX(), y - other.getY());
     </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NQJpcI1TEeS-muvgwqy9Mw" name="Cartesian" method="_NYYYYo1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQJpcY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQJpco1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQJpc41TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQJpdI1TEeS-muvgwqy9Mw" name="Cartesian" method="_NYYYZI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQKQgo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQKQg41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQKQgI1TEeS-muvgwqy9Mw" name="x">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQKQgY1TEeS-muvgwqy9Mw" name="y">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQKQhI1TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQKQhY1TEeS-muvgwqy9Mw" name="Cartesian" method="_NYY_cI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQK3kI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQK3kY1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQKQho1TEeS-muvgwqy9Mw" name="p" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQK3ko1TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQK3k41TEeS-muvgwqy9Mw" name="Cartesian" method="_NYY_c41TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQLeoY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQLeoo1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQK3lI1TEeS-muvgwqy9Mw" name="p1" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQLeoI1TEeS-muvgwqy9Mw" name="p2" type="_LqSe4I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQLeo41TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQLepI1TEeS-muvgwqy9Mw" name="Cartesian" method="_NYY_d41TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQMFsY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQMFso1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQMFsI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQMFs41TEeS-muvgwqy9Mw" type="_NQJCYI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQMFtI1TEeS-muvgwqy9Mw" name="add" method="_NYY_eo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQMFtY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQMswI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQMsxI1TEeS-muvgwqy9Mw" name="dotProduct" method="_NYZmgI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQMsxY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQNT0I1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQN64o1TEeS-muvgwqy9Mw" name="getDirection" method="_NYZmg41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQN6441TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQOh841TEeS-muvgwqy9Mw" name="getMagnitude" method="_NYZmhY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQOh9I1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQPJA41TEeS-muvgwqy9Mw" name="getSquareMagnitude" method="_NYZmh41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQPJBI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQPwE41TEeS-muvgwqy9Mw" name="getX" method="_NYZmiY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQPwFI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQQXI41TEeS-muvgwqy9Mw" name="getY" method="_NYaNkI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQQXJI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQQ-M41TEeS-muvgwqy9Mw" name="rotate" method="_NYaNko1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQQ-NI1TEeS-muvgwqy9Mw" name="theta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQRlQI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQSMUI1TEeS-muvgwqy9Mw" name="scale" method="_NYa0oI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQSMUY1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQSMUo1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQSzYo1TEeS-muvgwqy9Mw" name="subtract" method="_NYa0o41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQSzY41TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQSzZI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </nestedClassifier>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_NQUokI1TEeS-muvgwqy9Mw" name="Polar">
            <eAnnotations xmi:id="_NQUokY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQUoko1TEeS-muvgwqy9Mw" key="static"/>
            </eAnnotations>
            <generalization xmi:id="_NQfAoI1TEeS-muvgwqy9Mw" general="_LqTtAY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYbbsI1TEeS-muvgwqy9Mw" name="Polar" specification="_NQUok41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYbbsY1TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(0, 1);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYbbso1TEeS-muvgwqy9Mw" name="Polar" specification="_NQVPo41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYbbs41TEeS-muvgwqy9Mw" name="direction">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYbbtI1TEeS-muvgwqy9Mw" name="magnitude">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYbbtY1TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.direction = direction;
         this.magnitude = magnitude;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYbbto1TEeS-muvgwqy9Mw" name="Polar" specification="_NQV2tI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYbbt41TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYbbuI1TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this(other.getDirection(), other.getMagnitude());
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcCwI1TEeS-muvgwqy9Mw" name="add" specification="_NQWdw41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcCwY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYcCwo1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Cartesian(this).add(new Cartesian(other));
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcCw41TEeS-muvgwqy9Mw" name="dotProduct" specification="_NQXE041TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcCxI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYcCxY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return getMagnitude() * other.getMagnitude()
                 * Math.cos(angleBetween(other));
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcCxo1TEeS-muvgwqy9Mw" name="getDirection" specification="_NQYS8o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcCx41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return direction;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcCyI1TEeS-muvgwqy9Mw" name="getMagnitude" specification="_NQY6A41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcCyY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return magnitude;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcp0I1TEeS-muvgwqy9Mw" name="getSquareMagnitude" specification="_NQaIII1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcp0Y1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return magnitude * magnitude;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcp0o1TEeS-muvgwqy9Mw" name="getX" specification="_NQavMo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcp041TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return Math.cos(direction) * magnitude;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcp1I1TEeS-muvgwqy9Mw" name="getY" specification="_NQbWQ41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcp1Y1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>return Math.sin(direction) * magnitude;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYcp1o1TEeS-muvgwqy9Mw" name="rotate" specification="_NQb9Uo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYcp141TEeS-muvgwqy9Mw" name="theta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYcp2I1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Polar(direction + theta, magnitude);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYdQ4I1TEeS-muvgwqy9Mw" name="scale" specification="_NQckY41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYdQ4Y1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NYdQ4o1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return new Polar(direction, magnitude * factor);
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYdQ441TEeS-muvgwqy9Mw" name="subtract" specification="_NQdLdI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYdQ5I1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYdQ5Y1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return add(other.scale(-1));
     </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NQUok41TEeS-muvgwqy9Mw" name="Polar" method="_NYbbsI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQVPoI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQVPoY1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQVPoo1TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQVPo41TEeS-muvgwqy9Mw" name="Polar" method="_NYbbso1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQV2sY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQV2so1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQVPpI1TEeS-muvgwqy9Mw" name="direction">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQV2sI1TEeS-muvgwqy9Mw" name="magnitude">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQV2s41TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQV2tI1TEeS-muvgwqy9Mw" name="Polar" method="_NYbbto1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NQWdwI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NQWdwY1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NQV2tY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQWdwo1TEeS-muvgwqy9Mw" type="_NQUokI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQWdw41TEeS-muvgwqy9Mw" name="add" method="_NYcCwI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQWdxI1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQWdxY1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQXE041TEeS-muvgwqy9Mw" name="dotProduct" method="_NYcCw41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQXE1I1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQXr4I1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQYS8o1TEeS-muvgwqy9Mw" name="getDirection" method="_NYcCxo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQYS841TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQY6A41TEeS-muvgwqy9Mw" name="getMagnitude" method="_NYcCyI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQY6BI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQaIII1TEeS-muvgwqy9Mw" name="getSquareMagnitude" method="_NYcp0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQaIIY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQavMo1TEeS-muvgwqy9Mw" name="getX" method="_NYcp0o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQavM41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQbWQ41TEeS-muvgwqy9Mw" name="getY" method="_NYcp1I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQbWRI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQb9Uo1TEeS-muvgwqy9Mw" name="rotate" method="_NYcp1o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQb9U41TEeS-muvgwqy9Mw" name="theta">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQb9VI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQckY41TEeS-muvgwqy9Mw" name="scale" method="_NYdQ4I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQckZI1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NQdLcI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQdLdI1TEeS-muvgwqy9Mw" name="subtract" method="_NYdQ441TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQdLdY1TEeS-muvgwqy9Mw" name="other" type="_LqTtAY1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQdygI1TEeS-muvgwqy9Mw" type="_LqTtAY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LvuYgI1TEeS-muvgwqy9Mw" name="T"/>
        <packagedElement xmi:type="uml:Association" xmi:id="_Lz-mYY1TEeS-muvgwqy9Mw" name="" memberEnd="_Lz-mYo1TEeS-muvgwqy9Mw _Lx6w4I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_Lz-mYo1TEeS-muvgwqy9Mw" name="" type="_LYiAgI1TEeS-muvgwqy9Mw" association="_Lz-mYY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_L0BCoI1TEeS-muvgwqy9Mw" name="" memberEnd="_L0BCoY1TEeS-muvgwqy9Mw _Lx7X8I1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_L0BCoY1TEeS-muvgwqy9Mw" name="" type="_LYiAgI1TEeS-muvgwqy9Mw" association="_L0BCoI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_L0CQwI1TEeS-muvgwqy9Mw" name="" memberEnd="_L0CQwY1TEeS-muvgwqy9Mw _Lx7X8Y1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_L0CQwY1TEeS-muvgwqy9Mw" name="" type="_LYiAgI1TEeS-muvgwqy9Mw" association="_L0CQwI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LLfqEI1TEeS-muvgwqy9Mw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_LLfqEY1TEeS-muvgwqy9Mw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_LLfqEo1TEeS-muvgwqy9Mw" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_LpsB8I1TEeS-muvgwqy9Mw" name="Area"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LqSe4I1TEeS-muvgwqy9Mw" name="Point2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LqbBwI1TEeS-muvgwqy9Mw" name="AffineTransform"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Lqbo0Y1TEeS-muvgwqy9Mw" name="Ellipse2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LrAQkY1TEeS-muvgwqy9Mw" name="Line2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LrA3oI1TEeS-muvgwqy9Mw" name="Rectangle2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LrkRQo1TEeS-muvgwqy9Mw" name="Path2D"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Lrk4UY1TEeS-muvgwqy9Mw" name="PathIterator"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ls340Y1TEeS-muvgwqy9Mw" name="CubicCurve2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ls4f4Y1TEeS-muvgwqy9Mw" name="QuadCurve2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LPUaII1TEeS-muvgwqy9Mw" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_LrlfYY1TEeS-muvgwqy9Mw" name="BufferedImage"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LrmGcY1TEeS-muvgwqy9Mw" name="DataBufferInt"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LQOZEI1TEeS-muvgwqy9Mw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_LsWUYI1TEeS-muvgwqy9Mw" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LsXigI1TEeS-muvgwqy9Mw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LsYJkI1TEeS-muvgwqy9Mw" name="WindowEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_LsYwoY1TEeS-muvgwqy9Mw" name="WindowListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqghUI1TEeS-muvgwqy9Mw" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Lq_pgI1TEeS-muvgwqy9Mw" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrjDII1TEeS-muvgwqy9Mw" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrjqMY1TEeS-muvgwqy9Mw" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrkRQI1TEeS-muvgwqy9Mw" name="RenderingHints"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsGcwI1TEeS-muvgwqy9Mw" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsHq4I1TEeS-muvgwqy9Mw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsPmsI1TEeS-muvgwqy9Mw" name="FlowLayout"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Ls2qsI1TEeS-muvgwqy9Mw" name="Shape"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LLwIwI1TEeS-muvgwqy9Mw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_Lp1L4Y1TEeS-muvgwqy9Mw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Lp75kI1TEeS-muvgwqy9Mw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Lp-V0I1TEeS-muvgwqy9Mw" name="Closeable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Lp_j8Y1TEeS-muvgwqy9Mw" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqAyEY1TEeS-muvgwqy9Mw" name="PrintWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrdjkI1TEeS-muvgwqy9Mw" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LreKoY1TEeS-muvgwqy9Mw" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NV9WgI1TEeS-muvgwqy9Mw" name="StringWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NV99kY1TEeS-muvgwqy9Mw" name="Writer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWLY8Y1TEeS-muvgwqy9Mw" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWMAAY1TEeS-muvgwqy9Mw" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWMnEY1TEeS-muvgwqy9Mw" name="StringReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWVJ8I1TEeS-muvgwqy9Mw" name="OutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWapgI1TEeS-muvgwqy9Mw" name="UnsupportedEncodingException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LLwIwY1TEeS-muvgwqy9Mw" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_Lp2aAY1TEeS-muvgwqy9Mw" name="ServerSocket"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Lp3BEY1TEeS-muvgwqy9Mw" name="Socket"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqCAMY1TEeS-muvgwqy9Mw" name="InetAddress"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqDOUY1TEeS-muvgwqy9Mw" name="SocketException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqFDgI1TEeS-muvgwqy9Mw" name="SocketTimeoutException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LLzMEI1TEeS-muvgwqy9Mw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_LLzzII1TEeS-muvgwqy9Mw" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_LqGRoY1TEeS-muvgwqy9Mw" name="ConcurrentLinkedQueue"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Lqq5Yo1TEeS-muvgwqy9Mw" name="ConcurrentHashMap"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LQHEUI1TEeS-muvgwqy9Mw" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_LsI5AI1TEeS-muvgwqy9Mw" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqodII1TEeS-muvgwqy9Mw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqodIo1TEeS-muvgwqy9Mw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqpEMY1TEeS-muvgwqy9Mw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LqprQY1TEeS-muvgwqy9Mw" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LqqSUY1TEeS-muvgwqy9Mw" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Lqq5YI1TEeS-muvgwqy9Mw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LragQI1TEeS-muvgwqy9Mw" name="EventListener"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrcVcI1TEeS-muvgwqy9Mw" name="EventObject"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LrvQYI1TEeS-muvgwqy9Mw" name="Collection"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Lrv3cY1TEeS-muvgwqy9Mw" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LrwegY1TEeS-muvgwqy9Mw" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsxLII1TEeS-muvgwqy9Mw" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ls5G8Y1TEeS-muvgwqy9Mw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Ls5G841TEeS-muvgwqy9Mw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NWEEMY1TEeS-muvgwqy9Mw" name="Enumeration"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWErQY1TEeS-muvgwqy9Mw" name="Locale"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NWFSUY1TEeS-muvgwqy9Mw" name="ResourceBundle"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_LtzF4I1TEeS-muvgwqy9Mw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_LtzF4Y1TEeS-muvgwqy9Mw" name="Runnable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Lt6aoI1TEeS-muvgwqy9Mw" name="Object"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_NMZK0I1TEeS-muvgwqy9Mw" name="reflect">
          <packagedElement xmi:type="uml:Class" xmi:id="_NV-koY1TEeS-muvgwqy9Mw" name="Array"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NWC2EI1TEeS-muvgwqy9Mw" name="Field"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NWC2Eo1TEeS-muvgwqy9Mw" name="Method"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_NWDdIY1TEeS-muvgwqy9Mw" name="Modifier"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NW8N8I1TEeS-muvgwqy9Mw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NW9cEI1TEeS-muvgwqy9Mw" name="Throwable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_NXBtgI1TEeS-muvgwqy9Mw" name="Number"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_NXPI4I1TEeS-muvgwqy9Mw" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LLtsgI1TEeS-muvgwqy9Mw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_LLuTkI1TEeS-muvgwqy9Mw" name="json">
        <packagedElement xmi:type="uml:Class" xmi:id="_LYxREI1TEeS-muvgwqy9Mw" name="HTTPTokener">
          <ownedComment xmi:id="_LzF1kI1TEeS-muvgwqy9Mw">
            <body>The HTTPTokener extends the JSONTokener to provide additional methods
for the parsing of HTTP headers.
@author JSON.org
@version 2012-11-13</body>
          </ownedComment>
          <generalization xmi:id="_LwNgsI1TEeS-muvgwqy9Mw" general="_LwLEcI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly0IwI1TEeS-muvgwqy9Mw" name="HTTPTokener" specification="_LYx4II1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly0IwY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly0Iwo1TEeS-muvgwqy9Mw" type="_LYxREI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(string);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly0Iw41TEeS-muvgwqy9Mw" name="nextToken" specification="_LYyfM41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly0IxI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char c;
     char q;
     StringBuffer sb = new StringBuffer();
     do {
         c = next();
     } while (Character.isWhitespace(c));
     if (c == '&quot;' || c == '\'') {
         q = c;
         for (;;) {
             c = next();
             if (c &lt; ' ') {
                 throw syntaxError(&quot;Unterminated string.&quot;);
             }
             if (c == q) {
                 return sb.toString();
             }
             sb.append(c);
         }
     }
     for (;;) {
         if (c == 0 || Character.isWhitespace(c)) {
             return sb.toString();
         }
         sb.append(c);
         c = next();
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LYx4II1TEeS-muvgwqy9Mw" name="HTTPTokener" method="_Ly0IwI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_LYyfMI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_LYyfMY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_LYx4IY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LYyfMo1TEeS-muvgwqy9Mw" type="_LYxREI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LYyfM41TEeS-muvgwqy9Mw" name="nextToken" method="_Ly0Iw41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LYyfNI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LYzGQI1TEeS-muvgwqy9Mw" name="HTTP">
          <ownedComment xmi:id="_LzF1kY1TEeS-muvgwqy9Mw">
            <body>Convert an HTTP header to a JSONObject and back.
@author JSON.org
@version 2010-12-24</body>
          </ownedComment>
          <ownedAttribute xmi:id="_Lx9NII1TEeS-muvgwqy9Mw" name="CRLF" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_Lx9NIY1TEeS-muvgwqy9Mw" value="&quot;\r\n&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly0v0I1TEeS-muvgwqy9Mw" name="toJSONObject" specification="_LYztUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly0v0Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly0v0o1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject     jo = new JSONObject();
     HTTPTokener    x = new HTTPTokener(string);
     String         token;

     token = x.nextToken();
     if (token.toUpperCase().startsWith(&quot;HTTP&quot;)) {

// Response

         jo.put(&quot;HTTP-Version&quot;, token);
         jo.put(&quot;Status-Code&quot;, x.nextToken());
         jo.put(&quot;Reason-Phrase&quot;, x.nextTo('\0'));
         x.next();

     } else {

// Request

         jo.put(&quot;Method&quot;, token);
         jo.put(&quot;Request-URI&quot;, x.nextToken());
         jo.put(&quot;HTTP-Version&quot;, x.nextToken());
     }

// Fields

     while (x.more()) {
         String name = x.nextTo(':');
         x.next(':');
         jo.put(name, x.nextTo('\0'));
         x.next();
     }
     return jo;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly0v041TEeS-muvgwqy9Mw" name="toString" specification="_LwPV4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly0v1I1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly0v1Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Iterator     keys = jo.keys();
     String       string;
     StringBuffer sb = new StringBuffer();
     if (jo.has(&quot;Status-Code&quot;) &amp;&amp; jo.has(&quot;Reason-Phrase&quot;)) {
         sb.append(jo.getString(&quot;HTTP-Version&quot;));
         sb.append(' ');
         sb.append(jo.getString(&quot;Status-Code&quot;));
         sb.append(' ');
         sb.append(jo.getString(&quot;Reason-Phrase&quot;));
     } else if (jo.has(&quot;Method&quot;) &amp;&amp; jo.has(&quot;Request-URI&quot;)) {
         sb.append(jo.getString(&quot;Method&quot;));
         sb.append(' ');
         sb.append('&quot;');
         sb.append(jo.getString(&quot;Request-URI&quot;));
         sb.append('&quot;');
         sb.append(' ');
         sb.append(jo.getString(&quot;HTTP-Version&quot;));
     } else {
         throw new JSONException(&quot;Not enough material for an HTTP header.&quot;);
     }
     sb.append(CRLF);
     while (keys.hasNext()) {
         string = keys.next().toString();
         if (!&quot;HTTP-Version&quot;.equals(string)      &amp;&amp; !&quot;Status-Code&quot;.equals(string) &amp;&amp;
                 !&quot;Reason-Phrase&quot;.equals(string) &amp;&amp; !&quot;Method&quot;.equals(string) &amp;&amp;
                 !&quot;Request-URI&quot;.equals(string)   &amp;&amp; !jo.isNull(string)) {
             sb.append(string);
             sb.append(&quot;: &quot;);
             sb.append(jo.getString(string));
             sb.append(CRLF);
         }
     }
     sb.append(CRLF);
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LYztUI1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_Ly0v0I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LYztUY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwOu0I1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwPV4I1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly0v041TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwPV4Y1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwP88I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LY1igI1TEeS-muvgwqy9Mw" name="Cookie">
          <ownedComment xmi:id="_LzF1k41TEeS-muvgwqy9Mw">
            <body>Convert a web browser cookie specification to a JSONObject and back.
JSON and Cookies are both notations for name/value pairs.
@author JSON.org
@version 2010-12-24</body>
          </ownedComment>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly1W4I1TEeS-muvgwqy9Mw" name="escape" specification="_LY2JkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly1W4Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly1W4o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char         c;
     String       s = string.trim();
     StringBuffer sb = new StringBuffer();
     int          length = s.length();
     for (int i = 0; i &lt; length; i += 1) {
         c = s.charAt(i);
         if (c &lt; ' ' || c == '+' || c == '%' || c == '=' || c == ';') {
             sb.append('%');
             sb.append(Character.forDigit((char)((c >>> 4) &amp; 0x0f), 16));
             sb.append(Character.forDigit((char)(c &amp; 0x0f), 16));
         } else {
             sb.append(c);
         }
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly1W441TEeS-muvgwqy9Mw" name="toJSONObject" specification="_LY2woI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly1W5I1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly1W5Y1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>String         name;
     JSONObject     jo = new JSONObject();
     Object         value;
     JSONTokener x = new JSONTokener(string);
     jo.put(&quot;name&quot;, x.nextTo('='));
     x.next('=');
     jo.put(&quot;value&quot;, x.nextTo(';'));
     x.next();
     while (x.more()) {
         name = unescape(x.nextTo(&quot;=;&quot;));
         if (x.next() != '=') {
             if (name.equals(&quot;secure&quot;)) {
                 value = Boolean.TRUE;
             } else {
                 throw x.syntaxError(&quot;Missing '=' in cookie parameter.&quot;);
             }
         } else {
             value = unescape(x.nextTo(';'));
             x.next();
         }
         jo.put(name, value);
     }
     return jo;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly1W5o1TEeS-muvgwqy9Mw" name="toString" specification="_LwRyII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly1W541TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly1W6I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();

     sb.append(escape(jo.getString(&quot;name&quot;)));
     sb.append(&quot;=&quot;);
     sb.append(escape(jo.getString(&quot;value&quot;)));
     if (jo.has(&quot;expires&quot;)) {
         sb.append(&quot;;expires=&quot;);
         sb.append(jo.getString(&quot;expires&quot;));
     }
     if (jo.has(&quot;domain&quot;)) {
         sb.append(&quot;;domain=&quot;);
         sb.append(escape(jo.getString(&quot;domain&quot;)));
     }
     if (jo.has(&quot;path&quot;)) {
         sb.append(&quot;;path=&quot;);
         sb.append(escape(jo.getString(&quot;path&quot;)));
     }
     if (jo.optBoolean(&quot;secure&quot;)) {
         sb.append(&quot;;secure&quot;);
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly198I1TEeS-muvgwqy9Mw" name="unescape" specification="_LY3XsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly198Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly198o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>int length = string.length();
     StringBuffer sb = new StringBuffer();
     for (int i = 0; i &lt; length; ++i) {
         char c = string.charAt(i);
         if (c == '+') {
             c = ' ';
         } else if (c == '%' &amp;&amp; i + 2 &lt; length) {
             int d = JSONTokener.dehexchar(string.charAt(i + 1));
             int e = JSONTokener.dehexchar(string.charAt(i + 2));
             if (d >= 0 &amp;&amp; e >= 0) {
                 c = (char)(d * 16 + e);
                 i += 2;
             }
         }
         sb.append(c);
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LY2JkI1TEeS-muvgwqy9Mw" name="escape" isStatic="true" method="_Ly1W4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LY2JkY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LY2Jko1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LY2woI1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_Ly1W441TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LY2woY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwRLEI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LY3XsI1TEeS-muvgwqy9Mw" name="unescape" isStatic="true" method="_Ly198I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LY3-wI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LY3-wY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwRyII1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly1W5o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwRyIY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwRyIo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LY5M4I1TEeS-muvgwqy9Mw" name="CookieList">
          <ownedComment xmi:id="_LzGcoI1TEeS-muvgwqy9Mw">
            <body>Convert a web browser cookie list string to a JSONObject and back.
@author JSON.org
@version 2010-12-24</body>
          </ownedComment>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly19841TEeS-muvgwqy9Mw" name="toJSONObject" specification="_LY5z8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly199I1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly199Y1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject jo = new JSONObject();
     JSONTokener x = new JSONTokener(string);
     while (x.more()) {
         String name = Cookie.unescape(x.nextTo('='));
         x.next('=');
         jo.put(name, Cookie.unescape(x.nextTo(';')));
         x.next();
     }
     return jo;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly2lAI1TEeS-muvgwqy9Mw" name="toString" specification="_LwTnUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly2lAY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly2lAo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean      b = false;
     Iterator     keys = jo.keys();
     String       string;
     StringBuffer sb = new StringBuffer();
     while (keys.hasNext()) {
         string = keys.next().toString();
         if (!jo.isNull(string)) {
             if (b) {
                 sb.append(';');
             }
             sb.append(Cookie.escape(string));
             sb.append(&quot;=&quot;);
             sb.append(Cookie.escape(jo.getString(string)));
             b = true;
         }
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LY5z8I1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_Ly19841TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LY5z8Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwTAQI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwTnUI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly2lAI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwTnUY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwTnUo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LY83QI1TEeS-muvgwqy9Mw" name="CDL">
          <ownedComment xmi:id="_LzGcoo1TEeS-muvgwqy9Mw">
            <body>This provides static methods to convert comma delimited text into a
JSONArray, and to covert a JSONArray into comma delimited text. Comma
delimited text is a very popular format for data interchange. It is
understood by most database, spreadsheet, and organizer programs.
&lt;p>
Each row of text represents a row in a table or a data record. Each row
ends with a NEWLINE character. Each row contains one or more values.
Values are separated by commas. A value can contain any character except
for comma, unless is is wrapped in single quotes or double quotes.
&lt;p>
The first row usually contains the names of the columns.
&lt;p>
A comma delimited list can be converted into a JSONArray of JSONObjects.
The names for the elements in the JSONObjects can be taken from the names
in the first row.
@author JSON.org
@version 2012-11-13</body>
          </ownedComment>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly2lA41TEeS-muvgwqy9Mw" name="getValue" specification="_LwVcgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly2lBI1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly2lBY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char c;
     char q;
     StringBuffer sb;
     do {
         c = x.next();
     } while (c == ' ' || c == '\t');
     switch (c) {
     case 0:
         return null;
     case '&quot;':
     case '\'':
         q = c;
         sb = new StringBuffer();
         for (;;) {
             c = x.next();
             if (c == q) {
                 break;
             }
             if (c == 0 || c == '\n' || c == '\r') {
                 throw x.syntaxError(&quot;Missing close quote '&quot; + q + &quot;'.&quot;);
             }
             sb.append(c);
         }
         return sb.toString();
     case ',':
         x.back();
         return &quot;&quot;;
     default:
         x.back();
         return x.nextTo(',');
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3MEI1TEeS-muvgwqy9Mw" name="rowToJSONArray" specification="_LwXRsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3MEY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3MEo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONArray ja = new JSONArray();
     for (;;) {
         String value = getValue(x);
         char c = x.next();
         if (value == null ||
                 (ja.length() == 0 &amp;&amp; value.length() == 0 &amp;&amp; c != ',')) {
             return null;
         }
         ja.put(value);
         for (;;) {
             if (c == ',') {
                 break;
             }
             if (c != ' ') {
                 if (c == '\n' || c == '\r' || c == 0) {
                     return ja;
                 }
                 throw x.syntaxError(&quot;Bad character '&quot; + c + &quot;' (&quot; +
                         (int)c + &quot;).&quot;);
             }
             c = x.next();
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3ME41TEeS-muvgwqy9Mw" name="rowToJSONObject" specification="_LwYf0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3MFI1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3MFY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3MFo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONArray ja = rowToJSONArray(x);
     return ja != null ? ja.toJSONObject(names) :  null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3MF41TEeS-muvgwqy9Mw" name="rowToString" specification="_LwZt8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3MGI1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3MGY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     for (int i = 0; i &lt; ja.length(); i += 1) {
         if (i > 0) {
             sb.append(',');
         }
         Object object = ja.opt(i);
         if (object != null) {
             String string = object.toString();
             if (string.length() > 0 &amp;&amp; (string.indexOf(',') >= 0 ||
                     string.indexOf('\n') >= 0 || string.indexOf('\r') >= 0 ||
                     string.indexOf(0) >= 0 || string.charAt(0) == '&quot;')) {
                 sb.append('&quot;');
                 int length = string.length();
                 for (int j = 0; j &lt; length; j += 1) {
                     char c = string.charAt(j);
                     if (c >= ' ' &amp;&amp; c != '&quot;') {
                         sb.append(c);
                     }
                 }
                 sb.append('&quot;');
             } else {
                 sb.append(string);
             }
         }
     }
     sb.append('\n');
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3zII1TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LY-scI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3zIY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly3zIo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSONArray(new JSONTokener(string));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3zI41TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LwbjII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3zJI1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3zJY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSONArray(rowToJSONArray(x), x);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly3zJo1TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LwcKMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly3zJ41TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly3zKI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly3zKY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSONArray(names, new JSONTokener(string));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly4aMI1TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LwdYUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly4aMY1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly4aMo1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly4aM41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (names == null || names.length() == 0) {
         return null;
     }
     JSONArray ja = new JSONArray();
     for (;;) {
         JSONObject jo = rowToJSONObject(names, x);
         if (jo == null) {
             break;
         }
         ja.put(jo);
     }
     if (ja.length() == 0) {
         return null;
     }
     return ja;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly4aNI1TEeS-muvgwqy9Mw" name="toString" specification="_LwemcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly4aNY1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly4aNo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>JSONObject jo = ja.optJSONObject(0);
     if (jo != null) {
         JSONArray names = jo.names();
         if (names != null) {
             return rowToString(names) + toString(names, ja);
         }
     }
     return null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly4aN41TEeS-muvgwqy9Mw" name="toString" specification="_LwfNgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly4aOI1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly4aOY1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly4aOo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (names == null || names.length() == 0) {
         return null;
     }
     StringBuffer sb = new StringBuffer();
     for (int i = 0; i &lt; ja.length(); i += 1) {
         JSONObject jo = ja.optJSONObject(i);
         if (jo != null) {
             sb.append(rowToString(jo.toJSONArray(names)));
         }
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LY-scI1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly3zII1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LY-scY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwaVAI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwVcgI1TEeS-muvgwqy9Mw" name="getValue" visibility="private" isStatic="true" method="_Ly2lA41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwVcgY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwWDkI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwXRsI1TEeS-muvgwqy9Mw" name="rowToJSONArray" isStatic="true" method="_Ly3MEI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwXRsY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwXRso1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwYf0I1TEeS-muvgwqy9Mw" name="rowToJSONObject" isStatic="true" method="_Ly3ME41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwYf0Y1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwYf0o1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwYf041TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwZt8I1TEeS-muvgwqy9Mw" name="rowToString" isStatic="true" method="_Ly3MF41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwZt8Y1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwZt8o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwbjII1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly3zI41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwbjIY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwbjIo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwcKMI1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly3zJo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwcxQI1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwcxQY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwcxQo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwdYUI1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly4aMI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwdYUY1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwd_YI1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwd_YY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwemcI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly4aNI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwemcY1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwemco1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwfNgI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly4aN41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwfNgY1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwf0kI1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwf0kY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LZGoQI1TEeS-muvgwqy9Mw" name="JSONML">
          <ownedComment xmi:id="_LzHDsI1TEeS-muvgwqy9Mw">
            <body>This provides static methods to convert an XML text into a JSONArray or
JSONObject, and to covert a JSONArray or JSONObject into an XML text using
the JsonML transform.
 *
@author JSON.org
@version 2012-03-28</body>
          </ownedComment>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly5BQI1TEeS-muvgwqy9Mw" name="parse" specification="_Lwi34I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly5BQY1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly5BQo1TEeS-muvgwqy9Mw" name="arrayForm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly5BQ41TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly5BRI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>String     attribute;
     char       c;
     String       closeTag = null;
     int        i;
     JSONArray  newja = null;
     JSONObject newjo = null;
     Object     token;
     String       tagName = null;

// Test for and skip past these forms:
//      &lt;!-- ... -->
//      &lt;![  ... ]]&gt;
//      &lt;!   ...   >
//      &lt;?   ...  ?>

     while (true) {
         if (!x.more()) {
             throw x.syntaxError(&quot;Bad XML&quot;);
         }
         token = x.nextContent();
         if (token == XML.LT) {
             token = x.nextToken();
             if (token instanceof Character) {
                 if (token == XML.SLASH) {

// Close tag &lt;/

                     token = x.nextToken();
                     if (!(token instanceof String)) {
                         throw new JSONException(
                                 &quot;Expected a closing name instead of '&quot; +
                                 token + &quot;'.&quot;);
                     }
                     if (x.nextToken() != XML.GT) {
                         throw x.syntaxError(&quot;Misshaped close tag&quot;);
                     }
                     return token;
                 } else if (token == XML.BANG) {

// &lt;!

                     c = x.next();
                     if (c == '-') {
                         if (x.next() == '-') {
                             x.skipPast(&quot;-->&quot;);
                         } else {
                             x.back();
                         }
                     } else if (c == '[') {
                         token = x.nextToken();
                         if (token.equals(&quot;CDATA&quot;) &amp;&amp; x.next() == '[') {
                             if (ja != null) {
                                 ja.put(x.nextCDATA());
                             }
                         } else {
                             throw x.syntaxError(&quot;Expected 'CDATA['&quot;);
                         }
                     } else {
                         i = 1;
                         do {
                             token = x.nextMeta();
                             if (token == null) {
                                 throw x.syntaxError(&quot;Missing '>' after '&lt;!'.&quot;);
                             } else if (token == XML.LT) {
                                 i += 1;
                             } else if (token == XML.GT) {
                                 i -= 1;
                             }
                         } while (i > 0);
                     }
                 } else if (token == XML.QUEST) {

// &lt;?

                     x.skipPast(&quot;?>&quot;);
                 } else {
                     throw x.syntaxError(&quot;Misshaped tag&quot;);
                 }

// Open tag &lt;

             } else {
                 if (!(token instanceof String)) {
                     throw x.syntaxError(&quot;Bad tagName '&quot; + token + &quot;'.&quot;);
                 }
                 tagName = (String)token;
                 newja = new JSONArray();
                 newjo = new JSONObject();
                 if (arrayForm) {
                     newja.put(tagName);
                     if (ja != null) {
                         ja.put(newja);
                     }
                 } else {
                     newjo.put(&quot;tagName&quot;, tagName);
                     if (ja != null) {
                         ja.put(newjo);
                     }
                 }
                 token = null;
                 for (;;) {
                     if (token == null) {
                         token = x.nextToken();
                     }
                     if (token == null) {
                         throw x.syntaxError(&quot;Misshaped tag&quot;);
                     }
                     if (!(token instanceof String)) {
                         break;
                     }

// attribute = value

                     attribute = (String)token;
                     if (!arrayForm &amp;&amp; (&quot;tagName&quot;.equals(attribute) || &quot;childNode&quot;.equals(attribute))) {
                         throw x.syntaxError(&quot;Reserved attribute.&quot;);
                     }
                     token = x.nextToken();
                     if (token == XML.EQ) {
                         token = x.nextToken();
                         if (!(token instanceof String)) {
                             throw x.syntaxError(&quot;Missing value&quot;);
                         }
                         newjo.accumulate(attribute, XML.stringToValue((String)token));
                         token = null;
                     } else {
                         newjo.accumulate(attribute, &quot;&quot;);
                     }
                 }
                 if (arrayForm &amp;&amp; newjo.length() > 0) {
                     newja.put(newjo);
                 }

// Empty tag &lt;.../>

                 if (token == XML.SLASH) {
                     if (x.nextToken() != XML.GT) {
                         throw x.syntaxError(&quot;Misshaped tag&quot;);
                     }
                     if (ja == null) {
                         if (arrayForm) {
                             return newja;
                         } else {
                             return newjo;
                         }
                     }

// Content, between &lt;...> and &lt;/...>

                 } else {
                     if (token != XML.GT) {
                         throw x.syntaxError(&quot;Misshaped tag&quot;);
                     }
                     closeTag = (String)parse(x, arrayForm, newja);
                     if (closeTag != null) {
                         if (!closeTag.equals(tagName)) {
                             throw x.syntaxError(&quot;Mismatched '&quot; + tagName +
                                     &quot;' and '&quot; + closeTag + &quot;'&quot;);
                         }
                         tagName = null;
                         if (!arrayForm &amp;&amp; newja.length() > 0) {
                             newjo.put(&quot;childNodes&quot;, newja);
                         }
                         if (ja == null) {
                             if (arrayForm) {
                                 return newja;
                             } else {
                                 return newjo;
                             }
                         }
                     }
                 }
             }
         } else {
             if (ja != null) {
                 ja.put(token instanceof String
                     ? XML.stringToValue((String)token)
                     : token);
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly5oUI1TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LZH2YI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly5oUY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly5oUo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSONArray(new XMLTokener(string));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly5oU41TEeS-muvgwqy9Mw" name="toJSONArray" specification="_LwktEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly5oVI1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly5oVY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return (JSONArray)parse(x, true, null);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly5oVo1TEeS-muvgwqy9Mw" name="toJSONObject" specification="_LwlUII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly5oV41TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly5oWI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return (JSONObject)parse(x, false, null);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly62cI1TEeS-muvgwqy9Mw" name="toJSONObject" specification="_LZJrkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly62cY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Ly62co1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return toJSONObject(new XMLTokener(string));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly62c41TEeS-muvgwqy9Mw" name="toString" specification="_LwnJUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly62dI1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly62dY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>int             i;
     JSONObject   jo;
     String       key;
     Iterator     keys;
     int             length;
     Object         object;
     StringBuffer sb = new StringBuffer();
     String       tagName;
     String       value;

// Emit &lt;tagName

     tagName = ja.getString(0);
     XML.noSpace(tagName);
     tagName = XML.escape(tagName);
     sb.append('&lt;');
     sb.append(tagName);

     object = ja.opt(1);
     if (object instanceof JSONObject) {
         i = 2;
         jo = (JSONObject)object;

// Emit the attributes

         keys = jo.keys();
         while (keys.hasNext()) {
             key = keys.next().toString();
             XML.noSpace(key);
             value = jo.optString(key);
             if (value != null) {
                 sb.append(' ');
                 sb.append(XML.escape(key));
                 sb.append('=');
                 sb.append('&quot;');
                 sb.append(XML.escape(value));
                 sb.append('&quot;');
             }
         }
     } else {
         i = 1;
     }

//Emit content in body

     length = ja.length();
     if (i >= length) {
         sb.append('/');
         sb.append('>');
     } else {
         sb.append('>');
         do {
             object = ja.get(i);
             i += 1;
             if (object != null) {
                 if (object instanceof String) {
                     sb.append(XML.escape(object.toString()));
                 } else if (object instanceof JSONObject) {
                     sb.append(toString((JSONObject)object));
                 } else if (object instanceof JSONArray) {
                     sb.append(toString((JSONArray)object));
                 }
             }
         } while (i &lt; length);
         sb.append('&lt;');
         sb.append('/');
         sb.append(tagName);
         sb.append('>');
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ly7dgI1TEeS-muvgwqy9Mw" name="toString" specification="_LwoXcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Ly7dgY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Ly7dgo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     int          i;
     JSONArray    ja;
     String       key;
     Iterator     keys;
     int          length;
     Object         object;
     String       tagName;
     String       value;

//Emit &lt;tagName

     tagName = jo.optString(&quot;tagName&quot;);
     if (tagName == null) {
         return XML.escape(jo.toString());
     }
     XML.noSpace(tagName);
     tagName = XML.escape(tagName);
     sb.append('&lt;');
     sb.append(tagName);

//Emit the attributes

     keys = jo.keys();
     while (keys.hasNext()) {
         key = keys.next().toString();
         if (!&quot;tagName&quot;.equals(key) &amp;&amp; !&quot;childNodes&quot;.equals(key)) {
             XML.noSpace(key);
             value = jo.optString(key);
             if (value != null) {
                 sb.append(' ');
                 sb.append(XML.escape(key));
                 sb.append('=');
                 sb.append('&quot;');
                 sb.append(XML.escape(value));
                 sb.append('&quot;');
             }
         }
     }

//Emit content in body

     ja = jo.optJSONArray(&quot;childNodes&quot;);
     if (ja == null) {
         sb.append('/');
         sb.append('>');
     } else {
         sb.append('>');
         length = ja.length();
         for (i = 0; i &lt; length; i += 1) {
             object = ja.get(i);
             if (object != null) {
                 if (object instanceof String) {
                     sb.append(XML.escape(object.toString()));
                 } else if (object instanceof JSONObject) {
                     sb.append(toString((JSONObject)object));
                 } else if (object instanceof JSONArray) {
                     sb.append(toString((JSONArray)object));
                 } else {
                     sb.append(object.toString());
                 }
             }
         }
         sb.append('&lt;');
         sb.append('/');
         sb.append(tagName);
         sb.append('>');
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_LZH2YI1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly5oUI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LZH2YY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_LwkGAI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LZJrkI1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_Ly62cI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LZJrkY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lwl7MI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_Lwi34I1TEeS-muvgwqy9Mw" name="parse" visibility="private" isStatic="true" method="_Ly5BQI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_Lwi34Y1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwi34o1TEeS-muvgwqy9Mw" name="arrayForm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_Lwje8I1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwje8Y1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwktEI1TEeS-muvgwqy9Mw" name="toJSONArray" isStatic="true" method="_Ly5oU41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwktEY1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwktEo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwlUII1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_Ly5oVo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwlUIY1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwlUIo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_LwnJUI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly62c41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwnJUY1TEeS-muvgwqy9Mw" name="ja" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_LwnJUo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_LwoXcI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_Ly7dgI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_LwoXcY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_Lwo-gI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LpyvoI1TEeS-muvgwqy9Mw" name="JSONObject">
          <ownedComment xmi:id="_NZP7EI1TEeS-muvgwqy9Mw">
            <body>A JSONObject is an unordered collection of name/value pairs. Its external
form is a string wrapped in curly braces with colons between the names and
values, and commas between the values and names. The internal form is an
object having &lt;code>get&lt;/code> and &lt;code>opt&lt;/code> methods for accessing
the values by name, and &lt;code>put&lt;/code> methods for adding or replacing
values by name. The values can be any of these types: &lt;code>Boolean&lt;/code>,
&lt;code>JSONArray&lt;/code>, &lt;code>JSONObject&lt;/code>, &lt;code>Number&lt;/code>,
&lt;code>String&lt;/code>, or the &lt;code>JSONObject.NULL&lt;/code> object. A
JSONObject constructor can be used to convert an external form JSON text
into an internal form whose values can be retrieved with the
&lt;code>get&lt;/code> and &lt;code>opt&lt;/code> methods, or to convert values into a
JSON text using the &lt;code>put&lt;/code> and &lt;code>toString&lt;/code> methods. A
&lt;code>get&lt;/code> method returns a value if one can be found, and throws an
exception if one cannot be found. An &lt;code>opt&lt;/code> method returns a
default value instead of throwing an exception, and so is useful for
obtaining optional values.
&lt;p>
The generic &lt;code>get()&lt;/code> and &lt;code>opt()&lt;/code> methods return an
object, which you can cast or query for type. There are also typed
&lt;code>get&lt;/code> and &lt;code>opt&lt;/code> methods that do type checking and type
coercion for you. The opt methods differ from the get methods in that they
do not throw. Instead, they return a specified value, such as null.
&lt;p>
The &lt;code>put&lt;/code> methods add or replace values in an object. For
example,
 *
&lt;pre>
myString = new JSONObject()
        .put(&amp;quot;JSON&amp;quot;, &amp;quot;Hello, World!&amp;quot;).toString();
&lt;/pre>
 *
produces the string &lt;code>{&quot;JSON&quot;: &quot;Hello, World&quot;}&lt;/code>.
&lt;p>
The texts produced by the &lt;code>toString&lt;/code> methods strictly conform to
the JSON syntax rules. The constructors are more forgiving in the texts they
will accept:
&lt;ul>
&lt;li>An extra &lt;code>,&lt;/code>&amp;nbsp;&lt;small>(comma)&lt;/small> may appear just
before the closing brace.&lt;/li>
&lt;li>Strings may be quoted with &lt;code>'&lt;/code>&amp;nbsp;&lt;small>(single
quote)&lt;/small>.&lt;/li>
&lt;li>Strings do not need to be quoted at all if they do not begin with a
quote or single quote, and if they do not contain leading or trailing
spaces, and if they do not contain any of these characters:
&lt;code>{ } [ ] / \ : , #&lt;/code> and if they do not look like numbers and
if they are not the reserved words &lt;code>true&lt;/code>, &lt;code>false&lt;/code>,
or &lt;code>null&lt;/code>.&lt;/li>
&lt;/ul>
 *
@author JSON.org
@version 2013-04-18</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXj5AI1TEeS-muvgwqy9Mw" name="keyPoolSize" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXkgEI1TEeS-muvgwqy9Mw" value="100"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXkgEY1TEeS-muvgwqy9Mw" name="keyPool" visibility="private" isStatic="true" type="_LqpEMY1TEeS-muvgwqy9Mw" association="_NZtOEY1TEeS-muvgwqy9Mw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXkgEo1TEeS-muvgwqy9Mw" value="new HashMap(keyPoolSize)"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXlHI41TEeS-muvgwqy9Mw" name="map" visibility="private" isLeaf="true" type="_LqqSUY1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZtOFI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_NXluM41TEeS-muvgwqy9Mw" name="NULL" isLeaf="true" isStatic="true" type="_Lt6aoI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZt1IY1TEeS-muvgwqy9Mw">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXluNI1TEeS-muvgwqy9Mw" value="new Null()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYefBY1TEeS-muvgwqy9Mw" name="JSONObject" specification="_NNTw0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYefBo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.map = new HashMap();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYefB41TEeS-muvgwqy9Mw" name="JSONObject" specification="_NQjSEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYefCI1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYefCY1TEeS-muvgwqy9Mw" name="names">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYefCo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYefC41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     for (int i = 0; i &lt; names.length; i += 1) {
         try {
             this.putOnce(names[i], jo.opt(names[i]));
         } catch (Exception ignore) {
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYfGEI1TEeS-muvgwqy9Mw" name="JSONObject" specification="_NNUX4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYfGEY1TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYfGEo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     char c;
     String key;

     if (x.nextClean() != '{') {
         throw x.syntaxError(&quot;A JSONObject text must begin with '{'&quot;);
     }
     for (;;) {
         c = x.nextClean();
         switch (c) {
         case 0:
             throw x.syntaxError(&quot;A JSONObject text must end with '}'&quot;);
         case '}':
             return;
         default:
             x.back();
             key = x.nextValue().toString();
         }

// The key is followed by ':'.

         c = x.nextClean();
         if (c != ':') {
             throw x.syntaxError(&quot;Expected a ':' after a key&quot;);
         }
         this.putOnce(key, x.nextValue());

// Pairs are separated by ','.

         switch (x.nextClean()) {
         case ';':
         case ',':
             if (x.nextClean() == '}') {
                 return;
             }
             x.back();
             break;
         case '}':
             return;
         default:
             throw x.syntaxError(&quot;Expected a ',' or '}'&quot;);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYfGE41TEeS-muvgwqy9Mw" name="JSONObject" specification="_NNU-8Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYfGFI1TEeS-muvgwqy9Mw" name="map" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYfGFY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.map = new HashMap();
     if (map != null) {
         Iterator i = map.entrySet().iterator();
         while (i.hasNext()) {
             Map.Entry e = (Map.Entry) i.next();
             Object value = e.getValue();
             if (value != null) {
                 this.map.put(e.getKey(), wrap(value));
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYfGFo1TEeS-muvgwqy9Mw" name="JSONObject" specification="_NNVmAY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYfGF41TEeS-muvgwqy9Mw" name="bean" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYfGGI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     this.populateMap(bean);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYfGGY1TEeS-muvgwqy9Mw" name="JSONObject" specification="_NQj5JI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYfGGo1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYfGG41TEeS-muvgwqy9Mw" name="names">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYfGHI1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYfGHY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     Class c = object.getClass();
     for (int i = 0; i &lt; names.length; i += 1) {
         String name = names[i];
         try {
             this.putOpt(name, c.getField(name).get(object));
         } catch (Exception ignore) {
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYftII1TEeS-muvgwqy9Mw" name="JSONObject" specification="_NQlHRI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYftIY1TEeS-muvgwqy9Mw" name="source">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYftIo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(new JSONTokener(source));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYftI41TEeS-muvgwqy9Mw" name="JSONObject" specification="_NXAfYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYftJI1TEeS-muvgwqy9Mw" name="baseName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYftJY1TEeS-muvgwqy9Mw" name="locale" type="_NWErQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYftJo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     ResourceBundle bundle = ResourceBundle.getBundle(baseName, locale,
             Thread.currentThread().getContextClassLoader());

// Iterate through the keys in the bundle.

     Enumeration keys = bundle.getKeys();
     while (keys.hasMoreElements()) {
         Object key = keys.nextElement();
         if (key instanceof String) {

// Go through the path, ensuring that there is a nested JSONObject for each
// segment except the last. Add the value using the last segment's name into
// the deepest nested JSONObject.

             String[] path = ((String) key).split(&quot;\\.&quot;);
             int last = path.length - 1;
             JSONObject target = this;
             for (int i = 0; i &lt; last; i += 1) {
                 String segment = path[i];
                 JSONObject nextTarget = target.optJSONObject(segment);
                 if (nextTarget == null) {
                     nextTarget = new JSONObject();
                     target.put(segment, nextTarget);
                 }
                 target = nextTarget;
             }
             target.put(path[last], bundle.getString((String) key));
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYftJ41TEeS-muvgwqy9Mw" name="accumulate" specification="_NQmVYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYftKI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYftKY1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYftKo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>testValidity(value);
     Object object = this.opt(key);
     if (object == null) {
         this.put(key,
                 value instanceof JSONArray ? new JSONArray().put(value)
                         : value);
     } else if (object instanceof JSONArray) {
         ((JSONArray) object).put(value);
     } else {
         this.put(key, new JSONArray().put(object).put(value));
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYftK41TEeS-muvgwqy9Mw" name="append" specification="_NQm8cI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYftLI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYftLY1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYftLo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>testValidity(value);
     Object object = this.opt(key);
     if (object == null) {
         this.put(key, new JSONArray().put(value));
     } else if (object instanceof JSONArray) {
         this.put(key, ((JSONArray) object).put(value));
     } else {
         throw new JSONException(&quot;JSONObject[&quot; + key
                 + &quot;] is not a JSONArray.&quot;);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYgUMI1TEeS-muvgwqy9Mw" name="doubleToString" specification="_NQm8dI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYgUMY1TEeS-muvgwqy9Mw" name="d">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYgUMo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (Double.isInfinite(d) || Double.isNaN(d)) {
         return &quot;null&quot;;
     }

// Shave off trailing zeros and decimal point, if possible.

     String string = Double.toString(d);
     if (string.indexOf('.') > 0 &amp;&amp; string.indexOf('e') &lt; 0
             &amp;&amp; string.indexOf('E') &lt; 0) {
         while (string.endsWith(&quot;0&quot;)) {
             string = string.substring(0, string.length() - 1);
         }
         if (string.endsWith(&quot;.&quot;)) {
             string = string.substring(0, string.length() - 1);
         }
     }
     return string;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYgUM41TEeS-muvgwqy9Mw" name="get" specification="_NQnjgY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYgUNI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYgUNY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (key == null) {
         throw new JSONException(&quot;Null key.&quot;);
     }
     Object object = this.opt(key);
     if (object == null) {
         throw new JSONException(&quot;JSONObject[&quot; + quote(key) + &quot;] not found.&quot;);
     }
     return object;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYgUNo1TEeS-muvgwqy9Mw" name="getBoolean" specification="_NQoKkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYgUN41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYgUOI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(key);
     if (object.equals(Boolean.FALSE)
             || (object instanceof String &amp;&amp; ((String) object)
                     .equalsIgnoreCase(&quot;false&quot;))) {
         return false;
     } else if (object.equals(Boolean.TRUE)
             || (object instanceof String &amp;&amp; ((String) object)
                     .equalsIgnoreCase(&quot;true&quot;))) {
         return true;
     }
     throw new JSONException(&quot;JSONObject[&quot; + quote(key)
             + &quot;] is not a Boolean.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYg7QI1TEeS-muvgwqy9Mw" name="getDouble" specification="_NQoxoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYg7QY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYg7Qo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(key);
     try {
         return object instanceof Number ? ((Number) object).doubleValue()
                 : Double.parseDouble((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONObject[&quot; + quote(key)
                 + &quot;] is not a number.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYg7Q41TEeS-muvgwqy9Mw" name="getInt" specification="_NQpYsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYg7RI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYg7RY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(key);
     try {
         return object instanceof Number ? ((Number) object).intValue()
                 : Integer.parseInt((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONObject[&quot; + quote(key)
                 + &quot;] is not an int.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYg7Ro1TEeS-muvgwqy9Mw" name="getJSONArray" specification="_NQpYs41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYg7R41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYg7SI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.get(key);
     if (object instanceof JSONArray) {
         return (JSONArray) object;
     }
     throw new JSONException(&quot;JSONObject[&quot; + quote(key)
             + &quot;] is not a JSONArray.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYg7SY1TEeS-muvgwqy9Mw" name="getJSONObject" specification="_NQp_wY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYg7So1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYg7S41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.get(key);
     if (object instanceof JSONObject) {
         return (JSONObject) object;
     }
     throw new JSONException(&quot;JSONObject[&quot; + quote(key)
             + &quot;] is not a JSONObject.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYg7TI1TEeS-muvgwqy9Mw" name="getLong" specification="_NQqm0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYg7TY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYg7To1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(key);
     try {
         return object instanceof Number ? ((Number) object).longValue()
                 : Long.parseLong((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONObject[&quot; + quote(key)
                 + &quot;] is not a long.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYhiUI1TEeS-muvgwqy9Mw" name="getNames" specification="_NNWNEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYhiUY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYhiUo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYhiU41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>int length = jo.length();
     if (length == 0) {
         return null;
     }
     Iterator iterator = jo.keys();
     String[] names = new String[length];
     int i = 0;
     while (iterator.hasNext()) {
         names[i] = (String) iterator.next();
         i += 1;
     }
     return names;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYhiVI1TEeS-muvgwqy9Mw" name="getNames" specification="_NNW0I41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYhiVY1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYhiVo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYhiV41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>if (object == null) {
         return null;
     }
     Class klass = object.getClass();
     Field[] fields = klass.getFields();
     int length = fields.length;
     if (length == 0) {
         return null;
     }
     String[] names = new String[length];
     for (int i = 0; i &lt; length; i += 1) {
         names[i] = fields[i].getName();
     }
     return names;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYhiWI1TEeS-muvgwqy9Mw" name="getString" specification="_NQrN4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYhiWY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYhiWo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(key);
     if (object instanceof String) {
         return (String) object;
     }
     throw new JSONException(&quot;JSONObject[&quot; + quote(key) + &quot;] not a string.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiJYI1TEeS-muvgwqy9Mw" name="has" specification="_NQr08I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiJYY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYiJYo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.map.containsKey(key);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiJY41TEeS-muvgwqy9Mw" name="increment" specification="_NQscAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiJZI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYiJZY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object value = this.opt(key);
     if (value == null) {
         this.put(key, 1);
     } else if (value instanceof Integer) {
         this.put(key, ((Integer) value).intValue() + 1);
     } else if (value instanceof Long) {
         this.put(key, ((Long) value).longValue() + 1);
     } else if (value instanceof Double) {
         this.put(key, ((Double) value).doubleValue() + 1);
     } else if (value instanceof Float) {
         this.put(key, ((Float) value).floatValue() + 1);
     } else {
         throw new JSONException(&quot;Unable to increment [&quot; + quote(key) + &quot;].&quot;);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiJZo1TEeS-muvgwqy9Mw" name="isNull" specification="_NQscA41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiJZ41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYiJaI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return JSONObject.NULL.equals(this.opt(key));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiJaY1TEeS-muvgwqy9Mw" name="keys" specification="_NNYCQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiJao1TEeS-muvgwqy9Mw" type="_Lrv3cY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.keySet().iterator();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiwcI1TEeS-muvgwqy9Mw" name="keySet" specification="_NNYCRI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiwcY1TEeS-muvgwqy9Mw" type="_Lqq5YI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.map.keySet();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiwco1TEeS-muvgwqy9Mw" name="length" specification="_NNYpU41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiwc41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.map.size();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiwdI1TEeS-muvgwqy9Mw" name="names" specification="_NNYpVI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiwdY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONArray ja = new JSONArray();
     Iterator keys = this.keys();
     while (keys.hasNext()) {
         ja.put(keys.next());
     }
     return ja.length() == 0 ? null : ja;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYiwdo1TEeS-muvgwqy9Mw" name="numberToString" specification="_NXCUkY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYiwd41TEeS-muvgwqy9Mw" name="number" type="_NXBtgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYiweI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (number == null) {
         throw new JSONException(&quot;Null pointer&quot;);
     }
     testValidity(number);

// Shave off trailing zeros and decimal point, if possible.

     String string = number.toString();
     if (string.indexOf('.') > 0 &amp;&amp; string.indexOf('e') &lt; 0
             &amp;&amp; string.indexOf('E') &lt; 0) {
         while (string.endsWith(&quot;0&quot;)) {
             string = string.substring(0, string.length() - 1);
         }
         if (string.endsWith(&quot;.&quot;)) {
             string = string.substring(0, string.length() - 1);
         }
     }
     return string;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYjXgI1TEeS-muvgwqy9Mw" name="opt" specification="_NQtDEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYjXgY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYjXgo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return key == null ? null : this.map.get(key);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYjXg41TEeS-muvgwqy9Mw" name="optBoolean" specification="_NQtqIo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYjXhI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYjXhY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optBoolean(key, false);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYjXho1TEeS-muvgwqy9Mw" name="optBoolean" specification="_NQuRMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYjXh41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYjXiI1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYjXiY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getBoolean(key);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYjXio1TEeS-muvgwqy9Mw" name="optDouble" specification="_NQu4QI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYjXi41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYjXjI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optDouble(key, Double.NaN);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYj-kI1TEeS-muvgwqy9Mw" name="optDouble" specification="_NQu4Q41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYj-kY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYj-ko1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYj-k41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getDouble(key);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYj-lI1TEeS-muvgwqy9Mw" name="optInt" specification="_NQvfUY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYj-lY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYj-lo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optInt(key, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYj-l41TEeS-muvgwqy9Mw" name="optInt" specification="_NQwGYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYj-mI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYj-mY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYj-mo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getInt(key);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYkloI1TEeS-muvgwqy9Mw" name="optJSONArray" specification="_NQwGZI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYkloY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYkloo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object o = this.opt(key);
     return o instanceof JSONArray ? (JSONArray) o : null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYklo41TEeS-muvgwqy9Mw" name="optJSONObject" specification="_NQwtcY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYklpI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYklpY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.opt(key);
     return object instanceof JSONObject ? (JSONObject) object : null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYklpo1TEeS-muvgwqy9Mw" name="optLong" specification="_NQxUgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYklp41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYklqI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optLong(key, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlMsI1TEeS-muvgwqy9Mw" name="optLong" specification="_NQx7kI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlMsY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlMso1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlMs41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getLong(key);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlMtI1TEeS-muvgwqy9Mw" name="optString" specification="_NQzJsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlMtY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlMto1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optString(key, &quot;&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlMt41TEeS-muvgwqy9Mw" name="optString" specification="_NQzwwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlMuI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlMuY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlMuo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.opt(key);
     return NULL.equals(object) ? defaultValue : object.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlMu41TEeS-muvgwqy9Mw" name="populateMap" specification="_NNZ3cI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlMvI1TEeS-muvgwqy9Mw" name="bean" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>Class klass = bean.getClass();

// If klass is a System class then set includeSuperClass to false.

     boolean includeSuperClass = klass.getClassLoader() != null;

     Method[] methods = includeSuperClass ? klass.getMethods() : klass
             .getDeclaredMethods();
     for (int i = 0; i &lt; methods.length; i += 1) {
         try {
             Method method = methods[i];
             if (Modifier.isPublic(method.getModifiers())) {
                 String name = method.getName();
                 String key = &quot;&quot;;
                 if (name.startsWith(&quot;get&quot;)) {
                     if (&quot;getClass&quot;.equals(name)
                             || &quot;getDeclaringClass&quot;.equals(name)) {
                         key = &quot;&quot;;
                     } else {
                         key = name.substring(3);
                     }
                 } else if (name.startsWith(&quot;is&quot;)) {
                     key = name.substring(2);
                 }
                 if (key.length() > 0
                         &amp;&amp; Character.isUpperCase(key.charAt(0))
                         &amp;&amp; method.getParameterTypes().length == 0) {
                     if (key.length() == 1) {
                         key = key.toLowerCase();
                     } else if (!Character.isUpperCase(key.charAt(1))) {
                         key = key.substring(0, 1).toLowerCase()
                                 + key.substring(1);
                     }

                     Object result = method.invoke(bean, (Object[]) null);
                     if (result != null) {
                         this.map.put(key, wrap(result));
                     }
                 }
             }
         } catch (Exception ignore) {
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlzwI1TEeS-muvgwqy9Mw" name="put" specification="_NQ0X0Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlzwY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlzwo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlzw41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, value ? Boolean.TRUE : Boolean.FALSE);
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlzxI1TEeS-muvgwqy9Mw" name="put" specification="_NQ0-4Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlzxY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlzxo1TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYlzx41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, new JSONArray(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYlzyI1TEeS-muvgwqy9Mw" name="put" specification="_NQ2NAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYlzyY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlzyo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYlzy41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, new Double(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYma0I1TEeS-muvgwqy9Mw" name="put" specification="_NQ20EI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYma0Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma0o1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma041TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, new Integer(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYma1I1TEeS-muvgwqy9Mw" name="put" specification="_NQ3bII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYma1Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma1o1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma141TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, new Long(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYma2I1TEeS-muvgwqy9Mw" name="put" specification="_NQ3bJI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYma2Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma2o1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYma241TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(key, new JSONObject(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYma3I1TEeS-muvgwqy9Mw" name="put" specification="_NQ4pQ41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYma3Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYma3o1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYma341TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>String pooled;
     if (key == null) {
         throw new NullPointerException(&quot;Null key.&quot;);
     }
     if (value != null) {
         testValidity(value);
         pooled = (String) keyPool.get(key);
         if (pooled == null) {
             if (keyPool.size() >= keyPoolSize) {
                 keyPool = new HashMap(keyPoolSize);
             }
             keyPool.put(key, key);
         } else {
             key = pooled;
         }
         this.map.put(key, value);
     } else {
         this.remove(key);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYnB4I1TEeS-muvgwqy9Mw" name="putOnce" specification="_NQ53YI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYnB4Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYnB4o1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYnB441TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (key != null &amp;&amp; value != null) {
         if (this.opt(key) != null) {
             throw new JSONException(&quot;Duplicate key \&quot;&quot; + key + &quot;\&quot;&quot;);
         }
         this.put(key, value);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYnB5I1TEeS-muvgwqy9Mw" name="putOpt" specification="_NQ53ZI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYnB5Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYnB5o1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYnB541TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (key != null &amp;&amp; value != null) {
         this.put(key, value);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYnB6I1TEeS-muvgwqy9Mw" name="quote" specification="_NQ6eco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYnB6Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYnB6o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringWriter sw = new StringWriter();
     synchronized (sw.getBuffer()) {
         try {
             return quote(string, sw).toString();
         } catch (IOException ignored) {
             // will never happen - we are writing to a string writer
             return &quot;&quot;;
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYnB641TEeS-muvgwqy9Mw" name="quote" specification="_NXEJwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYnB7I1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYnB7Y1TEeS-muvgwqy9Mw" name="w" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYnB7o1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (string == null || string.length() == 0) {
         w.write(&quot;\&quot;\&quot;&quot;);
         return w;
     }

     char b;
     char c = 0;
     String hhhh;
     int i;
     int len = string.length();

     w.write('&quot;');
     for (i = 0; i &lt; len; i += 1) {
         b = c;
         c = string.charAt(i);
         switch (c) {
         case '\\':
         case '&quot;':
             w.write('\\');
             w.write(c);
             break;
         case '/':
             if (b == '&lt;') {
                 w.write('\\');
             }
             w.write(c);
             break;
         case '\b':
             w.write(&quot;\\b&quot;);
             break;
         case '\t':
             w.write(&quot;\\t&quot;);
             break;
         case '\n':
             w.write(&quot;\\n&quot;);
             break;
         case '\f':
             w.write(&quot;\\f&quot;);
             break;
         case '\r':
             w.write(&quot;\\r&quot;);
             break;
         default:
             if (c &lt; ' ' || (c >= '\u0080' &amp;&amp; c &lt; '\u00a0')
                     || (c >= '\u2000' &amp;&amp; c &lt; '\u2100')) {
                 w.write(&quot;\\u&quot;);
                 hhhh = Integer.toHexString(c);
                 w.write(&quot;0000&quot;, 0, 4 - hhhh.length());
                 w.write(hhhh);
             } else {
                 w.write(c);
             }
         }
     }
     w.write('&quot;');
     return w;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYno8I1TEeS-muvgwqy9Mw" name="remove" specification="_NQ7FgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYno8Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYno8o1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.map.remove(key);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYno841TEeS-muvgwqy9Mw" name="stringToValue" specification="_NQ7skI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYno9I1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYno9Y1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Double d;
     if (string.equals(&quot;&quot;)) {
         return string;
     }
     if (string.equalsIgnoreCase(&quot;true&quot;)) {
         return Boolean.TRUE;
     }
     if (string.equalsIgnoreCase(&quot;false&quot;)) {
         return Boolean.FALSE;
     }
     if (string.equalsIgnoreCase(&quot;null&quot;)) {
         return JSONObject.NULL;
     }

     /*
      * If it might be a number, try converting it. If a number cannot be
      * produced, then the value will just be a string.
      */

     char b = string.charAt(0);
     if ((b >= '0' &amp;&amp; b &lt;= '9') || b == '-') {
         try {
             if (string.indexOf('.') > -1 || string.indexOf('e') > -1
                     || string.indexOf('E') > -1) {
                 d = Double.valueOf(string);
                 if (!d.isInfinite() &amp;&amp; !d.isNaN()) {
                     return d;
                 }
             } else {
                 Long myLong = new Long(string);
                 if (string.equals(myLong.toString())) {
                     if (myLong.longValue() == myLong.intValue()) {
                         return new Integer(myLong.intValue());
                     } else {
                         return myLong;
                     }
                 }
             }
         } catch (Exception ignore) {
         }
     }
     return string;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYno9o1TEeS-muvgwqy9Mw" name="testValidity" specification="_NNbFkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYno941TEeS-muvgwqy9Mw" name="o" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (o != null) {
         if (o instanceof Double) {
             if (((Double) o).isInfinite() || ((Double) o).isNaN()) {
                 throw new JSONException(
                         &quot;JSON does not allow non-finite numbers.&quot;);
             }
         } else if (o instanceof Float) {
             if (((Float) o).isInfinite() || ((Float) o).isNaN()) {
                 throw new JSONException(
                         &quot;JSON does not allow non-finite numbers.&quot;);
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYno-I1TEeS-muvgwqy9Mw" name="toJSONArray" specification="_NNbFko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYno-Y1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYno-o1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (names == null || names.length() == 0) {
         return null;
     }
     JSONArray ja = new JSONArray();
     for (int i = 0; i &lt; names.length(); i += 1) {
         ja.put(this.opt(names.getString(i)));
     }
     return ja;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYoQAI1TEeS-muvgwqy9Mw" name="toString" specification="_NNbsoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYoQAY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.toString(0);
     } catch (Exception e) {
         return null;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYoQAo1TEeS-muvgwqy9Mw" name="toString" specification="_NQ8ToY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYoQA41TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYoQBI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringWriter w = new StringWriter();
     synchronized (w.getBuffer()) {
         return this.write(w, indentFactor, 0).toString();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYoQBY1TEeS-muvgwqy9Mw" name="valueToString" specification="_NNbsoY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYoQBo1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYoQB41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (value == null || value.equals(null)) {
         return &quot;null&quot;;
     }
     if (value instanceof JSONString) {
         Object object;
         try {
             object = ((JSONString) value).toJSONString();
         } catch (Exception e) {
             throw new JSONException(e);
         }
         if (object instanceof String) {
             return (String) object;
         }
         throw new JSONException(&quot;Bad value from toJSONString: &quot; + object);
     }
     if (value instanceof Number) {
         return numberToString((Number) value);
     }
     if (value instanceof Boolean || value instanceof JSONObject
             || value instanceof JSONArray) {
         return value.toString();
     }
     if (value instanceof Map) {
         return new JSONObject((Map) value).toString();
     }
     if (value instanceof Collection) {
         return new JSONArray((Collection) value).toString();
     }
     if (value.getClass().isArray()) {
         return new JSONArray(value).toString();
     }
     return quote(value.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYo3EI1TEeS-muvgwqy9Mw" name="wrap" specification="_NNcTsY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYo3EY1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYo3Eo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>try {
         if (object == null) {
             return NULL;
         }
         if (object instanceof JSONObject || object instanceof JSONArray
                 || NULL.equals(object) || object instanceof JSONString
                 || object instanceof Byte || object instanceof Character
                 || object instanceof Short || object instanceof Integer
                 || object instanceof Long || object instanceof Boolean
                 || object instanceof Float || object instanceof Double
                 || object instanceof String) {
             return object;
         }

         if (object instanceof Collection) {
             return new JSONArray((Collection) object);
         }
         if (object.getClass().isArray()) {
             return new JSONArray(object);
         }
         if (object instanceof Map) {
             return new JSONObject((Map) object);
         }
         Package objectPackage = object.getClass().getPackage();
         String objectPackageName = objectPackage != null ? objectPackage
                 .getName() : &quot;&quot;;
         if (objectPackageName.startsWith(&quot;java.&quot;)
                 || objectPackageName.startsWith(&quot;javax.&quot;)
                 || object.getClass().getClassLoader() == null) {
             return object.toString();
         }
         return new JSONObject(object);
     } catch (Exception exception) {
         return null;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYo3E41TEeS-muvgwqy9Mw" name="write" specification="_NXEw0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYo3FI1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYo3FY1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.write(writer, 0, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYo3Fo1TEeS-muvgwqy9Mw" name="writeValue" specification="_NXFX4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYo3F41TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYo3GI1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYo3GY1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYo3Go1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYo3G41TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (value == null || value.equals(null)) {
         writer.write(&quot;null&quot;);
     } else if (value instanceof JSONObject) {
         ((JSONObject) value).write(writer, indentFactor, indent);
     } else if (value instanceof JSONArray) {
         ((JSONArray) value).write(writer, indentFactor, indent);
     } else if (value instanceof Map) {
         new JSONObject((Map) value).write(writer, indentFactor, indent);
     } else if (value instanceof Collection) {
         new JSONArray((Collection) value).write(writer, indentFactor,
                 indent);
     } else if (value.getClass().isArray()) {
         new JSONArray(value).write(writer, indentFactor, indent);
     } else if (value instanceof Number) {
         writer.write(numberToString((Number) value));
     } else if (value instanceof Boolean) {
         writer.write(value.toString());
     } else if (value instanceof JSONString) {
         Object o;
         try {
             o = ((JSONString) value).toJSONString();
         } catch (Exception e) {
             throw new JSONException(e);
         }
         writer.write(o != null ? o.toString() : quote(value.toString()));
     } else {
         quote(value.toString(), writer);
     }
     return writer;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYpeII1TEeS-muvgwqy9Mw" name="indent" specification="_NXHNEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYpeIY1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYpeIo1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>for (int i = 0; i &lt; indent; i += 1) {
         writer.write(' ');
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYpeI41TEeS-muvgwqy9Mw" name="write" specification="_NXH0II1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYpeJI1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYpeJY1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYpeJo1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYpeJ41TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>try {
         boolean commanate = false;
         final int length = this.length();
         Iterator keys = this.keys();
         writer.write('{');

         if (length == 1) {
             Object key = keys.next();
             writer.write(quote(key.toString()));
             writer.write(':');
             if (indentFactor > 0) {
                 writer.write(' ');
             }
             writeValue(writer, this.map.get(key), indentFactor, indent);
         } else if (length != 0) {
             final int newindent = indent + indentFactor;
             while (keys.hasNext()) {
                 Object key = keys.next();
                 if (commanate) {
                     writer.write(',');
                 }
                 if (indentFactor > 0) {
                     writer.write('\n');
                 }
                 indent(writer, newindent);
                 writer.write(quote(key.toString()));
                 writer.write(':');
                 if (indentFactor > 0) {
                     writer.write(' ');
                 }
                 writeValue(writer, this.map.get(key), indentFactor,
                         newindent);
                 commanate = true;
             }
             if (indentFactor > 0) {
                 writer.write('\n');
             }
             indent(writer, indent);
         }
         writer.write('}');
         return writer;
     } catch (IOException exception) {
         throw new JSONException(exception);
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NNTw0I1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYefBY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NNTw0Y1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NNTw0o1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NNTw041TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNUX4o1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYfGEI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NNUX5Y1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NNU-8I1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NNUX441TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNUX5I1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNU-8Y1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYfGE41TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NNU-841TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NNU-9I1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NNU-8o1TEeS-muvgwqy9Mw" name="map" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNU-9Y1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNVmAY1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYfGFo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NNVmBI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NNVmBY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NNVmAo1TEeS-muvgwqy9Mw" name="bean" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNVmA41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNWNEI1TEeS-muvgwqy9Mw" name="getNames" isStatic="true" method="_NYhiUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNWNEY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNWNEo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NNWNE41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNW0I41TEeS-muvgwqy9Mw" name="getNames" isStatic="true" method="_NYhiVI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNW0JI1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNXbMI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NNXbMY1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNYCQI1TEeS-muvgwqy9Mw" name="keys" method="_NYiJaY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNYCQY1TEeS-muvgwqy9Mw" type="_Lrv3cY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNYCRI1TEeS-muvgwqy9Mw" name="keySet" method="_NYiwcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNYpUI1TEeS-muvgwqy9Mw" type="_Lqq5YI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNYpU41TEeS-muvgwqy9Mw" name="length" method="_NYiwco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQtDEY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNYpVI1TEeS-muvgwqy9Mw" name="names" method="_NYiwdI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNYpVY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNZ3cI1TEeS-muvgwqy9Mw" name="populateMap" visibility="private" method="_NYlMu41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNZ3cY1TEeS-muvgwqy9Mw" name="bean" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNbFkI1TEeS-muvgwqy9Mw" name="testValidity" isStatic="true" method="_NYno9o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNbFkY1TEeS-muvgwqy9Mw" name="o" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNbFko1TEeS-muvgwqy9Mw" name="toJSONArray" method="_NYno-I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNbFk41TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNbFlI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNbsoI1TEeS-muvgwqy9Mw" name="toString" method="_NYoQAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ8ToI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNbsoY1TEeS-muvgwqy9Mw" name="valueToString" isStatic="true" method="_NYoQBY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNbsoo1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ86sI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNcTsY1TEeS-muvgwqy9Mw" name="wrap" isStatic="true" method="_NYo3EI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NNcTso1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NNcTs41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQjSEo1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYefB41TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NQj5IY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQj5Io1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NQjSE41TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQjSFI1TEeS-muvgwqy9Mw" name="names">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQj5I41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQj5II1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQj5JI1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYfGGY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NQkgMo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQkgM41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NQkgMI1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQkgMY1TEeS-muvgwqy9Mw" name="names">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQkgNo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQkgNI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQlHRI1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYftII1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NQluUo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQluU41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NQluUI1TEeS-muvgwqy9Mw" name="source">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQluUY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQmVYI1TEeS-muvgwqy9Mw" name="accumulate" method="_NYftJ41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQmVYY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQmVYo1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQmVY41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQm8cI1TEeS-muvgwqy9Mw" name="append" method="_NYftK41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQm8cY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQm8co1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQm8c41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQm8dI1TEeS-muvgwqy9Mw" name="doubleToString" isStatic="true" method="_NYgUMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQm8dY1TEeS-muvgwqy9Mw" name="d">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQnjgI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQnjgY1TEeS-muvgwqy9Mw" name="get" method="_NYgUM41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQnjgo1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQnjg41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQoKkI1TEeS-muvgwqy9Mw" name="getBoolean" method="_NYgUNo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQoKkY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQoKko1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQoxoI1TEeS-muvgwqy9Mw" name="getDouble" method="_NYg7QI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQoxoY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQoxoo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQpYsI1TEeS-muvgwqy9Mw" name="getInt" method="_NYg7Q41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQpYsY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQpYso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQpYs41TEeS-muvgwqy9Mw" name="getJSONArray" method="_NYg7Ro1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQpYtI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQp_wI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQp_wY1TEeS-muvgwqy9Mw" name="getJSONObject" method="_NYg7SY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQp_wo1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQp_w41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQqm0I1TEeS-muvgwqy9Mw" name="getLong" method="_NYg7TI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQqm0Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQqm0o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQrN4I1TEeS-muvgwqy9Mw" name="getString" method="_NYhiWI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQrN4Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQrN4o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQr08I1TEeS-muvgwqy9Mw" name="has" method="_NYiJYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQr08Y1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQr08o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQscAI1TEeS-muvgwqy9Mw" name="increment" method="_NYiJY41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQscAY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQscAo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQscA41TEeS-muvgwqy9Mw" name="isNull" method="_NYiJZo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQscBI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQtDEI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQtDEo1TEeS-muvgwqy9Mw" name="opt" method="_NYjXgI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQtqII1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQtqIY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQtqIo1TEeS-muvgwqy9Mw" name="optBoolean" method="_NYjXg41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQtqI41TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQtqJI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQuRMI1TEeS-muvgwqy9Mw" name="optBoolean" method="_NYjXho1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQuRMY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQuRMo1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQuRM41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQu4QI1TEeS-muvgwqy9Mw" name="optDouble" method="_NYjXio1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQu4QY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQu4Qo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQu4Q41TEeS-muvgwqy9Mw" name="optDouble" method="_NYj-kI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQu4RI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQu4RY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQvfUI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQvfUY1TEeS-muvgwqy9Mw" name="optInt" method="_NYj-lI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQvfUo1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQvfU41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQwGYI1TEeS-muvgwqy9Mw" name="optInt" method="_NYj-l41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQwGYY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQwGYo1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQwGY41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQwGZI1TEeS-muvgwqy9Mw" name="optJSONArray" method="_NYkloI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQwGZY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQwtcI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQwtcY1TEeS-muvgwqy9Mw" name="optJSONObject" method="_NYklo41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQwtco1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQwtc41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQxUgI1TEeS-muvgwqy9Mw" name="optLong" method="_NYklpo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQxUgY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQxUgo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQx7kI1TEeS-muvgwqy9Mw" name="optLong" method="_NYlMsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQx7kY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQx7ko1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQyioI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQzJsI1TEeS-muvgwqy9Mw" name="optString" method="_NYlMtI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQzJsY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQzJso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQzwwI1TEeS-muvgwqy9Mw" name="optString" method="_NYlMt41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQzwwY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQzwwo1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ0X0I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ0X0Y1TEeS-muvgwqy9Mw" name="put" method="_NYlzwI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ0X0o1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ0X041TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ0-4I1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ0-4Y1TEeS-muvgwqy9Mw" name="put" method="_NYlzxI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ0-4o1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ0-441TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ0-5I1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ2NAI1TEeS-muvgwqy9Mw" name="put" method="_NYlzyI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ2NAY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ2NAo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ2NA41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ20EI1TEeS-muvgwqy9Mw" name="put" method="_NYma0I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ20EY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ20Eo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ20E41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ3bII1TEeS-muvgwqy9Mw" name="put" method="_NYma1I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ3bIY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ3bIo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ3bI41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ3bJI1TEeS-muvgwqy9Mw" name="put" method="_NYma2I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ3bJY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ4CMI1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ4CMY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ4pQ41TEeS-muvgwqy9Mw" name="put" method="_NYma3I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ4pRI1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ4pRY1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ5QUI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ53YI1TEeS-muvgwqy9Mw" name="putOnce" method="_NYnB4I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ53YY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ53Yo1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ53Y41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ53ZI1TEeS-muvgwqy9Mw" name="putOpt" method="_NYnB5I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ53ZY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ6ecI1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQ6ecY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ6eco1TEeS-muvgwqy9Mw" name="quote" isStatic="true" method="_NYnB6I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ6ec41TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ6edI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ7FgI1TEeS-muvgwqy9Mw" name="remove" method="_NYno8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ7FgY1TEeS-muvgwqy9Mw" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ7Fgo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ7skI1TEeS-muvgwqy9Mw" name="stringToValue" isStatic="true" method="_NYno841TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ7skY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ7sko1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQ8ToY1TEeS-muvgwqy9Mw" name="toString" method="_NYoQAo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQ8Too1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQ8To41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NXAfYI1TEeS-muvgwqy9Mw" name="JSONObject" method="_NYftI41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NXAfY41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NXAfZI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NXAfYY1TEeS-muvgwqy9Mw" name="baseName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXAfYo1TEeS-muvgwqy9Mw" name="locale" type="_NWErQY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXAfZY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXCUkY1TEeS-muvgwqy9Mw" name="numberToString" isStatic="true" method="_NYiwdo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXCUko1TEeS-muvgwqy9Mw" name="number" type="_NXBtgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXCUk41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NXEJwI1TEeS-muvgwqy9Mw" name="quote" isStatic="true" method="_NYnB641TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXEJwY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXEJwo1TEeS-muvgwqy9Mw" name="w" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXEJw41TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXEw0I1TEeS-muvgwqy9Mw" name="write" method="_NYo3E41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXEw0Y1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXEw0o1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXFX4I1TEeS-muvgwqy9Mw" name="writeValue" visibility="package" isLeaf="true" isStatic="true" method="_NYo3Fo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw _Lp1L4Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXFX4Y1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXFX4o1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXF-8I1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXF-8Y1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXF-8o1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXHNEI1TEeS-muvgwqy9Mw" name="indent" visibility="package" isLeaf="true" isStatic="true" method="_NYpeII1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXHNEY1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXHNEo1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NXH0II1TEeS-muvgwqy9Mw" name="write" visibility="package" method="_NYpeI41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NXH0IY1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXH0Io1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXH0I41TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NXH0JI1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_NQiD8I1TEeS-muvgwqy9Mw" name="Null" visibility="private" isLeaf="true">
            <eAnnotations xmi:id="_NQiD8Y1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQiD8o1TEeS-muvgwqy9Mw" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZP7Eo1TEeS-muvgwqy9Mw">
              <body>JSONObject.NULL is equivalent to the value that JavaScript calls null,
     * whilst Java's null is equivalent to the value that JavaScript calls
     * undefined.</body>
            </ownedComment>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYd38I1TEeS-muvgwqy9Mw" name="clone" specification="_NQiD841TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYd38Y1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return this;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYefAI1TEeS-muvgwqy9Mw" name="equals" specification="_NQirAY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYefAY1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NYefAo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return object == null || object == this;
     </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYefA41TEeS-muvgwqy9Mw" name="toString" specification="_NQjSEI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NYefBI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;null&quot;;
     </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NQiD841TEeS-muvgwqy9Mw" name="clone" visibility="protected" isLeaf="true" method="_NYd38I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQirAI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NQirAY1TEeS-muvgwqy9Mw" name="equals" method="_NYefAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQirAo1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NQirA41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NQjSEI1TEeS-muvgwqy9Mw" name="toString" method="_NYefA41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NQjSEY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqsHgI1TEeS-muvgwqy9Mw" name="JSONArray">
          <ownedComment xmi:id="_NZNe0I1TEeS-muvgwqy9Mw">
            <body>A JSONArray is an ordered sequence of values. Its external text form is a
string wrapped in square brackets with commas separating the values. The
internal form is an object having &lt;code>get&lt;/code> and &lt;code>opt&lt;/code>
methods for accessing the values by index, and &lt;code>put&lt;/code> methods for
adding or replacing values. The values can be any of these types:
&lt;code>Boolean&lt;/code>, &lt;code>JSONArray&lt;/code>, &lt;code>JSONObject&lt;/code>,
&lt;code>Number&lt;/code>, &lt;code>String&lt;/code>, or the
&lt;code>JSONObject.NULL object&lt;/code>.
&lt;p>
The constructor can convert a JSON text into a Java object. The
&lt;code>toString&lt;/code> method converts to JSON text.
&lt;p>
A &lt;code>get&lt;/code> method returns a value if one can be found, and throws an
exception if one cannot be found. An &lt;code>opt&lt;/code> method returns a
default value instead of throwing an exception, and so is useful for
obtaining optional values.
&lt;p>
The generic &lt;code>get()&lt;/code> and &lt;code>opt()&lt;/code> methods return an
object which you can cast or query for type. There are also typed
&lt;code>get&lt;/code> and &lt;code>opt&lt;/code> methods that do type checking and type
coercion for you.
&lt;p>
The texts produced by the &lt;code>toString&lt;/code> methods strictly conform to
JSON syntax rules. The constructors are more forgiving in the texts they will
accept:
&lt;ul>
&lt;li>An extra &lt;code>,&lt;/code>&amp;nbsp;&lt;small>(comma)&lt;/small> may appear just
before the closing bracket.&lt;/li>
&lt;li>The &lt;code>null&lt;/code> value will be inserted when there is &lt;code>,&lt;/code>
&amp;nbsp;&lt;small>(comma)&lt;/small> elision.&lt;/li>
&lt;li>Strings may be quoted with &lt;code>'&lt;/code>&amp;nbsp;&lt;small>(single
quote)&lt;/small>.&lt;/li>
&lt;li>Strings do not need to be quoted at all if they do not begin with a quote
or single quote, and if they do not contain leading or trailing spaces, and
if they do not contain any of these characters:
&lt;code>{ } [ ] / \ : , #&lt;/code> and if they do not look like numbers and
if they are not the reserved words &lt;code>true&lt;/code>, &lt;code>false&lt;/code>, or
&lt;code>null&lt;/code>.&lt;/li>
&lt;/ul>
 *
@author JSON.org
@version 2013-04-18</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXdLUI1TEeS-muvgwqy9Mw" name="myArrayList" visibility="private" isLeaf="true" type="_LqodII1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZr_8I1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOAUI1TEeS-muvgwqy9Mw" name="JSONArray" specification="_NMkxAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOAUY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.myArrayList = new ArrayList();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOAUo1TEeS-muvgwqy9Mw" name="JSONArray" specification="_NMlYEo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOAU41TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYOAVI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     if (x.nextClean() != '[') {
         throw x.syntaxError(&quot;A JSONArray text must start with '['&quot;);
     }
     if (x.nextClean() != ']') {
         x.back();
         for (;;) {
             if (x.nextClean() == ',') {
                 x.back();
                 this.myArrayList.add(JSONObject.NULL);
             } else {
                 x.back();
                 this.myArrayList.add(x.nextValue());
             }
             switch (x.nextClean()) {
             case ',':
                 if (x.nextClean() == ']') {
                     return;
                 }
                 x.back();
                 break;
             case ']':
                 return;
             default:
                 throw x.syntaxError(&quot;Expected a ',' or ']'&quot;);
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOAVY1TEeS-muvgwqy9Mw" name="JSONArray" specification="_NPwA0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOAVo1TEeS-muvgwqy9Mw" name="source">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYOAV41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(new JSONTokener(source));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOnYI1TEeS-muvgwqy9Mw" name="JSONArray" specification="_NMl_JY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOnYY1TEeS-muvgwqy9Mw" name="collection" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYOnYo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.myArrayList = new ArrayList();
     if (collection != null) {
         Iterator iter = collection.iterator();
         while (iter.hasNext()) {
             this.myArrayList.add(JSONObject.wrap(iter.next()));
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOnY41TEeS-muvgwqy9Mw" name="JSONArray" specification="_NMmmNY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOnZI1TEeS-muvgwqy9Mw" name="array" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYOnZY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this();
     if (array.getClass().isArray()) {
         int length = Array.getLength(array);
         for (int i = 0; i &lt; length; i += 1) {
             this.put(JSONObject.wrap(Array.get(array, i)));
         }
     } else {
         throw new JSONException(
                 &quot;JSONArray initial value should be a string or collection or array.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOnZo1TEeS-muvgwqy9Mw" name="get" specification="_NPwA1Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOnZ41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYOnaI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.opt(index);
     if (object == null) {
         throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] not found.&quot;);
     }
     return object;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYOnaY1TEeS-muvgwqy9Mw" name="getBoolean" specification="_NPwn4o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYOnao1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYOna41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(index);
     if (object.equals(Boolean.FALSE)
             || (object instanceof String &amp;&amp; ((String) object)
                     .equalsIgnoreCase(&quot;false&quot;))) {
         return false;
     } else if (object.equals(Boolean.TRUE)
             || (object instanceof String &amp;&amp; ((String) object)
                     .equalsIgnoreCase(&quot;true&quot;))) {
         return true;
     }
     throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a boolean.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYPOcI1TEeS-muvgwqy9Mw" name="getDouble" specification="_NPxO8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYPOcY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYPOco1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(index);
     try {
         return object instanceof Number ? ((Number) object).doubleValue()
                 : Double.parseDouble((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a number.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYPOc41TEeS-muvgwqy9Mw" name="getInt" specification="_NPxO841TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYPOdI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYPOdY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(index);
     try {
         return object instanceof Number ? ((Number) object).intValue()
                 : Integer.parseInt((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a number.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYPOdo1TEeS-muvgwqy9Mw" name="getJSONArray" specification="_NPx2Ao1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYPOd41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYPOeI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.get(index);
     if (object instanceof JSONArray) {
         return (JSONArray) object;
     }
     throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a JSONArray.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYPOeY1TEeS-muvgwqy9Mw" name="getJSONObject" specification="_NPydEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYPOeo1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYPOe41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object object = this.get(index);
     if (object instanceof JSONObject) {
         return (JSONObject) object;
     }
     throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a JSONObject.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYP1gI1TEeS-muvgwqy9Mw" name="getLong" specification="_NPydE41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYP1gY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYP1go1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(index);
     try {
         return object instanceof Number ? ((Number) object).longValue()
                 : Long.parseLong((String) object);
     } catch (Exception e) {
         throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] is not a number.&quot;);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYP1g41TEeS-muvgwqy9Mw" name="getString" specification="_NPzrMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYP1hI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYP1hY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.get(index);
     if (object instanceof String) {
         return (String) object;
     }
     throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] not a string.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYP1ho1TEeS-muvgwqy9Mw" name="isNull" specification="_NPzrM41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYP1h41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYP1iI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return JSONObject.NULL.equals(this.opt(index));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYP1iY1TEeS-muvgwqy9Mw" name="join" specification="_NP0SQY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYP1io1TEeS-muvgwqy9Mw" name="separator">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYP1i41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>int len = this.length();
     StringBuffer sb = new StringBuffer();

     for (int i = 0; i &lt; len; i += 1) {
         if (i > 0) {
             sb.append(separator);
         }
         sb.append(JSONObject.valueToString(this.myArrayList.get(i)));
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYQckI1TEeS-muvgwqy9Mw" name="length" specification="_NMnNQo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYQckY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.myArrayList.size();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYQcko1TEeS-muvgwqy9Mw" name="opt" specification="_NP05UY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYQck41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYQclI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return (index &lt; 0 || index >= this.length()) ? null : this.myArrayList
             .get(index);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYQclY1TEeS-muvgwqy9Mw" name="optBoolean" specification="_NP1gYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYQclo1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYQcl41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optBoolean(index, false);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRDoI1TEeS-muvgwqy9Mw" name="optBoolean" specification="_NP1gY41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRDoY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRDoo1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRDo41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getBoolean(index);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRDpI1TEeS-muvgwqy9Mw" name="optDouble" specification="_NP2Hco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRDpY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRDpo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optDouble(index, Double.NaN);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRDp41TEeS-muvgwqy9Mw" name="optDouble" specification="_NP2ugI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRDqI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRDqY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRDqo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getDouble(index);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRqsI1TEeS-muvgwqy9Mw" name="optInt" specification="_NP3VkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRqsY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRqso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optInt(index, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRqs41TEeS-muvgwqy9Mw" name="optInt" specification="_NP3Vk41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRqtI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRqtY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRqto1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getInt(index);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRqt41TEeS-muvgwqy9Mw" name="optJSONArray" specification="_NP38o41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRquI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRquY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object o = this.opt(index);
     return o instanceof JSONArray ? (JSONArray) o : null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYRquo1TEeS-muvgwqy9Mw" name="optJSONObject" specification="_NP4jsY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYRqu41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYRqvI1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object o = this.opt(index);
     return o instanceof JSONObject ? (JSONObject) o : null;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYSRwI1TEeS-muvgwqy9Mw" name="optLong" specification="_NP5KwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYSRwY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRwo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optLong(index, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYSRw41TEeS-muvgwqy9Mw" name="optLong" specification="_NP5x0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYSRxI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRxY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRxo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.getLong(index);
     } catch (Exception e) {
         return defaultValue;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYSRx41TEeS-muvgwqy9Mw" name="optString" specification="_NP6Y4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYSRyI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRyY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.optString(index, &quot;&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYSRyo1TEeS-muvgwqy9Mw" name="optString" specification="_NP6_8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYSRy41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRzI1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSRzY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>Object object = this.opt(index);
     return JSONObject.NULL.equals(object) ? defaultValue : object
             .toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYSRzo1TEeS-muvgwqy9Mw" name="put" specification="_NP7nAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYSRz41TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYSR0I1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(value ? Boolean.TRUE : Boolean.FALSE);
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYS40I1TEeS-muvgwqy9Mw" name="put" specification="_NMn0UI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYS40Y1TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYS40o1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(new JSONArray(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYS4041TEeS-muvgwqy9Mw" name="put" specification="_NP7nA41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYS41I1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYS41Y1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Double d = new Double(value);
     JSONObject.testValidity(d);
     this.put(d);
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYS41o1TEeS-muvgwqy9Mw" name="put" specification="_NP8OEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYS4141TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYS42I1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(new Integer(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYS42Y1TEeS-muvgwqy9Mw" name="put" specification="_NP8OE41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYS42o1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYS4241TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(new Long(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYTf4I1TEeS-muvgwqy9Mw" name="put" specification="_NMpCco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYTf4Y1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYTf4o1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(new JSONObject(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYTf441TEeS-muvgwqy9Mw" name="put" specification="_NMqQko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYTf5I1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYTf5Y1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.myArrayList.add(value);
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYTf5o1TEeS-muvgwqy9Mw" name="put" specification="_NP81Io1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYTf541TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYTf6I1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYTf6Y1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, value ? Boolean.TRUE : Boolean.FALSE);
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUG8I1TEeS-muvgwqy9Mw" name="put" specification="_NP9cMY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUG8Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUG8o1TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYUG841TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, new JSONArray(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUG9I1TEeS-muvgwqy9Mw" name="put" specification="_NP-qUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUG9Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUG9o1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUG941TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, new Double(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUuAI1TEeS-muvgwqy9Mw" name="put" specification="_NP_RYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUuAY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuAo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuA41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, new Integer(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUuBI1TEeS-muvgwqy9Mw" name="put" specification="_NP_4cI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUuBY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuBo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuB41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, new Long(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUuCI1TEeS-muvgwqy9Mw" name="put" specification="_NP_4dI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUuCY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuCo1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYUuC41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.put(index, new JSONObject(value));
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYUuDI1TEeS-muvgwqy9Mw" name="put" specification="_NQBGk41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYUuDY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYUuDo1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYVVEI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject.testValidity(value);
     if (index &lt; 0) {
         throw new JSONException(&quot;JSONArray[&quot; + index + &quot;] not found.&quot;);
     }
     if (index &lt; this.length()) {
         this.myArrayList.set(index, value);
     } else {
         while (index != this.length()) {
             this.put(JSONObject.NULL);
         }
         this.put(value);
     }
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYVVEY1TEeS-muvgwqy9Mw" name="remove" specification="_NQCUs41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYVVEo1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYVVE41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>Object o = this.opt(index);
     this.myArrayList.remove(index);
     return o;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYVVFI1TEeS-muvgwqy9Mw" name="toJSONObject" specification="_NMsFwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYVVFY1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYVVFo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (names == null || names.length() == 0 || this.length() == 0) {
         return null;
     }
     JSONObject jo = new JSONObject();
     for (int i = 0; i &lt; names.length(); i += 1) {
         jo.put(names.getString(i), this.opt(i));
     }
     return jo;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYVVF41TEeS-muvgwqy9Mw" name="toString" specification="_NMsFw41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYVVGI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>try {
         return this.toString(0);
     } catch (Exception e) {
         return null;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYV8II1TEeS-muvgwqy9Mw" name="toString" specification="_NQC7wY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYV8IY1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYV8Io1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringWriter sw = new StringWriter();
     synchronized (sw.getBuffer()) {
         return this.write(sw, indentFactor, 0).toString();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYV8I41TEeS-muvgwqy9Mw" name="write" specification="_NW5xsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYV8JI1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYV8JY1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.write(writer, 0, 0);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYV8Jo1TEeS-muvgwqy9Mw" name="write" specification="_NW6_0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYV8J41TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYV8KI1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYV8KY1TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYV8Ko1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>try {
         boolean commanate = false;
         int length = this.length();
         writer.write('[');

         if (length == 1) {
             JSONObject.writeValue(writer, this.myArrayList.get(0),
                     indentFactor, indent);
         } else if (length != 0) {
             final int newindent = indent + indentFactor;

             for (int i = 0; i &lt; length; i += 1) {
                 if (commanate) {
                     writer.write(',');
                 }
                 if (indentFactor > 0) {
                     writer.write('\n');
                 }
                 JSONObject.indent(writer, newindent);
                 JSONObject.writeValue(writer, this.myArrayList.get(i),
                         indentFactor, newindent);
                 commanate = true;
             }
             if (indentFactor > 0) {
                 writer.write('\n');
             }
             JSONObject.indent(writer, indent);
         }
         writer.write(']');
         return writer;
     } catch (IOException e) {
         throw new JSONException(e);
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NMkxAI1TEeS-muvgwqy9Mw" name="JSONArray" method="_NYOAUI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NMkxAY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NMkxAo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NMkxA41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMlYEo1TEeS-muvgwqy9Mw" name="JSONArray" method="_NYOAUo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NMl_II1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NMl_IY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NMlYE41TEeS-muvgwqy9Mw" name="x" type="_LwLEcI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMl_Io1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMl_JY1TEeS-muvgwqy9Mw" name="JSONArray" method="_NYOnYI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NMmmMI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NMmmMY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NMl_Jo1TEeS-muvgwqy9Mw" name="collection" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMmmMo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMmmNY1TEeS-muvgwqy9Mw" name="JSONArray" method="_NYOnY41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NMnNQI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NMnNQY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NMmmNo1TEeS-muvgwqy9Mw" name="array" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMmmN41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMnNQo1TEeS-muvgwqy9Mw" name="length" method="_NYQckI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP05UI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NMn0UI1TEeS-muvgwqy9Mw" name="put" method="_NYS40I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NMn0UY1TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMobYI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMpCco1TEeS-muvgwqy9Mw" name="put" method="_NYTf4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NMppgI1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMppgY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMqQko1TEeS-muvgwqy9Mw" name="put" method="_NYTf441TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NMqQk41TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMq3oI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMsFwI1TEeS-muvgwqy9Mw" name="toJSONObject" method="_NYVVFI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NMsFwY1TEeS-muvgwqy9Mw" name="names" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NMsFwo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NMsFw41TEeS-muvgwqy9Mw" name="toString" method="_NYVVF41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQC7wI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPwA0I1TEeS-muvgwqy9Mw" name="JSONArray" method="_NYOAVY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NPwA041TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NPwA1I1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NPwA0Y1TEeS-muvgwqy9Mw" name="source">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPwA0o1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NPwA1Y1TEeS-muvgwqy9Mw" name="get" method="_NYOnZo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPwn4I1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPwn4Y1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NPwn4o1TEeS-muvgwqy9Mw" name="getBoolean" method="_NYOnaY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPwn441TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPwn5I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPxO8I1TEeS-muvgwqy9Mw" name="getDouble" method="_NYPOcI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPxO8Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPxO8o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPxO841TEeS-muvgwqy9Mw" name="getInt" method="_NYPOc41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPx2AI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPx2AY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPx2Ao1TEeS-muvgwqy9Mw" name="getJSONArray" method="_NYPOdo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPx2A41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPx2BI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NPydEI1TEeS-muvgwqy9Mw" name="getJSONObject" method="_NYPOeY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPydEY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPydEo1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NPydE41TEeS-muvgwqy9Mw" name="getLong" method="_NYP1gI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPzEII1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPzEIY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPzrMI1TEeS-muvgwqy9Mw" name="getString" method="_NYP1g41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPzrMY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NPzrMo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NPzrM41TEeS-muvgwqy9Mw" name="isNull" method="_NYP1ho1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NPzrNI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP0SQI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP0SQY1TEeS-muvgwqy9Mw" name="join" method="_NYP1iY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP0SQo1TEeS-muvgwqy9Mw" name="separator">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP0SQ41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP05UY1TEeS-muvgwqy9Mw" name="opt" method="_NYQcko1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP05Uo1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP05U41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP1gYI1TEeS-muvgwqy9Mw" name="optBoolean" method="_NYQclY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP1gYY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP1gYo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP1gY41TEeS-muvgwqy9Mw" name="optBoolean" method="_NYRDoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP1gZI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP2HcI1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP2HcY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP2Hco1TEeS-muvgwqy9Mw" name="optDouble" method="_NYRDpI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP2Hc41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP2HdI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP2ugI1TEeS-muvgwqy9Mw" name="optDouble" method="_NYRDp41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP2ugY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP2ugo1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP2ug41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP3VkI1TEeS-muvgwqy9Mw" name="optInt" method="_NYRqsI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP3VkY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP3Vko1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP3Vk41TEeS-muvgwqy9Mw" name="optInt" method="_NYRqs41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP38oI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP38oY1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP38oo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP38o41TEeS-muvgwqy9Mw" name="optJSONArray" method="_NYRqt41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP38pI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP4jsI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP4jsY1TEeS-muvgwqy9Mw" name="optJSONObject" method="_NYRquo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP4jso1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP4js41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP5KwI1TEeS-muvgwqy9Mw" name="optLong" method="_NYSRwI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP5KwY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP5Kwo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP5x0I1TEeS-muvgwqy9Mw" name="optLong" method="_NYSRw41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP5x0Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP5x0o1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP5x041TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP6Y4I1TEeS-muvgwqy9Mw" name="optString" method="_NYSRx41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP6Y4Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP6Y4o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP6_8I1TEeS-muvgwqy9Mw" name="optString" method="_NYSRyo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP6_8Y1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP6_8o1TEeS-muvgwqy9Mw" name="defaultValue">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP6_841TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NP7nAI1TEeS-muvgwqy9Mw" name="put" method="_NYSRzo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP7nAY1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP7nAo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP7nA41TEeS-muvgwqy9Mw" name="put" method="_NYS4041TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP7nBI1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP7nBY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP8OEI1TEeS-muvgwqy9Mw" name="put" method="_NYS41o1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP8OEY1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP8OEo1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP8OE41TEeS-muvgwqy9Mw" name="put" method="_NYS42Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP81II1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP81IY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP81Io1TEeS-muvgwqy9Mw" name="put" method="_NYTf5o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP81I41TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP81JI1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP9cMI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP9cMY1TEeS-muvgwqy9Mw" name="put" method="_NYUG8I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP9cMo1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP9cM41TEeS-muvgwqy9Mw" name="value" type="_LrvQYI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NP9cNI1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP-qUI1TEeS-muvgwqy9Mw" name="put" method="_NYUG9I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP-qUY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP-qUo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP-qU41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP_RYI1TEeS-muvgwqy9Mw" name="put" method="_NYUuAI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP_RYY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP_RYo1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP_RY41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP_4cI1TEeS-muvgwqy9Mw" name="put" method="_NYUuBI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP_4cY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP_4co1TEeS-muvgwqy9Mw" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NP_4c41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NP_4dI1TEeS-muvgwqy9Mw" name="put" method="_NYUuCI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NP_4dY1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQAfgI1TEeS-muvgwqy9Mw" name="value" type="_LqqSUY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQAfgY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQBGk41TEeS-muvgwqy9Mw" name="put" method="_NYUuDI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQBGlI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQBtoI1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NQBtoY1TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQCUs41TEeS-muvgwqy9Mw" name="remove" method="_NYVVEY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQCUtI1TEeS-muvgwqy9Mw" name="index">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQCUtY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NQC7wY1TEeS-muvgwqy9Mw" name="toString" method="_NYV8II1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NQC7wo1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQDi0I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NW5xsI1TEeS-muvgwqy9Mw" name="write" method="_NYV8I41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NW5xsY1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NW5xso1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NW6_0I1TEeS-muvgwqy9Mw" name="write" visibility="package" method="_NYV8Jo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NW6_0Y1TEeS-muvgwqy9Mw" name="writer" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NW6_0o1TEeS-muvgwqy9Mw" name="indentFactor">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NW6_041TEeS-muvgwqy9Mw" name="indent">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NW6_1I1TEeS-muvgwqy9Mw" type="_NV99kY1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LqsHgo1TEeS-muvgwqy9Mw" name="JSONException">
          <ownedComment xmi:id="_NZPUAo1TEeS-muvgwqy9Mw">
            <body>The JSONException is thrown by the JSON.org classes when things are amiss.
 *
@author JSON.org
@version 2013-02-10</body>
          </ownedComment>
          <generalization xmi:id="_NW-qMo1TEeS-muvgwqy9Mw" general="_NW8N8I1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_NXfAgI1TEeS-muvgwqy9Mw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXfnkI1TEeS-muvgwqy9Mw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXfnkY1TEeS-muvgwqy9Mw" name="cause" type="_NW9cEI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZsnAY1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYWjMI1TEeS-muvgwqy9Mw" name="JSONException" specification="_NQFYAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYWjMY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYWjMo1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(message);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYXKQI1TEeS-muvgwqy9Mw" name="JSONException" specification="_NW-DII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYXKQY1TEeS-muvgwqy9Mw" name="cause" type="_NW9cEI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYXKQo1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(cause.getMessage());
     this.cause = cause;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NQFYAI1TEeS-muvgwqy9Mw" name="JSONException" method="_NYWjMI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NQF_EI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NQF_EY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NQFYAY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NQFYAo1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NW-DII1TEeS-muvgwqy9Mw" name="JSONException" method="_NYXKQI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NW-qMI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NW-qMY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NW-DIY1TEeS-muvgwqy9Mw" name="cause" type="_NW9cEI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NW-DIo1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LwLEcI1TEeS-muvgwqy9Mw" name="JSONTokener">
          <ownedComment xmi:id="_NZSXVI1TEeS-muvgwqy9Mw">
            <body>A JSONTokener takes a source string and extracts characters and tokens from
it. It is used by the JSONObject and JSONArray constructors to parse
JSON source strings.
@author JSON.org
@version 2012-02-16</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXnjYI1TEeS-muvgwqy9Mw" name="character" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXoKcY1TEeS-muvgwqy9Mw" name="eof" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXoxgY1TEeS-muvgwqy9Mw" name="index" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXoxg41TEeS-muvgwqy9Mw" name="line" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXpYkI1TEeS-muvgwqy9Mw" name="previous" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXpYko1TEeS-muvgwqy9Mw" name="reader" visibility="private" type="_NWMAAY1TEeS-muvgwqy9Mw" association="_NZucMY1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_NXp_oY1TEeS-muvgwqy9Mw" name="usePrevious" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYrTUI1TEeS-muvgwqy9Mw" name="JSONTokener" specification="_NXK3cI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYrTUY1TEeS-muvgwqy9Mw" name="reader" type="_NWMAAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYrTUo1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.reader = reader.markSupported()
         ? reader
         : new BufferedReader(reader);
     this.eof = false;
     this.usePrevious = false;
     this.previous = 0;
     this.index = 0;
     this.character = 1;
     this.line = 1;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYrTU41TEeS-muvgwqy9Mw" name="JSONTokener" specification="_NXLegI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYrTVI1TEeS-muvgwqy9Mw" name="inputStream" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYrTVY1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(new InputStreamReader(inputStream));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYrTVo1TEeS-muvgwqy9Mw" name="JSONTokener" specification="_NRDoYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYrTV41TEeS-muvgwqy9Mw" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYrTWI1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(new StringReader(s));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYrTWY1TEeS-muvgwqy9Mw" name="back" specification="_NNpvEI1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>if (this.usePrevious || this.index &lt;= 0) {
         throw new JSONException(&quot;Stepping back two steps is not supported&quot;);
     }
     this.index -= 1;
     this.character -= 1;
     this.usePrevious = true;
     this.eof = false;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYrTWo1TEeS-muvgwqy9Mw" name="dehexchar" specification="_NREPc41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYrTW41TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYrTXI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (c >= '0' &amp;&amp; c &lt;= '9') {
         return c - '0';
     }
     if (c >= 'A' &amp;&amp; c &lt;= 'F') {
         return c - ('A' - 10);
     }
     if (c >= 'a' &amp;&amp; c &lt;= 'f') {
         return c - ('a' - 10);
     }
     return -1;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYr6YI1TEeS-muvgwqy9Mw" name="end" specification="_NNqWII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYr6YY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.eof &amp;&amp; !this.usePrevious;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYr6Yo1TEeS-muvgwqy9Mw" name="more" specification="_NNqWIY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYr6Y41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.next();
     if (this.end()) {
         return false;
     }
     this.back();
     return true;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYr6ZI1TEeS-muvgwqy9Mw" name="next" specification="_NNqWIo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYr6ZY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>int c;
     if (this.usePrevious) {
         this.usePrevious = false;
         c = this.previous;
     } else {
         try {
             c = this.reader.read();
         } catch (IOException exception) {
             throw new JSONException(exception);
         }

         if (c &lt;= 0) { // End of stream
             this.eof = true;
             c = 0;
         }
     }
     this.index += 1;
     if (this.previous == '\r') {
         this.line += 1;
         this.character = c == '\n' ? 0 : 1;
     } else if (c == '\n') {
         this.line += 1;
         this.character = 0;
     } else {
         this.character += 1;
     }
     this.previous = (char) c;
     return this.previous;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYr6Zo1TEeS-muvgwqy9Mw" name="next" specification="_NRFdkY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYr6Z41TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYr6aI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>char n = this.next();
     if (n != c) {
         throw this.syntaxError(&quot;Expected '&quot; + c + &quot;' and instead saw '&quot; +
                 n + &quot;'&quot;);
     }
     return n;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYr6aY1TEeS-muvgwqy9Mw" name="next" specification="_NRGEoY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYr6ao1TEeS-muvgwqy9Mw" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYr6a41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (n == 0) {
          return &quot;&quot;;
      }

      char[] chars = new char[n];
      int pos = 0;

      while (pos &lt; n) {
          chars[pos] = this.next();
          if (this.end()) {
              throw this.syntaxError(&quot;Substring bounds error&quot;);
          }
          pos += 1;
      }
      return new String(chars);
  </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYshcI1TEeS-muvgwqy9Mw" name="nextClean" specification="_NNqWI41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYshcY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>for (;;) {
         char c = this.next();
         if (c == 0 || c > ' ') {
             return c;
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYshco1TEeS-muvgwqy9Mw" name="nextString" specification="_NRGrs41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYshc41TEeS-muvgwqy9Mw" name="quote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYshdI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char c;
     StringBuffer sb = new StringBuffer();
     for (;;) {
         c = this.next();
         switch (c) {
         case 0:
         case '\n':
         case '\r':
             throw this.syntaxError(&quot;Unterminated string&quot;);
         case '\\':
             c = this.next();
             switch (c) {
             case 'b':
                 sb.append('\b');
                 break;
             case 't':
                 sb.append('\t');
                 break;
             case 'n':
                 sb.append('\n');
                 break;
             case 'f':
                 sb.append('\f');
                 break;
             case 'r':
                 sb.append('\r');
                 break;
             case 'u':
                 sb.append((char)Integer.parseInt(this.next(4), 16));
                 break;
             case '&quot;':
             case '\'':
             case '\\':
             case '/':
                 sb.append(c);
                 break;
             default:
                 throw this.syntaxError(&quot;Illegal escape.&quot;);
             }
             break;
         default:
             if (c == quote) {
                 return sb.toString();
             }
             sb.append(c);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYshdY1TEeS-muvgwqy9Mw" name="nextTo" specification="_NRHSwo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYshdo1TEeS-muvgwqy9Mw" name="delimiter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYshd41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     for (;;) {
         char c = this.next();
         if (c == delimiter || c == 0 || c == '\n' || c == '\r') {
             if (c != 0) {
                 this.back();
             }
             return sb.toString().trim();
         }
         sb.append(c);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYtIgI1TEeS-muvgwqy9Mw" name="nextTo" specification="_NRH50I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYtIgY1TEeS-muvgwqy9Mw" name="delimiters">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYtIgo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char c;
     StringBuffer sb = new StringBuffer();
     for (;;) {
         c = this.next();
         if (delimiters.indexOf(c) >= 0 || c == 0 ||
                 c == '\n' || c == '\r') {
             if (c != 0) {
                 this.back();
             }
             return sb.toString().trim();
         }
         sb.append(c);
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYtIg41TEeS-muvgwqy9Mw" name="nextValue" specification="_NNq9MI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYtIhI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>char c = this.nextClean();
     String string;

     switch (c) {
         case '&quot;':
         case '\'':
             return this.nextString(c);
         case '{':
             this.back();
             return new JSONObject(this);
         case '[':
             this.back();
             return new JSONArray(this);
     }

     /*
      * Handle unquoted text. This could be the values true, false, or
      * null, or it can be a number. An implementation (such as this one)
      * is allowed to also accept non-standard forms.
      *
      * Accumulate characters until we reach the end of the text or a
      * formatting character.
      */

     StringBuffer sb = new StringBuffer();
     while (c >= ' ' &amp;&amp; &quot;,:]}/\\\&quot;[{;=#&quot;.indexOf(c) &lt; 0) {
         sb.append(c);
         c = this.next();
     }
     this.back();

     string = sb.toString().trim();
     if (&quot;&quot;.equals(string)) {
         throw this.syntaxError(&quot;Missing value&quot;);
     }
     return JSONObject.stringToValue(string);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYtIhY1TEeS-muvgwqy9Mw" name="skipTo" specification="_NRIg4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYtIho1TEeS-muvgwqy9Mw" name="to">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYtIh41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>char c;
     try {
         long startIndex = this.index;
         long startCharacter = this.character;
         long startLine = this.line;
         this.reader.mark(1000000);
         do {
             c = this.next();
             if (c == 0) {
                 this.reader.reset();
                 this.index = startIndex;
                 this.character = startCharacter;
                 this.line = startLine;
                 return c;
             }
         } while (c != to);
     } catch (IOException exc) {
         throw new JSONException(exc);
     }

     this.back();
     return c;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYtIiI1TEeS-muvgwqy9Mw" name="syntaxError" specification="_NRIg441TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYtIiY1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYtIio1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return new JSONException(message + this.toString());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYtvkI1TEeS-muvgwqy9Mw" name="toString" specification="_NNq9Mo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYtvkY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot; at &quot; + this.index + &quot; [character &quot; + this.character + &quot; line &quot; +
         this.line + &quot;]&quot;;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NNpvEI1TEeS-muvgwqy9Mw" name="back" method="_NYrTWY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZSXWI1TEeS-muvgwqy9Mw">
              <body>Back up one character. This provides a sort of lookahead capability,
     * so that you can test for a digit or letter before attempting to parse
     * the next number or identifier.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_NNqWII1TEeS-muvgwqy9Mw" name="end" method="_NYr6YI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRE2gI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNqWIY1TEeS-muvgwqy9Mw" name="more" method="_NYr6Yo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-YI1TEeS-muvgwqy9Mw">
              <body>Determine if the source string still contains characters that next()
     * can consume.
     * @return true if not yet at the end of the source.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRE2gY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNqWIo1TEeS-muvgwqy9Mw" name="next" method="_NYr6ZI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-YY1TEeS-muvgwqy9Mw">
              <body>Get the next character in the source string.
     *
     * @return The next character, or 0 if past the end of the source string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRFdkI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNqWI41TEeS-muvgwqy9Mw" name="nextClean" method="_NYshcI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-ZI1TEeS-muvgwqy9Mw">
              <body>Get the next char in the string, skipping whitespace.
     * @throws JSONException
     * @return  A character, or 0 if there are no more characters.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRGrso1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NNq9MI1TEeS-muvgwqy9Mw" name="nextValue" method="_NYtIg41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-aI1TEeS-muvgwqy9Mw">
              <body>Get the next value. The value can be a Boolean, Double, Integer,
     * JSONArray, JSONObject, Long, or String, or the JSONObject.NULL object.
     * @throws JSONException If syntax error.
     *
     * @return An object.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NNq9MY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NNq9Mo1TEeS-muvgwqy9Mw" name="toString" method="_NYtvkI1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTlcY1TEeS-muvgwqy9Mw">
              <body>Make a printable string of this JSONTokener.
     *
     * @return &quot; at {index} [character {character} line {line}]&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRJH8Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRDoYI1TEeS-muvgwqy9Mw" name="JSONTokener" method="_NYrTVo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NREPcY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NREPco1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZSXV41TEeS-muvgwqy9Mw">
              <body>Construct a JSONTokener from a string.
     *
     * @param s     A source string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRDoYY1TEeS-muvgwqy9Mw" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NREPcI1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NREPc41TEeS-muvgwqy9Mw" name="dehexchar" isStatic="true" method="_NYrTWo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZSXWY1TEeS-muvgwqy9Mw">
              <body>Get the hex value of a character (base16).
     * @param c A character between '0' and '9' or between 'A' and 'F' or
     * between 'a' and 'f'.
     * @return  An int between 0 and 15, or -1 if c was not a hex digit.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NREPdI1TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NREPdY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRFdkY1TEeS-muvgwqy9Mw" name="next" method="_NYr6Zo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-Yo1TEeS-muvgwqy9Mw">
              <body>Consume the next character, and check that it matches a specified
     * character.
     * @param c The character to match.
     * @return The character.
     * @throws JSONException if the character does not match.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRFdko1TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRGEoI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRGEoY1TEeS-muvgwqy9Mw" name="next" method="_NYr6aY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-Y41TEeS-muvgwqy9Mw">
              <body>Get the next n characters.
     *
     * @param n     The number of characters to take.
     * @return      A string of n characters.
     * @throws JSONException
     *   Substring bounds error if there are not
     *   n characters remaining in the source string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRGrsI1TEeS-muvgwqy9Mw" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRGrsY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRGrs41TEeS-muvgwqy9Mw" name="nextString" method="_NYshco1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-ZY1TEeS-muvgwqy9Mw">
              <body>Return the characters up to the next close quote character.
     * Backslash processing is done. The formal JSON format does not
     * allow strings in single quotes, but an implementation is allowed to
     * accept them.
     * @param quote The quoting character, either
     *      &lt;code>&quot;&lt;/code>&amp;nbsp;&lt;small>(double quote)&lt;/small> or
     *      &lt;code>'&lt;/code>&amp;nbsp;&lt;small>(single quote)&lt;/small>.
     * @return      A String.
     * @throws JSONException Unterminated string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRHSwI1TEeS-muvgwqy9Mw" name="quote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRHSwY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRHSwo1TEeS-muvgwqy9Mw" name="nextTo" method="_NYshdY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-Zo1TEeS-muvgwqy9Mw">
              <body>Get the text up but not including the specified character or the
     * end of line, whichever comes first.
     * @param  delimiter A delimiter character.
     * @return   A string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRHSw41TEeS-muvgwqy9Mw" name="delimiter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRHSxI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRH50I1TEeS-muvgwqy9Mw" name="nextTo" method="_NYtIgI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-Z41TEeS-muvgwqy9Mw">
              <body>Get the text up but not including one of the specified delimiter
     * characters or the end of line, whichever comes first.
     * @param delimiters A set of delimiter characters.
     * @return A string, trimmed.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRH50Y1TEeS-muvgwqy9Mw" name="delimiters">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRH50o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRIg4I1TEeS-muvgwqy9Mw" name="skipTo" method="_NYtIhY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZS-aY1TEeS-muvgwqy9Mw">
              <body>Skip characters until the next character is the requested character.
     * If the requested character is not found, no characters are skipped.
     * @param to A character to skip to.
     * @return The requested character, or zero if the requested character
     * is not found.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRIg4Y1TEeS-muvgwqy9Mw" name="to">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRIg4o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRIg441TEeS-muvgwqy9Mw" name="syntaxError" method="_NYtIiI1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTlcI1TEeS-muvgwqy9Mw">
              <body>Make a JSONException to signal a syntax error.
     *
     * @param message The error message.
     * @return  A JSONException object, suitable for throwing</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRIg5I1TEeS-muvgwqy9Mw" name="message">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRJH8I1TEeS-muvgwqy9Mw" type="_LqsHgo1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXK3cI1TEeS-muvgwqy9Mw" name="JSONTokener" method="_NYrTUI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NXK3c41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NXK3dI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZSXVY1TEeS-muvgwqy9Mw">
              <body>Construct a JSONTokener from a Reader.
     *
     * @param reader     A reader.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NXK3cY1TEeS-muvgwqy9Mw" name="reader" type="_NWMAAY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXK3co1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXLegI1TEeS-muvgwqy9Mw" name="JSONTokener" method="_NYrTU41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NXLeg41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NXLehI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZSXVo1TEeS-muvgwqy9Mw">
              <body>Construct a JSONTokener from an InputStream.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NXLegY1TEeS-muvgwqy9Mw" name="inputStream" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXLego1TEeS-muvgwqy9Mw" type="_LwLEcI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LwhCsI1TEeS-muvgwqy9Mw" name="XMLTokener">
          <generalization xmi:id="_NN8C9Y1TEeS-muvgwqy9Mw" general="_LwLEcI1TEeS-muvgwqy9Mw"/>
          <ownedAttribute xmi:id="_NXxUYI1TEeS-muvgwqy9Mw" name="entity" isLeaf="true" isStatic="true" type="_LqpEMY1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZvqUY1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYz2MI1TEeS-muvgwqy9Mw" name="_initializer1" specification="_NN7b4I1TEeS-muvgwqy9Mw">
            <language>java</language>
            <body>entity = new java.util.HashMap(8);
    entity.put(&quot;amp&quot;,  XML.AMP);
    entity.put(&quot;apos&quot;, XML.APOS);
    entity.put(&quot;gt&quot;,   XML.GT);
    entity.put(&quot;lt&quot;,   XML.LT);
    entity.put(&quot;quot&quot;, XML.QUOT);
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYz2MY1TEeS-muvgwqy9Mw" name="XMLTokener" specification="_NRwzAI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYz2Mo1TEeS-muvgwqy9Mw" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYz2M41TEeS-muvgwqy9Mw" type="_LwhCsI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(s);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYz2NI1TEeS-muvgwqy9Mw" name="nextCDATA" specification="_NN7b441TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYz2NY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>char         c;
     int          i;
     StringBuffer sb = new StringBuffer();
     for (;;) {
         c = next();
         if (end()) {
             throw syntaxError(&quot;Unclosed CDATA&quot;);
         }
         sb.append(c);
         i = sb.length() - 3;
         if (i >= 0 &amp;&amp; sb.charAt(i) == ']' &amp;&amp;
                       sb.charAt(i + 1) == ']' &amp;&amp; sb.charAt(i + 2) == '>') {
             sb.setLength(i);
             return sb.toString();
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYz2No1TEeS-muvgwqy9Mw" name="nextContent" specification="_NN7b5I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYz2N41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>char         c;
     StringBuffer sb;
     do {
         c = next();
     } while (Character.isWhitespace(c));
     if (c == 0) {
         return null;
     }
     if (c == '&lt;') {
         return XML.LT;
     }
     sb = new StringBuffer();
     for (;;) {
         if (c == '&lt;' || c == 0) {
             back();
             return sb.toString().trim();
         }
         if (c == '&amp;') {
             sb.append(nextEntity(c));
         } else {
             sb.append(c);
         }
         c = next();
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY0dQI1TEeS-muvgwqy9Mw" name="nextEntity" specification="_NRyBII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NY0dQY1TEeS-muvgwqy9Mw" name="ampersand">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NY0dQo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     for (;;) {
         char c = next();
         if (Character.isLetterOrDigit(c) || c == '#') {
             sb.append(Character.toLowerCase(c));
         } else if (c == ';') {
             break;
         } else {
             throw syntaxError(&quot;Missing ';' in XML entity: &amp;&quot; + sb);
         }
     }
     String string = sb.toString();
     Object object = entity.get(string);
     return object != null ? object : ampersand + string + &quot;;&quot;;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY0dQ41TEeS-muvgwqy9Mw" name="nextMeta" specification="_NN8C8Y1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NY0dRI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>char c;
     char q;
     do {
         c = next();
     } while (Character.isWhitespace(c));
     switch (c) {
     case 0:
         throw syntaxError(&quot;Misshaped meta tag&quot;);
     case '&lt;':
         return XML.LT;
     case '>':
         return XML.GT;
     case '/':
         return XML.SLASH;
     case '=':
         return XML.EQ;
     case '!':
         return XML.BANG;
     case '?':
         return XML.QUEST;
     case '&quot;':
     case '\'':
         q = c;
         for (;;) {
             c = next();
             if (c == 0) {
                 throw syntaxError(&quot;Unterminated string&quot;);
             }
             if (c == q) {
                 return Boolean.TRUE;
             }
         }
     default:
         for (;;) {
             c = next();
             if (Character.isWhitespace(c)) {
                 return Boolean.TRUE;
             }
             switch (c) {
             case 0:
             case '&lt;':
             case '>':
             case '/':
             case '=':
             case '!':
             case '?':
             case '&quot;':
             case '\'':
                 back();
                 return Boolean.TRUE;
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY0dRY1TEeS-muvgwqy9Mw" name="nextToken" specification="_NN8C841TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NY0dRo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>char c;
     char q;
     StringBuffer sb;
     do {
         c = next();
     } while (Character.isWhitespace(c));
     switch (c) {
     case 0:
         throw syntaxError(&quot;Misshaped element&quot;);
     case '&lt;':
         throw syntaxError(&quot;Misplaced '&lt;'&quot;);
     case '>':
         return XML.GT;
     case '/':
         return XML.SLASH;
     case '=':
         return XML.EQ;
     case '!':
         return XML.BANG;
     case '?':
         return XML.QUEST;

// Quoted string

     case '&quot;':
     case '\'':
         q = c;
         sb = new StringBuffer();
         for (;;) {
             c = next();
             if (c == 0) {
                 throw syntaxError(&quot;Unterminated string&quot;);
             }
             if (c == q) {
                 return sb.toString();
             }
             if (c == '&amp;') {
                 sb.append(nextEntity(c));
             } else {
                 sb.append(c);
             }
         }
     default:

// Name

         sb = new StringBuffer();
         for (;;) {
             sb.append(c);
             c = next();
             if (Character.isWhitespace(c)) {
                 return sb.toString();
             }
             switch (c) {
             case 0:
                 return sb.toString();
             case '>':
             case '/':
             case '=':
             case '!':
             case '?':
             case '[':
             case ']':
                 back();
                 return sb.toString();
             case '&lt;':
             case '&quot;':
             case '\'':
                 throw syntaxError(&quot;Bad character in a name&quot;);
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY0dR41TEeS-muvgwqy9Mw" name="skipPast" specification="_NRyBJI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NY0dSI1TEeS-muvgwqy9Mw" name="to">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NY0dSY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>boolean b;
     char c;
     int i;
     int j;
     int offset = 0;
     int length = to.length();
     char[] circle = new char[length];

     /*
      * First fill the circle buffer with as many characters as are in the
      * to string. If we reach an early end, bail.
      */

     for (i = 0; i &lt; length; i += 1) {
         c = next();
         if (c == 0) {
             return false;
         }
         circle[i] = c;
     }

     /* We will loop, possibly for all of the remaining characters. */

     for (;;) {
         j = offset;
         b = true;

         /* Compare the circle buffer with the to string. */

         for (i = 0; i &lt; length; i += 1) {
             if (circle[j] != to.charAt(i)) {
                 b = false;
                 break;
             }
             j += 1;
             if (j >= length) {
                 j -= length;
             }
         }

         /* If we exit the loop with b intact, then victory is ours. */

         if (b) {
             return true;
         }

         /* Get the next character. If there isn't one, then defeat is ours. */

         c = next();
         if (c == 0) {
             return false;
         }
         /*
          * Shove the character in the circle buffer and advance the
          * circle offset. The offset is mod n.
          */
         circle[offset] = c;
         offset += 1;
         if (offset >= length) {
             offset -= length;
         }
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NN7b4I1TEeS-muvgwqy9Mw" name="_initializer1" isStatic="true" method="_NYz2MI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NN7b4Y1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NN7b4o1TEeS-muvgwqy9Mw" key="init"/>
            </eAnnotations>
          </ownedOperation>
          <ownedOperation xmi:id="_NN7b441TEeS-muvgwqy9Mw" name="nextCDATA" method="_NYz2NI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZXP0I1TEeS-muvgwqy9Mw">
              <body>Get the text in the CDATA block.
     * @return The string up to the &lt;code>]]&amp;gt;&lt;/code>.
     * @throws JSONException If the &lt;code>]]&amp;gt;&lt;/code> is not found.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRxaFI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NN7b5I1TEeS-muvgwqy9Mw" name="nextContent" method="_NYz2No1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZXP0Y1TEeS-muvgwqy9Mw">
              <body>Get the next XML outer token, trimming whitespace. There are two kinds
     * of tokens: the '&lt;' character which begins a markup tag, and the content
     * text between markup tags.
     *
     * @return  A string, or a '&lt;' Character, or null if there is no more
     * source text.
     * @throws JSONException</body>
            </ownedComment>
            <ownedParameter xmi:id="_NN8C8I1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NN8C8Y1TEeS-muvgwqy9Mw" name="nextMeta" method="_NY0dQ41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZXP041TEeS-muvgwqy9Mw">
              <body>Returns the next XML meta token. This is used for skipping over &lt;!...>
     * and &lt;?...?> structures.
     * @return Syntax characters (&lt;code>&lt; > / = ! ?&lt;/code>) are returned as
     *  Character, and strings and names are returned as Boolean. We don't care
     *  what the values actually are.
     * @throws JSONException If a string is not properly closed or if the XML
     *  is badly structured.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NN8C8o1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NN8C841TEeS-muvgwqy9Mw" name="nextToken" method="_NY0dRY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZXP1I1TEeS-muvgwqy9Mw">
              <body>Get the next XML Token. These tokens are found inside of angle
     * brackets. It may be one of these characters: &lt;code>/ > = ! ?&lt;/code> or it
     * may be a string wrapped in single quotes or double quotes, or it may be a
     * name.
     * @return a String or a Character.
     * @throws JSONException If the XML is not well formed.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NN8C9I1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRwzAI1TEeS-muvgwqy9Mw" name="XMLTokener" method="_NYz2MY1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NRxaEY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NRxaEo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZWowY1TEeS-muvgwqy9Mw">
              <body>Construct an XMLTokener from a string.
     * @param s A source string.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRwzAY1TEeS-muvgwqy9Mw" name="s">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRxaEI1TEeS-muvgwqy9Mw" type="_LwhCsI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRyBII1TEeS-muvgwqy9Mw" name="nextEntity" method="_NY0dQI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZXP0o1TEeS-muvgwqy9Mw">
              <body>Return the next entity. These entities are translated to Characters:
     *     &lt;code>&amp;amp;  &amp;apos;  &amp;gt;  &amp;lt;  &amp;quot;&lt;/code>.
     * @param ampersand An ampersand character.
     * @return  A Character or an entity String if the entity is not recognized.
     * @throws JSONException If missing ';' in XML entity.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRyBIY1TEeS-muvgwqy9Mw" name="ampersand">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRyBIo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRyBJI1TEeS-muvgwqy9Mw" name="skipPast" method="_NY0dR41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZX24I1TEeS-muvgwqy9Mw">
              <body>Skip characters until past the requested string.
     * If it is not found, we are left at the end of the source with a result of false.
     * @param to A string to skip past.
     * @throws JSONException</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRyBJY1TEeS-muvgwqy9Mw" name="to">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRyoMI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_NN-fMI1TEeS-muvgwqy9Mw" name="zip">
          <packagedElement xmi:type="uml:Class" xmi:id="_NRyoMo1TEeS-muvgwqy9Mw" name="BitInputStream">
            <ownedComment xmi:id="_NZX24Y1TEeS-muvgwqy9Mw">
              <body>This is a big endian bit reader. It reads its bits from an InputStream.
 *
@version 2013-04-18
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NXx7cI1TEeS-muvgwqy9Mw" name="mask" visibility="package" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NXx7cY1TEeS-muvgwqy9Mw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXx7c41TEeS-muvgwqy9Mw" value="{ 0, 1, 3, 7, 15, 31, 63, 127, 255 }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NXyigI1TEeS-muvgwqy9Mw" name="available" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXyigY1TEeS-muvgwqy9Mw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NXzJkI1TEeS-muvgwqy9Mw" name="unread" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXzJkY1TEeS-muvgwqy9Mw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NXzwoY1TEeS-muvgwqy9Mw" name="in" visibility="private" type="_NWLY8Y1TEeS-muvgwqy9Mw" association="_NZvqVI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX0XsI1TEeS-muvgwqy9Mw" name="nrBits" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX0XsY1TEeS-muvgwqy9Mw" value="0"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_NWTUwI1TEeS-muvgwqy9Mw" client="_NRyoMo1TEeS-muvgwqy9Mw" supplier="_NR7LEI1TEeS-muvgwqy9Mw" contract="_NR7LEI1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1EUI1TEeS-muvgwqy9Mw" name="BitInputStream" specification="_NXSMMI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1EUY1TEeS-muvgwqy9Mw" name="in" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY1EUo1TEeS-muvgwqy9Mw" type="_NRyoMo1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.in = in;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1EU41TEeS-muvgwqy9Mw" name="BitInputStream" specification="_NXSzQI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1EVI1TEeS-muvgwqy9Mw" name="in" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY1EVY1TEeS-muvgwqy9Mw" name="firstByte">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY1EVo1TEeS-muvgwqy9Mw" type="_NRyoMo1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.in = in;
     this.unread = firstByte;
     this.available = 8;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1rYI1TEeS-muvgwqy9Mw" name="bit" specification="_NRz2UI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1rYY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return read(1) != 0;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1rYo1TEeS-muvgwqy9Mw" name="nrBits" specification="_NR0dYI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1rY41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <language>java</language>
              <body>return this.nrBits;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1rZI1TEeS-muvgwqy9Mw" name="pad" specification="_NR0dYo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1rZY1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY1rZo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>int padding = factor - (int) (this.nrBits % factor);
     boolean result = true;

     for (int i = 0; i &lt; padding; i += 1) {
         if (bit()) {
             result = false;
         }
     }
     return result;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY1rZ41TEeS-muvgwqy9Mw" name="read" specification="_NR1EcI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY1raI1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY1raY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (width == 0) {
         return 0;
     }
     if (width &lt; 0 || width > 32) {
         throw new IOException(&quot;Bad read width.&quot;);
     }
     int result = 0;
     while (width > 0) {
         if (this.available == 0) {
             this.unread = this.in.read();
             if (this.unread &lt; 0) {
                 throw new IOException(&quot;Attempt to read past end.&quot;);
             }
             this.available = 8;
         }
         int take = width;
         if (take > this.available) {
             take = this.available;
         }
         result |= ((this.unread >>> (this.available - take)) &amp; mask[take])
                 &lt;&lt; (width - take);
         this.nrBits += take;
         this.available -= take;
         width -= take;
     }
     return result;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NRz2UI1TEeS-muvgwqy9Mw" name="bit" method="_NY1rYI1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZX25I1TEeS-muvgwqy9Mw">
                <body>Read one bit.
     *
     * @return true if it is a 1 bit.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NRz2UY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR0dYI1TEeS-muvgwqy9Mw" name="nrBits" method="_NY1rYo1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZX25Y1TEeS-muvgwqy9Mw">
                <body>Get the number of bits that have been read from this BitInputStream.
     * This includes pad bits that have been skipped, but might not include
     * bytes that have been read from the underlying InputStream that have not
     * yet been delivered as bits.
     *
     * @return The number of bits read so far.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR0dYY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR0dYo1TEeS-muvgwqy9Mw" name="pad" method="_NY1rZI1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZX25o1TEeS-muvgwqy9Mw">
                <body>Check that the rest of the block has been padded with zeroes.
     *
     * @param factor
     *            The size of the block to pad. This will typically be 8, 16,
     *            32, 64, 128, 256, etc.
     * @return true if the block was zero padded, or false if the the padding
     *         contains any one bits.
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR0dY41TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR0dZI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR1EcI1TEeS-muvgwqy9Mw" name="read" method="_NY1rZ41TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZX2541TEeS-muvgwqy9Mw">
                <body>Read some bits.
     *
     * @param width
     *            The number of bits to read. (0..32)
     * @throws IOException
     * @return the bits</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR1EcY1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR1Eco1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NXSMMI1TEeS-muvgwqy9Mw" name="BitInputStream" method="_NY1EUI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NXSMMo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NXSMM41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NZX24o1TEeS-muvgwqy9Mw">
                <body>Make a BitReader from an InputStream. The BitReader will take bytes from
     * the InputStream and unpack them into bits.
     *
     * @param in
     *            An InputStream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NXSMMY1TEeS-muvgwqy9Mw" name="in" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NXSMNI1TEeS-muvgwqy9Mw" type="_NRyoMo1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NXSzQI1TEeS-muvgwqy9Mw" name="BitInputStream" method="_NY1EU41TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NXSzQ41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NXSzRI1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NZX2441TEeS-muvgwqy9Mw">
                <body>Make a BitReader. The first byte is passed in explicitly, the remaining
     * bytes are obtained from the InputStream. This makes it possible to look
     * at the first byte of a stream before deciding that it should be read as
     * bits.
     *
     * @param in
     *            An InputStream
     * @param firstByte
     *            The first byte, which was probably read from in.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NXSzQY1TEeS-muvgwqy9Mw" name="in" type="_NWLY8Y1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NXSzQo1TEeS-muvgwqy9Mw" name="firstByte">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NXSzRY1TEeS-muvgwqy9Mw" type="_NRyoMo1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NR3gsI1TEeS-muvgwqy9Mw" name="BitOutputStream">
            <ownedComment xmi:id="_NZX26I1TEeS-muvgwqy9Mw">
              <body>This is a big endian bit writer. It writes its bits to an OutputStream.
 *
@version 2013-04-18
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NX0-wI1TEeS-muvgwqy9Mw" name="nrBits" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX0-wY1TEeS-muvgwqy9Mw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX0-w41TEeS-muvgwqy9Mw" name="out" visibility="private" type="_NWVJ8I1TEeS-muvgwqy9Mw" association="_NZwRYY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX1l0Y1TEeS-muvgwqy9Mw" name="unwritten" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX2M4I1TEeS-muvgwqy9Mw" name="vacant" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX2M4Y1TEeS-muvgwqy9Mw" value="8"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_NWVxAY1TEeS-muvgwqy9Mw" client="_NR3gsI1TEeS-muvgwqy9Mw" supplier="_NR9nUI1TEeS-muvgwqy9Mw" contract="_NR9nUI1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY2ScI1TEeS-muvgwqy9Mw" name="BitOutputStream" specification="_NXUBYI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY2ScY1TEeS-muvgwqy9Mw" name="out" type="_NWVJ8I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY2Sco1TEeS-muvgwqy9Mw" type="_NR3gsI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.out = out;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY2Sc41TEeS-muvgwqy9Mw" name="nrBits" specification="_NR4u0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY2SdI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <language>java</language>
              <body>return this.nrBits;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY2SdY1TEeS-muvgwqy9Mw" name="one" specification="_NR5V4Y1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>write(1, 1);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY2Sdo1TEeS-muvgwqy9Mw" name="pad" specification="_NR5V4o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY2Sd41TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int padding = factor - (int) (nrBits % factor);
     int excess = padding &amp; 7;
     if (excess > 0) {
         this.write(0, excess);
         padding -= excess;
     }
     while (padding > 0) {
         this.write(0, 8);
         padding -= 8;
     }
     this.out.flush();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY25gI1TEeS-muvgwqy9Mw" name="write" specification="_NR588I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY25gY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY25go1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (bits == 0 &amp;&amp; width == 0) {
         return;
     }
     if (width &lt;= 0 || width > 32) {
         throw new IOException(&quot;Bad write width.&quot;);
     }
     while (width > 0) {
         int actual = width;
         if (actual > this.vacant) {
             actual = this.vacant;
         }
         this.unwritten |= ((bits >>> (width - actual)) &amp;
                 BitInputStream.mask[actual]) &lt;&lt; (this.vacant - actual);
         width -= actual;
         nrBits += actual;
         this.vacant -= actual;
         if (this.vacant == 0) {
             this.out.write(this.unwritten);
             this.unwritten = 0;
             this.vacant = 8;
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY25g41TEeS-muvgwqy9Mw" name="zero" specification="_NR6kAI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>write(0, 1);

 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NR4u0I1TEeS-muvgwqy9Mw" name="nrBits" method="_NY2Sc41TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZYd8Y1TEeS-muvgwqy9Mw">
                <body>Returns the number of bits that have been written to this
     * bitOutputStream. This may include bits that have not yet been written
     * to the underlying outputStream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR5V4I1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR5V4Y1TEeS-muvgwqy9Mw" name="one" method="_NY2SdY1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZYd8o1TEeS-muvgwqy9Mw">
                <body>Write a 1 bit.
     *
     * @throws IOException</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NR5V4o1TEeS-muvgwqy9Mw" name="pad" method="_NY2Sdo1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZYd841TEeS-muvgwqy9Mw">
                <body>Pad the rest of the block with zeroes and flush. pad(8) flushes the last
     * unfinished byte. The underlying OutputStream will be flushed.
     *
     * @param factor
     *            The size of the block to pad. This will typically be 8, 16,
     *            32, 64, 128, 256, etc.
     * @return this
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR5V441TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR588I1TEeS-muvgwqy9Mw" name="write" method="_NY25gI1TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZYd9I1TEeS-muvgwqy9Mw">
                <body>Write some bits. Up to 32 bits can be written at a time.
     *
     * @param bits
     *            The bits to be written.
     * @param width
     *            The number of bits to write. (0..32)
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR588Y1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR588o1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR6kAI1TEeS-muvgwqy9Mw" name="zero" method="_NY25g41TEeS-muvgwqy9Mw" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZYd9Y1TEeS-muvgwqy9Mw">
                <body>Write a 0 bit.
     *
     * @throws IOException</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NXUBYI1TEeS-muvgwqy9Mw" name="BitOutputStream" method="_NY2ScI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NXUBYo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NXUBY41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NZYd8I1TEeS-muvgwqy9Mw">
                <body>Use an OutputStream to produce a BitWriter. The BitWriter will send its
     * bits to the OutputStream as each byte is filled.
     *
     * @param out
     *            An Output Stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_NXUBYY1TEeS-muvgwqy9Mw" name="out" type="_NWVJ8I1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NXUBZI1TEeS-muvgwqy9Mw" type="_NR3gsI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_NR7LEI1TEeS-muvgwqy9Mw" name="BitReader">
            <ownedOperation xmi:id="_NR7yII1TEeS-muvgwqy9Mw" name="bit" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFAI1TEeS-muvgwqy9Mw">
                <body>Read one bit.
     *
     * @return true if it is a 1 bit.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR7yIY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR7yIo1TEeS-muvgwqy9Mw" name="nrBits">
              <ownedComment xmi:id="_NZZFAY1TEeS-muvgwqy9Mw">
                <body>Returns the number of bits that have been read from this bitreader.
     *
     * @return The number of bits read so far.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR8ZMI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR8ZMY1TEeS-muvgwqy9Mw" name="pad" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFAo1TEeS-muvgwqy9Mw">
                <body>Check that the rest of the block has been padded with zeroes.
     *
     * @param factor
     *            The size in bits of the block to pad. This will typically be
     *            8, 16, 32, 64, 128, 256, etc.
     * @return true if the block was zero padded, or false if the the padding
     *         contained any one bits.
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR8ZMo1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR8ZM41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR9AQI1TEeS-muvgwqy9Mw" name="read" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFA41TEeS-muvgwqy9Mw">
                <body>Read some bits.
     *
     * @param width
     *            The number of bits to read. (0..32)
     * @throws IOException
     * @return the bits</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR9AQY1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR9AQo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_NR9nUI1TEeS-muvgwqy9Mw" name="BitWriter">
            <ownedComment xmi:id="_NZZFBI1TEeS-muvgwqy9Mw">
              <body>A bitwriter is a an interface that allows for doing output at the bit level.
Most IO interfaces only allow for writing at the byte level or higher.</body>
            </ownedComment>
            <ownedOperation xmi:id="_NR9nUY1TEeS-muvgwqy9Mw" name="nrBits">
              <ownedComment xmi:id="_NZZFBY1TEeS-muvgwqy9Mw">
                <body>Returns the number of bits that have been written to this bitwriter.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR9nUo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR-OYI1TEeS-muvgwqy9Mw" name="one" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFBo1TEeS-muvgwqy9Mw">
                <body>Write a 1 bit.
     *
     * @throws IOException</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NR-OYY1TEeS-muvgwqy9Mw" name="pad" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFB41TEeS-muvgwqy9Mw">
                <body>Pad the rest of the block with zeros and flush.
     *
     * @param factor
     *            The size in bits of the block to pad. This will typically be
     *            8, 16, 32, 64, 128, 256, etc.
     * @return true if the block was zero padded, or false if the the padding
     *         contains any one bits.
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR-OYo1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR-1cI1TEeS-muvgwqy9Mw" name="write" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFCI1TEeS-muvgwqy9Mw">
                <body>Write some bits. Up to 32 bits can be written at a time.
     *
     * @param bits
     *            The bits to be written.
     * @param width
     *            The number of bits to write. (0..32)
     * @throws IOException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NR-1cY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NR-1co1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NR_cgI1TEeS-muvgwqy9Mw" name="zero" raisedException="_Lp1L4Y1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZZFCY1TEeS-muvgwqy9Mw">
                <body>Write a 0 bit.
     *
     * @throws IOException</body>
              </ownedComment>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NR_cgY1TEeS-muvgwqy9Mw" name="Compressor">
            <ownedComment xmi:id="_NZZsEI1TEeS-muvgwqy9Mw">
              <body>A compressor implements the compression behavior of JSONzip. It provides a
zip method that takes a JSONObject or JSONArray and delivers a stream of
bits to a BitWriter.
 *
FOR EVALUATION PURPOSES ONLY. THIS PACKAGE HAS NOT BEEN TESTED ADEQUATELY
FOR PRODUCTION USE.</body>
            </ownedComment>
            <generalization xmi:id="_NWZbYo1TEeS-muvgwqy9Mw" general="_NSkEQI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX2z8I1TEeS-muvgwqy9Mw" name="bitwriter" visibility="package" isLeaf="true" type="_NR9nUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZw4cY1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY3gkI1TEeS-muvgwqy9Mw" name="Compressor" specification="_NWW_II1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY3gkY1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY3gko1TEeS-muvgwqy9Mw" type="_NR_cgY1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super();
     this.bitwriter = bitwriter;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY3gk41TEeS-muvgwqy9Mw" name="bcd" specification="_NSAqoI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY3glI1TEeS-muvgwqy9Mw" name="digit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY3glY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (digit >= '0' &amp;&amp; digit &lt;= '9') {
         return digit - '0';
     }
     switch (digit) {
     case '.':
         return 10;
     case '-':
         return 11;
     case '+':
         return 12;
     default:
         return 13;
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY4HoI1TEeS-muvgwqy9Mw" name="flush" specification="_NSBRsY1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>pad(8);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY4HoY1TEeS-muvgwqy9Mw" name="one" specification="_NSBRso1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>if (probe) {
         log(1);
     }
     write(1, 1);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY4usI1TEeS-muvgwqy9Mw" name="pad" specification="_NSB4wI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY4usY1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
         this.bitwriter.pad(factor);
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY4uso1TEeS-muvgwqy9Mw" name="write" specification="_NSB4wo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY4us41TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY4utI1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
         this.bitwriter.write(integer, width);
         if (probe) {
             log(integer, width);
         }
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY4utY1TEeS-muvgwqy9Mw" name="write" specification="_NWXmMI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY4uto1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY4ut41TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>huff.write(integer, this.bitwriter);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY5VwI1TEeS-muvgwqy9Mw" name="write" specification="_NWYNQI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY5VwY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY5Vwo1TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>write(kim, 0, kim.length, huff);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY5Vw41TEeS-muvgwqy9Mw" name="write" specification="_NWYNQ41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY5VxI1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY5VxY1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY5Vxo1TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY5Vx41TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>for (int at = from; at &lt; thru; at += 1) {
         write(kim.get(at), huff);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY580I1TEeS-muvgwqy9Mw" name="writeAndTick" specification="_NWY0UY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY580Y1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY580o1TEeS-muvgwqy9Mw" name="keep" type="_NSaTQI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>int width = keep.bitsize();
     keep.tick(integer);
     if (probe) {
         log(&quot;\&quot;&quot; + keep.value(integer) + &quot;\&quot;&quot;);
     }
     write(integer, width);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY58041TEeS-muvgwqy9Mw" name="writeArray" specification="_NSDG4I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY581I1TEeS-muvgwqy9Mw" name="jsonarray" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>// JSONzip has three encodings for arrays:
// The array is empty (zipEmptyArray).
// First value in the array is a string (zipArrayString).
// First value in the array is not a string (zipArrayValue).

     boolean stringy = false;
     int length = jsonarray.length();
     if (length == 0) {
         write(zipEmptyArray, 3);
     } else {
         Object value = jsonarray.get(0);
         if (value == null) {
             value = JSONObject.NULL;
         }
         if (value instanceof String) {
             stringy = true;
             write(zipArrayString, 3);
             writeString((String) value);
         } else {
             write(zipArrayValue, 3);
             writeValue(value);
         }
         for (int i = 1; i &lt; length; i += 1) {
             if (probe) {
                 log();
             }
             value = jsonarray.get(i);
             if (value == null) {
                 value = JSONObject.NULL;
             }
             if (value instanceof String != stringy) {
                 zero();
             }
             one();
             if (value instanceof String) {
                 writeString((String) value);
             } else {
                 writeValue(value);
             }
         }
         zero();
         zero();

     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY6j4I1TEeS-muvgwqy9Mw" name="writeJSON" specification="_NSDt8I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY6j4Y1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>if (JSONObject.NULL.equals(value)) {
         write(zipNull, 3);
     } else if (Boolean.FALSE.equals(value)) {
         write(zipFalse, 3);
     } else if (Boolean.TRUE.equals(value)) {
         write(zipTrue, 3);
     } else {
         if (value instanceof Map) {
             value = new JSONObject((Map) value);
         } else if (value instanceof Collection) {
             value = new JSONArray((Collection) value);
         } else if (value.getClass().isArray()) {
             value = new JSONArray(value);
         }
         if (value instanceof JSONObject) {
             writeObject((JSONObject) value);
         } else if (value instanceof JSONArray) {
             writeArray((JSONArray) value);
         } else {
             throw new JSONException(&quot;Unrecognized object&quot;);
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY6j4o1TEeS-muvgwqy9Mw" name="writeName" specification="_NSEVAo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY6j441TEeS-muvgwqy9Mw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>// If this name has already been registered, then emit its integer and
// increment its usage count.

     Kim kim = new Kim(name);
     int integer = this.namekeep.find(kim);
     if (integer != none) {
         one();
         writeAndTick(integer, this.namekeep);
     } else {

// Otherwise, emit the string with Huffman encoding, and register it.

         zero();
         write(kim, this.namehuff);
         write(end, namehuff);
         this.namekeep.register(kim);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY6j5I1TEeS-muvgwqy9Mw" name="writeObject" specification="_NSEVBI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY6j5Y1TEeS-muvgwqy9Mw" name="jsonobject" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>boolean first = true;
     Iterator keys = jsonobject.keys();
     while (keys.hasNext()) {
         if (probe) {
             log(&quot;\n&quot;);
         }
         Object key = keys.next();
         if (key instanceof String) {
             if (first) {
                 first = false;
                 write(zipObject, 3);
             } else {
                 one();
             }
             writeName((String) key);
             Object value = jsonobject.get((String) key);
             if (value instanceof String) {
                 zero();
                 writeString((String) value);
             } else {
                 one();
                 writeValue(value);
             }
         }
     }
     if (first) {
         write(zipEmptyObject, 3);
     } else {
         zero();
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7K8I1TEeS-muvgwqy9Mw" name="writeString" specification="_NSFjII1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY7K8Y1TEeS-muvgwqy9Mw" name="string">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>// Special case for empty strings.

     if (string.length() == 0) {
         zero();
         zero();
         write(end, this.substringhuff);
         zero();
     } else {
         Kim kim = new Kim(string);

// Look for the string in the strings keep. If it is found, emit its
// integer and count that as a use.

         int integer = this.stringkeep.find(kim);
         if (integer != none) {
             one();
             writeAndTick(integer, this.stringkeep);
         } else {

// But if it is not found, emit the string's substrings. Register the string
// so that the next lookup will succeed.

             writeSubstring(kim);
             this.stringkeep.register(kim);
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7K8o1TEeS-muvgwqy9Mw" name="writeSubstring" specification="_NWZbYI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY7K841TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>this.substringkeep.reserve();
     zero();
     int from = 0;
     int thru = kim.length;
     int until = thru - JSONzip.minSubstringLength;
     int previousFrom = none;
     int previousThru = 0;

// Find a substring from the substring keep.

     while (true) {
         int at;
         int integer = none;
         for (at = from; at &lt;= until; at += 1) {
             integer = this.substringkeep.match(kim, at, thru);
             if (integer != none) {
                 break;
             }
         }
         if (integer == none) {
             break;
         }

// If a substring is found, emit any characters that were before the matched
// substring. Then emit the substring's integer and loop back to match the
// remainder with another substring.

         if (from != at) {
             zero();
             write(kim, from, at, this.substringhuff);
             write(end, this.substringhuff);
             if (previousFrom != none) {
                 this.substringkeep.registerOne(kim, previousFrom,
                         previousThru);
                 previousFrom = none;
             }
         }
         one();
         writeAndTick(integer, this.substringkeep);
         from = at + this.substringkeep.length(integer);
         if (previousFrom != none) {
             this.substringkeep.registerOne(kim, previousFrom,
                     previousThru);
             previousFrom = none;
         }
         previousFrom = at;
         previousThru = from + 1;
     }

// If a substring is not found, then emit the remaining characters.

     zero();
     if (from &lt; thru) {
         write(kim, from, thru, this.substringhuff);
         if (previousFrom != none) {
             this.substringkeep.registerOne(kim, previousFrom, previousThru);
         }
     }
     write(end, this.substringhuff);
     zero();

// Register the string's substrings in the trie in hopes of future substring
// matching.

     substringkeep.registerMany(kim);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7K9I1TEeS-muvgwqy9Mw" name="writeValue" specification="_NSFjIo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY7K9Y1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>if (value instanceof Number) {
         String string = JSONObject.numberToString((Number) value);
         int integer = this.values.find(string);
         if (integer != none) {
             write(2, 2);
             writeAndTick(integer, this.values);
             return;
         }
         if (value instanceof Integer || value instanceof Long) {
             long longer = ((Number) value).longValue();
             if (longer >= 0 &amp;&amp; longer &lt; int14) {
                 write(0, 2);
                 if (longer &lt; int4) {
                     zero();
                     write((int) longer, 4);
                     return;
                 }
                 one();
                 if (longer &lt; int7) {
                     zero();
                     write((int) longer, 7);
                     return;
                 }
                 one();
                 write((int) longer, 14);
                 return;
             }
         }
         write(1, 2);
         for (int i = 0; i &lt; string.length(); i += 1) {
             write(bcd(string.charAt(i)), 4);
         }
         write(endOfNumber, 4);
         this.values.register(string);
     } else {
         write(3, 2);
         writeJSON(value);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7K9o1TEeS-muvgwqy9Mw" name="zero" specification="_NSFjJI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>if (probe) {
         log(0);
     }
     write(0, 1);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7yAI1TEeS-muvgwqy9Mw" name="zip" specification="_NSGKMI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY7yAY1TEeS-muvgwqy9Mw" name="jsonobject" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>begin();
     writeJSON(jsonobject);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY7yAo1TEeS-muvgwqy9Mw" name="zip" specification="_NSGKMo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY7yA41TEeS-muvgwqy9Mw" name="jsonarray" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>begin();
     writeJSON(jsonarray);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSAqoI1TEeS-muvgwqy9Mw" name="bcd" visibility="private" isStatic="true" method="_NY3gk41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSAqoY1TEeS-muvgwqy9Mw" name="digit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSBRsI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSBRsY1TEeS-muvgwqy9Mw" name="flush" method="_NY4HoI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSBRso1TEeS-muvgwqy9Mw" name="one" visibility="private" method="_NY4HoY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSB4wI1TEeS-muvgwqy9Mw" name="pad" method="_NY4usI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSB4wY1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSB4wo1TEeS-muvgwqy9Mw" name="write" visibility="private" method="_NY4uso1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSB4w41TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSCf0I1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSDG4I1TEeS-muvgwqy9Mw" name="writeArray" visibility="private" method="_NY58041TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSDG4Y1TEeS-muvgwqy9Mw" name="jsonarray" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSDt8I1TEeS-muvgwqy9Mw" name="writeJSON" visibility="private" method="_NY6j4I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSDt8Y1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSEVAo1TEeS-muvgwqy9Mw" name="writeName" visibility="private" method="_NY6j4o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSEVA41TEeS-muvgwqy9Mw" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSEVBI1TEeS-muvgwqy9Mw" name="writeObject" visibility="private" method="_NY6j5I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSEVBY1TEeS-muvgwqy9Mw" name="jsonobject" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSFjII1TEeS-muvgwqy9Mw" name="writeString" visibility="private" method="_NY7K8I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSFjIY1TEeS-muvgwqy9Mw" name="string">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSFjIo1TEeS-muvgwqy9Mw" name="writeValue" visibility="private" method="_NY7K9I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSFjI41TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSFjJI1TEeS-muvgwqy9Mw" name="zero" visibility="private" method="_NY7K9o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSGKMI1TEeS-muvgwqy9Mw" name="zip" method="_NY7yAI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSGKMY1TEeS-muvgwqy9Mw" name="jsonobject" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSGKMo1TEeS-muvgwqy9Mw" name="zip" method="_NY7yAo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSGKM41TEeS-muvgwqy9Mw" name="jsonarray" type="_LqsHgI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWW_II1TEeS-muvgwqy9Mw" name="Compressor" method="_NY3gkI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NWW_Io1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NWW_I41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NWW_IY1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWW_JI1TEeS-muvgwqy9Mw" type="_NR_cgY1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWXmMI1TEeS-muvgwqy9Mw" name="write" visibility="private" method="_NY4utY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWXmMY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWXmMo1TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWYNQI1TEeS-muvgwqy9Mw" name="write" visibility="private" method="_NY5VwI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWYNQY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWYNQo1TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWYNQ41TEeS-muvgwqy9Mw" name="write" visibility="private" method="_NY5Vw41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWYNRI1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWYNRY1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWYNRo1TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWY0UI1TEeS-muvgwqy9Mw" name="huff" type="_NSRJUI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWY0UY1TEeS-muvgwqy9Mw" name="writeAndTick" visibility="private" method="_NY580I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWY0Uo1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWY0U41TEeS-muvgwqy9Mw" name="keep" type="_NSaTQI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWZbYI1TEeS-muvgwqy9Mw" name="writeSubstring" visibility="private" method="_NY7K8o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWZbYY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSJ0kI1TEeS-muvgwqy9Mw" name="Decompressor">
            <ownedComment xmi:id="_NZaTII1TEeS-muvgwqy9Mw">
              <body>JSONzip is a compression scheme for JSON text.
 *
@author JSON.org
@version 2013-04-18</body>
            </ownedComment>
            <generalization xmi:id="_NWcesI1TEeS-muvgwqy9Mw" general="_NSkEQI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX3bAI1TEeS-muvgwqy9Mw" name="bitreader" visibility="package" type="_NR7LEI1TEeS-muvgwqy9Mw" association="_NZw4dI1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY8ZEI1TEeS-muvgwqy9Mw" name="Decompressor" specification="_NWbQkI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY8ZEY1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY8ZEo1TEeS-muvgwqy9Mw" type="_NSJ0kI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super();
     this.bitreader = bitreader;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY9AII1TEeS-muvgwqy9Mw" name="bit" specification="_NSLCsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY9AIY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>boolean value;
     try {
         value = this.bitreader.bit();
         if (probe) {
             log(value ? 1 : 0);
         }
         return value;
     } catch (Throwable e) {
         throw new JSONException(e);
     }

 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY9AIo1TEeS-muvgwqy9Mw" name="getAndTick" specification="_NWb3oI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY9AI41TEeS-muvgwqy9Mw" name="keep" type="_NSaTQI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY9AJI1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NY9AJY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>try {
         int width = keep.bitsize();
         int integer = bitreader.read(width);
         Object value = keep.value(integer);
         if (JSONzip.probe) {
             JSONzip.log(&quot;\&quot;&quot; + value + &quot;\&quot;&quot;);
             JSONzip.log(integer, width);
         }
         if (integer >= keep.length) {
             throw new JSONException(&quot;Deep error.&quot;);
         }
         keep.tick(integer);
         return value;
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY9AJo1TEeS-muvgwqy9Mw" name="pad" specification="_NSMQ0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY9nMI1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY9nMY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
         return this.bitreader.pad(factor);
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY9nMo1TEeS-muvgwqy9Mw" name="read" specification="_NSNe8I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY9nM41TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY9nNI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
         int value = this.bitreader.read(width);
         if (probe) {
             log(value, width);
         }
         return value;
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY9nNY1TEeS-muvgwqy9Mw" name="readArray" specification="_NSOGAY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY9nNo1TEeS-muvgwqy9Mw" name="stringy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NY9nN41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>JSONArray jsonarray = new JSONArray();
     jsonarray.put(stringy ? readString() : readValue());
     while (true) {
         if (probe) {
             log(&quot;\n&quot;);
         }
         if (!bit()) {
             if (!bit()) {
                 return jsonarray;
             }
             jsonarray.put(stringy ? readValue() : readString());
         } else {
             jsonarray.put(stringy ? readString() : readValue());
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-OQI1TEeS-muvgwqy9Mw" name="readJSON" specification="_NSOtEI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-OQY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>switch (read(3)) {
     case zipObject:
         return readObject();
     case zipArrayString:
         return readArray(true);
     case zipArrayValue:
         return readArray(false);
     case zipEmptyObject:
         return new JSONObject();
     case zipEmptyArray:
         return new JSONArray();
     case zipTrue:
         return Boolean.TRUE;
     case zipFalse:
         return Boolean.FALSE;
     default:
         return JSONObject.NULL;
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-OQo1TEeS-muvgwqy9Mw" name="readName" specification="_NSOtEo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-OQ41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>byte[] bytes = new byte[65536];
     int length = 0;
     if (!bit()) {
         while (true) {
             int c = this.namehuff.read(this.bitreader);
             if (c == end) {
                 break;
             }
             bytes[length] = (byte) c;
             length += 1;
         }
         if (length == 0) {
             return &quot;&quot;;
         }
         Kim kim = new Kim(bytes, length);
         this.namekeep.register(kim);
         return kim.toString();
     }
     return getAndTick(this.namekeep, this.bitreader).toString();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-ORI1TEeS-muvgwqy9Mw" name="readObject" specification="_NSOtFI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-ORY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>JSONObject jsonobject = new JSONObject();
     while (true) {
         if (probe) {
             log(&quot;\n&quot;);
         }
         String name = readName();
         jsonobject.put(name, !bit() ? readString() : readValue());
         if (!bit()) {
             return jsonobject;
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-1UI1TEeS-muvgwqy9Mw" name="readString" specification="_NSPUIY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-1UY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Kim kim;
     int from = 0;
     int thru = 0;
     int previousFrom = none;
     int previousThru = 0;
     if (bit()) {
         return getAndTick(this.stringkeep, this.bitreader).toString();
     }
     byte[] bytes = new byte[65536];
     boolean one = bit();
     this.substringkeep.reserve();
     while (true) {
         if (one) {
             from = thru;
             kim = (Kim) getAndTick(this.substringkeep, this.bitreader);
             thru = kim.copy(bytes, from);
             if (previousFrom != none) {
                 this.substringkeep.registerOne(new Kim(bytes, previousFrom,
                         previousThru + 1));
             }
             previousFrom = from;
             previousThru = thru;
             one = bit();
         } else {
             from = none;
             while (true) {
                 int c = this.substringhuff.read(this.bitreader);
                 if (c == end) {
                     break;
                 }
                 bytes[thru] = (byte) c;
                 thru += 1;
                 if (previousFrom != none) {
                     this.substringkeep.registerOne(new Kim(bytes,
                             previousFrom, previousThru + 1));
                     previousFrom = none;
                 }
             }
             if (!bit()) {
                 break;
             }
             one = true;
         }
     }
     if (thru == 0) {
         return &quot;&quot;;
     }
     kim = new Kim(bytes, thru);
     this.stringkeep.register(kim);
     this.substringkeep.registerMany(kim);
     return kim.toString();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-1Uo1TEeS-muvgwqy9Mw" name="readValue" specification="_NSPUI41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-1U41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>switch (read(2)) {
     case 0:
         return new Integer(read(!bit() ? 4 : !bit() ? 7 : 14));
     case 1:
         byte[] bytes = new byte[256];
         int length = 0;
         while (true) {
             int c = read(4);
             if (c == endOfNumber) {
                 break;
             }
             bytes[length] = bcd[c];
             length += 1;
         }
         Object value;
         try {
             value = JSONObject.stringToValue(new String(bytes, 0, length,
                     &quot;US-ASCII&quot;));
         } catch (UnsupportedEncodingException e) {
             throw new JSONException(e);
         }
         this.values.register(value);
         return value;
     case 2:
         return getAndTick(this.values, this.bitreader);
     case 3:
         return readJSON();
     default:
         throw new JSONException(&quot;Impossible.&quot;);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY-1VI1TEeS-muvgwqy9Mw" name="unzip" specification="_NSP7MI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NY-1VY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>begin();
     return readJSON();
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSLCsI1TEeS-muvgwqy9Mw" name="bit" visibility="private" method="_NY9AII1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSLCsY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSMQ0I1TEeS-muvgwqy9Mw" name="pad" method="_NY9AJo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSMQ0Y1TEeS-muvgwqy9Mw" name="factor">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSM34I1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSNe8I1TEeS-muvgwqy9Mw" name="read" visibility="private" method="_NY9nMo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSNe8Y1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSOGAI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSOGAY1TEeS-muvgwqy9Mw" name="readArray" visibility="private" method="_NY9nNY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSOGAo1TEeS-muvgwqy9Mw" name="stringy">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSOGA41TEeS-muvgwqy9Mw" type="_LqsHgI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSOtEI1TEeS-muvgwqy9Mw" name="readJSON" visibility="private" method="_NY-OQI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSOtEY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSOtEo1TEeS-muvgwqy9Mw" name="readName" visibility="private" method="_NY-OQo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSOtE41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSOtFI1TEeS-muvgwqy9Mw" name="readObject" visibility="private" method="_NY-ORI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSPUII1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSPUIY1TEeS-muvgwqy9Mw" name="readString" visibility="private" method="_NY-1UI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSPUIo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSPUI41TEeS-muvgwqy9Mw" name="readValue" visibility="private" method="_NY-1Uo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSPUJI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSP7MI1TEeS-muvgwqy9Mw" name="unzip" method="_NY-1VI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSP7MY1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWbQkI1TEeS-muvgwqy9Mw" name="Decompressor" method="_NY8ZEI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NWbQko1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NWbQk41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NWbQkY1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWbQlI1TEeS-muvgwqy9Mw" type="_NSJ0kI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWb3oI1TEeS-muvgwqy9Mw" name="getAndTick" visibility="private" method="_NY9AIo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWb3oY1TEeS-muvgwqy9Mw" name="keep" type="_NSaTQI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWb3oo1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWb3o41TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSRJUI1TEeS-muvgwqy9Mw" name="Huff">
            <ownedComment xmi:id="_NZa6MI1TEeS-muvgwqy9Mw">
              <body>A Huffman encoder/decoder. It operates over a domain of integers, which may
map to characters or other symbols. Symbols that are used frequently are
given shorter codes than symbols that are used infrequently. This usually
produces shorter messages.
 *
Initially, all of the symbols are given the same weight. The weight of a
symbol is incremented by the tick method. The generate method is used to
generate the encoding table. The table must be generated before encoding or
decoding. You may regenerate the table with the latest weights at any time.</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NX4CEY1TEeS-muvgwqy9Mw" name="domain" visibility="private" isLeaf="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX4pIY1TEeS-muvgwqy9Mw" name="symbols" visibility="private" isLeaf="true" type="_NSSXcI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZxfgY1TEeS-muvgwqy9Mw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NX4pIo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX5QMY1TEeS-muvgwqy9Mw" name="table" visibility="private" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZyGkY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX5QM41TEeS-muvgwqy9Mw" name="upToDate" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NX5QNI1TEeS-muvgwqy9Mw" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX53QY1TEeS-muvgwqy9Mw" name="width" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_NWds0I1TEeS-muvgwqy9Mw" client="_NSRJUI1TEeS-muvgwqy9Mw" supplier="_NSi2II1TEeS-muvgwqy9Mw" contract="_NSi2II1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_NWds0Y1TEeS-muvgwqy9Mw" client="_NSRJUI1TEeS-muvgwqy9Mw" supplier="_NSjdMo1TEeS-muvgwqy9Mw" contract="_NSjdMo1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZADc41TEeS-muvgwqy9Mw" name="Huff" specification="_NSUzsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZADdI1TEeS-muvgwqy9Mw" name="domain">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZADdY1TEeS-muvgwqy9Mw" type="_NSRJUI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.domain = domain;
     int length = domain * 2 - 1;
     this.symbols = new Symbol[length];

// Make the leaf symbols.

     for (int i = 0; i &lt; domain; i += 1) {
         symbols[i] = new Symbol(i);
     }

// SMake the links.

     for (int i = domain; i &lt; length; i += 1) {
         symbols[i] = new Symbol(none);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZADdo1TEeS-muvgwqy9Mw" name="generate" specification="_NSUztY1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>if (!this.upToDate) {

// Phase One: Sort the symbols by weight into a linked list.

         Symbol head = this.symbols[0];
         Symbol next;
         Symbol previous = head;
         Symbol symbol;

         this.table = null;
         head.next = null;
         for (int i = 1; i &lt; this.domain; i += 1) {
             symbol = symbols[i];

// If this symbol weights less than the head, then it becomes the new head.

             if (symbol.weight &lt; head.weight) {
                 symbol.next = head;
                 head = symbol;
             } else {

// To save time, we will start the search from the previous symbol instead
// of the head unless the current symbol weights less than the previous symbol.

                 if (symbol.weight &lt; previous.weight) {
                     previous = head;
                 }

// Find a connected pair (previous and next) where the symbol weighs the same
// or more than previous but less than the next. Link the symbol between them.

                 while (true) {
                     next = previous.next;
                     if (next == null || symbol.weight &lt; next.weight) {
                         break;
                     }
                     previous = next;
                 }
                 symbol.next = next;
                 previous.next = symbol;
                 previous = symbol;
             }
         }

// Phase Two: Make new symbols from the two lightest symbols until only one
// symbol remains. The final symbol becomes the root of the table binary tree.

         int avail = this.domain;
         Symbol first;
         Symbol second;
         previous = head;
         while (true) {
             first = head;
             second = first.next;
             head = second.next;
             symbol = this.symbols[avail];
             avail += 1;
             symbol.weight = first.weight + second.weight;
             symbol.zero = first;
             symbol.one = second;
             symbol.back = null;
             first.back = symbol;
             second.back = symbol;
             if (head == null) {
                 break;
             }

// Insert the new symbol back into the sorted list.

             if (symbol.weight &lt; head.weight) {
                 symbol.next = head;
                 head = symbol;
                 previous = head;
             } else {
                 while (true) {
                     next = previous.next;
                     if (next == null || symbol.weight &lt; next.weight) {
                         break;
                     }
                     previous = next;
                 }
                 symbol.next = next;
                 previous.next = symbol;
                 previous = symbol;
             }

         }

// The last remaining symbol is the root of the table.

         this.table = symbol;
         this.upToDate = true;
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZADd41TEeS-muvgwqy9Mw" name="postMortem" specification="_NSVawI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZADeI1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZADeY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>int[] bits = new int[this.domain];
     Symbol symbol = this.symbols[integer];
     if (symbol.integer != integer) {
         return false;
     }
     int i = 0;
     while (true) {
         Symbol back = symbol.back;
         if (back == null) {
             break;
         }
         if (back.zero == symbol) {
             bits[i] = 0;
         } else if (back.one == symbol) {
             bits[i] = 1;
         } else {
             return false;
         }
         i += 1;
         symbol = back;
     }
     if (symbol != this.table) {
         return false;
     }
     this.width = 0;
     symbol = this.table;
     while (symbol.integer == none) {
         i -= 1;
         symbol = bits[i] != 0 ? symbol.one : symbol.zero;
     }
     return symbol.integer == integer &amp;&amp; i == 0;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZAqgI1TEeS-muvgwqy9Mw" name="postMortem" specification="_NWfiAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZAqgY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZAqgo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// Go through every integer in the domain, generating its bit sequence, and
// then proving that that bit sequence produces the same integer.

     for (int integer = 0; integer &lt; this.domain; integer += 1) {
         if (!postMortem(integer)) {
             JSONzip.log(&quot;\nBad huff &quot;);
             JSONzip.logchar(integer, integer);
             return false;
         }
     }
     return this.table.postMortem(((Huff) pm).table);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZAqg41TEeS-muvgwqy9Mw" name="read" specification="_NWgJEY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZAqhI1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZAqhY1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
         this.width = 0;
         Symbol symbol = this.table;
         while (symbol.integer == none) {
             this.width += 1;
             symbol = bitreader.bit() ? symbol.one : symbol.zero;
         }
         tick(symbol.integer);
         if (JSONzip.probe) {
             JSONzip.logchar(symbol.integer, this.width);
         }
         return symbol.integer;
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZAqho1TEeS-muvgwqy9Mw" name="tick" specification="_NSWB0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZAqh41TEeS-muvgwqy9Mw" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.symbols[value].weight += 1;
     this.upToDate = false;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZAqiI1TEeS-muvgwqy9Mw" name="tick" specification="_NSWB0o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZAqiY1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZAqio1TEeS-muvgwqy9Mw" name="to">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int value = from; value &lt;= to; value += 1) {
         tick(value);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZBRkI1TEeS-muvgwqy9Mw" name="write" specification="_NWhXMI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZBRkY1TEeS-muvgwqy9Mw" name="symbol" type="_NSSXcI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZBRko1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>try {
         Symbol back = symbol.back;
         if (back != null) {
             this.width += 1;
             write(back, bitwriter);
             if (back.zero == symbol) {
                 bitwriter.zero();
             } else {
                 bitwriter.one();
             }
         }
     } catch (Throwable e) {
         throw new JSONException(e);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZB4oI1TEeS-muvgwqy9Mw" name="write" specification="_NWhXM41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZB4oY1TEeS-muvgwqy9Mw" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZB4oo1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>this.width = 0;
     write(this.symbols[value], bitwriter);
     tick(value);
     if (JSONzip.probe) {
         JSONzip.logchar(value, this.width);
     }
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSUzsI1TEeS-muvgwqy9Mw" name="Huff" method="_NZADc41TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NSUzso1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSUzs41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NZa6Mo1TEeS-muvgwqy9Mw">
                <body>Construct a Huffman encoder/decoder.
     *
     * @param domain
     *            The number of values known to the object.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSUzsY1TEeS-muvgwqy9Mw" name="domain">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSUztI1TEeS-muvgwqy9Mw" type="_NSRJUI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSUztY1TEeS-muvgwqy9Mw" name="generate" method="_NZADdo1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZa6M41TEeS-muvgwqy9Mw">
                <body>Generate the encoding/decoding table. The table determines the bit
     * sequences used by the read and write methods.
     *
     * @return this</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NSVawI1TEeS-muvgwqy9Mw" name="postMortem" visibility="private" method="_NZADd41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSVawY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSVawo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSWB0I1TEeS-muvgwqy9Mw" name="tick" method="_NZAqho1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZa6No1TEeS-muvgwqy9Mw">
                <body>Increase by 1 the weight associated with a value.
     *
     * @param value
     *            The number of the symbol to tick
     * @return this</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSWB0Y1TEeS-muvgwqy9Mw" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSWB0o1TEeS-muvgwqy9Mw" name="tick" method="_NZAqiI1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZbhQI1TEeS-muvgwqy9Mw">
                <body>Increase by 1 the weight associated with a range of values.
     *
     * @param from
     *            The first symbol to tick
     * @param to
     *            The last symbol to tick
     * @return this</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSWB041TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSWB1I1TEeS-muvgwqy9Mw" name="to">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWfiAI1TEeS-muvgwqy9Mw" name="postMortem" method="_NZAqgI1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZa6NI1TEeS-muvgwqy9Mw">
                <body>Compare two Huffman tables.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NWfiAY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWgJEI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWgJEY1TEeS-muvgwqy9Mw" name="read" method="_NZAqg41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZa6NY1TEeS-muvgwqy9Mw">
                <body>Read bits until a symbol can be identified. The weight of the read
     * symbol will be incremented.
     *
     * @param bitreader
     *            The source of bits.
     * @return The integer value of the symbol.
     * @throws JSONException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NWgJEo1TEeS-muvgwqy9Mw" name="bitreader" type="_NR7LEI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWgwII1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWhXMI1TEeS-muvgwqy9Mw" name="write" visibility="private" method="_NZBRkI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZbhQY1TEeS-muvgwqy9Mw">
                <body>Recur from a symbol back, emitting bits. We recur before emitting to
     * make the bits come out in the right order.
     *
     * @param symbol
     *            The symbol to write.
     * @param bitwriter
     *            The bitwriter to write it to.
     * @throws JSONException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NWhXMY1TEeS-muvgwqy9Mw" name="symbol" type="_NSSXcI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWhXMo1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWhXM41TEeS-muvgwqy9Mw" name="write" method="_NZB4oI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZbhQo1TEeS-muvgwqy9Mw">
                <body>Write the bits corresponding to a symbol. The weight of the symbol will
     * be incremented.
     *
     * @param value
     *            The number of the symbol to write
     * @param bitwriter
     *            The destination of the bits.
     * @return this
     * @throws JSONException</body>
              </ownedComment>
              <ownedParameter xmi:id="_NWhXNI1TEeS-muvgwqy9Mw" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWh-QI1TEeS-muvgwqy9Mw" name="bitwriter" type="_NR9nUI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_NSSXcI1TEeS-muvgwqy9Mw" name="Symbol" visibility="private">
              <eAnnotations xmi:id="_NSSXcY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSSXco1TEeS-muvgwqy9Mw" key="static"/>
              </eAnnotations>
              <ownedAttribute xmi:id="_NX53Q41TEeS-muvgwqy9Mw" name="back" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZytoI1TEeS-muvgwqy9Mw"/>
              <ownedAttribute xmi:id="_NX6eUY1TEeS-muvgwqy9Mw" name="next" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZyto41TEeS-muvgwqy9Mw"/>
              <ownedAttribute xmi:id="_NX7FYI1TEeS-muvgwqy9Mw" name="zero" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZzUsY1TEeS-muvgwqy9Mw"/>
              <ownedAttribute xmi:id="_NX7FYo1TEeS-muvgwqy9Mw" name="one" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZz7wY1TEeS-muvgwqy9Mw"/>
              <ownedAttribute xmi:id="_NX7scY1TEeS-muvgwqy9Mw" name="integer" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NX7sc41TEeS-muvgwqy9Mw" name="weight">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_NWeT4I1TEeS-muvgwqy9Mw" client="_NSSXcI1TEeS-muvgwqy9Mw" supplier="_NSjdMo1TEeS-muvgwqy9Mw" contract="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NY_cYI1TEeS-muvgwqy9Mw" name="Symbol" specification="_NSS-gI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NY_cYY1TEeS-muvgwqy9Mw" name="integer">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NY_cYo1TEeS-muvgwqy9Mw" type="_NSSXcI1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>this.integer = integer;
         this.weight = 0;
         this.next = null;
         this.back = null;
         this.one = null;
         this.zero = null;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZADcI1TEeS-muvgwqy9Mw" name="postMortem" specification="_NWe68I1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZADcY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
                <ownedParameter xmi:id="_NZADco1TEeS-muvgwqy9Mw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>boolean result = true;
         Symbol that = (Symbol) pm;

         if (this.integer != that.integer || this.weight != that.weight) {
             return false;
         }
         if ((this.back != null) != (that.back != null)) {
             return false;
         }
         Symbol zero = this.zero;
         Symbol one = this.one;
         if (zero == null) {
             if (that.zero != null) {
                 return false;
             }
         } else {
             result = zero.postMortem(that.zero);
         }
         if (one == null) {
             if (that.one != null) {
                 return false;
             }
         } else {
             result = one.postMortem(that.one);
         }
         return result;
     </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_NSS-gI1TEeS-muvgwqy9Mw" name="Symbol" method="_NY_cYI1TEeS-muvgwqy9Mw">
                <eAnnotations xmi:id="_NSS-go1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NSTlkI1TEeS-muvgwqy9Mw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NZa6MY1TEeS-muvgwqy9Mw">
                  <body>Make a symbol representing a character or other value.
         *
         * @param integer
         *            The symbol's number</body>
                </ownedComment>
                <ownedParameter xmi:id="_NSS-gY1TEeS-muvgwqy9Mw" name="integer">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NSTlkY1TEeS-muvgwqy9Mw" type="_NSSXcI1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NWe68I1TEeS-muvgwqy9Mw" name="postMortem" method="_NZADcI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NWe68Y1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
                <ownedParameter xmi:id="_NWe68o1TEeS-muvgwqy9Mw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSaTQI1TEeS-muvgwqy9Mw" name="Keep" visibility="package" isAbstract="true">
            <ownedComment xmi:id="_NZbhQ41TEeS-muvgwqy9Mw">
              <body>A keep is a data structure that associates strings (or substrings) with
numbers. This allows the sending of small integers instead of strings.
 *
@author JSON.org
@version 2013-04-18</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NX86kI1TEeS-muvgwqy9Mw" name="capacity" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX86ko1TEeS-muvgwqy9Mw" name="length" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX9hoY1TEeS-muvgwqy9Mw" name="power" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX9ho41TEeS-muvgwqy9Mw" name="uses" visibility="protected">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NX9hpI1TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_NWjMYI1TEeS-muvgwqy9Mw" client="_NSaTQI1TEeS-muvgwqy9Mw" supplier="_NSi2II1TEeS-muvgwqy9Mw" contract="_NSi2II1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_NWjMYY1TEeS-muvgwqy9Mw" client="_NSaTQI1TEeS-muvgwqy9Mw" supplier="_NSjdMo1TEeS-muvgwqy9Mw" contract="_NSjdMo1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZCfsI1TEeS-muvgwqy9Mw" name="Keep" specification="_NSbhYI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZCfsY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZCfso1TEeS-muvgwqy9Mw" type="_NSaTQI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.capacity = JSONzip.twos[bits];
     this.length = 0;
     this.power = 0;
     this.uses = new long[this.capacity];
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZDGwI1TEeS-muvgwqy9Mw" name="age" specification="_NScIcI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZDGwY1TEeS-muvgwqy9Mw" name="use">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZDGwo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <language>java</language>
              <body>return use >= 32 ? 16 : use / 2;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZDt0I1TEeS-muvgwqy9Mw" name="bitsize" specification="_NScIc41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZDt0Y1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>while (JSONzip.twos[this.power] &lt; this.length) {
         this.power += 1;
     }
     return this.power;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZDt0o1TEeS-muvgwqy9Mw" name="tick" specification="_NScIdY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZDt041TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>this.uses[integer] += 1;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSbhYI1TEeS-muvgwqy9Mw" name="Keep" method="_NZCfsI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NSbhYo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSbhY41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NSbhYY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSbhZI1TEeS-muvgwqy9Mw" type="_NSaTQI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NScIcI1TEeS-muvgwqy9Mw" name="age" isStatic="true" method="_NZDGwI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NScIcY1TEeS-muvgwqy9Mw" name="use">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NScIco1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NScIc41TEeS-muvgwqy9Mw" name="bitsize" method="_NZDt0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NScIdI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NScIdY1TEeS-muvgwqy9Mw" name="tick" method="_NZDt0o1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NScvgI1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NScvgY1TEeS-muvgwqy9Mw" name="value" isAbstract="true">
              <ownedParameter xmi:id="_NScvgo1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSdWkI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSeksI1TEeS-muvgwqy9Mw" name="MapKeep" visibility="package">
            <ownedComment xmi:id="_NZbhRI1TEeS-muvgwqy9Mw">
              <body>A keep is an associative data structure that maintains usage counts of each
of the associations in its keeping. When the keep becomes full, it purges
little used associations, and ages the survivors. Each key is assigned an
integer value. When the keep is compacted, each key can be given a new
value.</body>
            </ownedComment>
            <generalization xmi:id="_NWkag41TEeS-muvgwqy9Mw" general="_NSaTQI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NX-vwI1TEeS-muvgwqy9Mw" name="list" visibility="private" type="_Lt6aoI1TEeS-muvgwqy9Mw" association="_NZ0i0Y1TEeS-muvgwqy9Mw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NX-vwY1TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NX-vxI1TEeS-muvgwqy9Mw" name="map" visibility="private" type="_LqpEMY1TEeS-muvgwqy9Mw" association="_NZ0i1I1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZEU4I1TEeS-muvgwqy9Mw" name="MapKeep" specification="_NSfLwI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZEU4Y1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZEU4o1TEeS-muvgwqy9Mw" type="_NSeksI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(bits);
     this.list = new Object[this.capacity];
     this.map = new HashMap(this.capacity);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZEU441TEeS-muvgwqy9Mw" name="compact" specification="_NSfy041TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>int from = 0;
     int to = 0;
     while (from &lt; this.capacity) {
         Object key = this.list[from];
         long usage = age(this.uses[from]);
         if (usage > 0) {
             this.uses[to] = usage;
             this.list[to] = key;
             this.map.put(key, new Integer(to));
             to += 1;
         } else {
             this.map.remove(key);
         }
         from += 1;
     }
     if (to &lt; this.capacity) {
         this.length = to;
     } else {
         this.map.clear();
         this.length = 0;
     }
     this.power = 0;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZEU5I1TEeS-muvgwqy9Mw" name="find" specification="_NSgZ4Y1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZEU5Y1TEeS-muvgwqy9Mw" name="key" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZEU5o1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Object o = this.map.get(key);
     return o instanceof Integer ? ((Integer) o).intValue() : none;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZEU541TEeS-muvgwqy9Mw" name="postMortem" specification="_NWkagI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZEU6I1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZEU6Y1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>MapKeep that = (MapKeep) pm;
     if (this.length != that.length) {
         JSONzip.log(this.length + &quot; &lt;> &quot; + that.length);
         return false;
     }
     for (int i = 0; i &lt; this.length; i += 1) {
         boolean b;
         if (this.list[i] instanceof Kim) {
             b = ((Kim) this.list[i]).equals(that.list[i]);
         } else {
             Object o = this.list[i];
             Object q = that.list[i];
             if (o instanceof Number) {
                 o = o.toString();
             }
             if (q instanceof Number) {
                 q = q.toString();
             }
             b = o.equals(q);
         }
         if (!b) {
             JSONzip.log(&quot;\n[&quot; + i + &quot;]\n &quot; + this.list[i] + &quot;\n &quot;
                     + that.list[i] + &quot;\n &quot; + this.uses[i] + &quot;\n &quot;
                     + that.uses[i]);
             return false;
         }
     }
     return true;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZE78I1TEeS-muvgwqy9Mw" name="register" specification="_NShA8I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZE78Y1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>if (JSONzip.probe) {
         int integer = find(value);
         if (integer >= 0) {
             JSONzip.log(&quot;\nDuplicate key &quot; + value);
         }
     }
     if (this.length >= this.capacity) {
         compact();
     }
     this.list[this.length] = value;
     this.map.put(value, new Integer(this.length));
     this.uses[this.length] = 1;
     if (JSONzip.probe) {
         JSONzip.log(&quot;&lt;&quot; + this.length + &quot; &quot; + value + &quot;> &quot;);
     }
     this.length += 1;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZE78o1TEeS-muvgwqy9Mw" name="value" specification="_NShoAI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZE7841TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZE79I1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return this.list[integer];
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSfLwI1TEeS-muvgwqy9Mw" name="MapKeep" method="_NZEU4I1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NSfLwo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSfLw41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NSfLwY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSfLxY1TEeS-muvgwqy9Mw" type="_NSeksI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSfy041TEeS-muvgwqy9Mw" name="compact" visibility="private" method="_NZEU441TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSgZ4Y1TEeS-muvgwqy9Mw" name="find" method="_NZEU5I1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcIUI1TEeS-muvgwqy9Mw">
                <body>Find the integer value associated with this key, or nothing if this key
     * is not in the keep.
     *
     * @param key
     *            An object.
     * @return An integer</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSgZ4o1TEeS-muvgwqy9Mw" name="key" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NSgZ441TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NShA8I1TEeS-muvgwqy9Mw" name="register" method="_NZE78I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NShA8Y1TEeS-muvgwqy9Mw" name="value" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NShoAI1TEeS-muvgwqy9Mw" name="value" method="_NZE78o1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcIUo1TEeS-muvgwqy9Mw">
                <body>Return the value associated with the integer.
     * @param integer The number of an item in the keep.
     * @return The value.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NShoAY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NShoAo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWkagI1TEeS-muvgwqy9Mw" name="postMortem" method="_NZEU541TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWkagY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWkago1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_NSi2II1TEeS-muvgwqy9Mw" name="None">
            <ownedComment xmi:id="_NZcIU41TEeS-muvgwqy9Mw">
              <body>None is an interface that makes the constant &lt;i>none&lt;/i> (short for
negative one or long for -1) available to any class that implements it.
The none value is used to stand for an integer that is not an integer,
such as the negative result of a search.</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NSjdMI1TEeS-muvgwqy9Mw" name="none" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NSjdMY1TEeS-muvgwqy9Mw" value="-1"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_NSjdMo1TEeS-muvgwqy9Mw" name="PostMortem">
            <ownedComment xmi:id="_NZcIVI1TEeS-muvgwqy9Mw">
              <body>The PostMortem interface allows for testing the internal state of JSONzip
processors. Testing that JSONzip can compress an object and reproduce a
corresponding object is not sufficient. Complete testing requires that the
same internal data structures were constructed on both ends. If those
structures are not equivalent, then it is likely that the implementations
are not correct, even if convention tests are passed.
 *
PostMortem allows for testing of deep structures without breaking
encapsulation.</body>
            </ownedComment>
            <ownedOperation xmi:id="_NWlooI1TEeS-muvgwqy9Mw" name="postMortem">
              <ownedParameter xmi:id="_NWlooY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWlooo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSkEQI1TEeS-muvgwqy9Mw" name="JSONzip" isAbstract="true">
            <ownedComment xmi:id="_NZcIVY1TEeS-muvgwqy9Mw">
              <body>JSONzip is a binary-encoded JSON dialect. It is designed to compress the
messages in a session. It is adaptive, so with each message seen, it should
improve its compression. It minimizes JSON's overhead, reducing punctuation
to a small number of bits. It uses Huffman encoding to reduce the average
size of characters. It uses caches (or Keeps) to keep recently seen strings
and values, so repetitive content (such as object keys) can be
substantially reduced. It uses a character encoding called Kim (Keep it
minimal) that is smaller than UTF-8 for most East European, African, and
Asian scripts.
 *
JSONzip tends to reduce most content by about half. If there is a lot of
recurring information, the reduction can be much more dramatic.
 *
FOR EVALUATION PURPOSES ONLY. THIS PACKAGE HAS NOT YET BEEN TESTED
ADEQUATELY FOR PRODUCTION USE.
 *
@author JSON.org
@version 2013-04-18</body>
            </ownedComment>
            <ownedAttribute xmi:id="_NX_94Y1TEeS-muvgwqy9Mw" name="twos" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NX_94o1TEeS-muvgwqy9Mw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYAk8Y1TEeS-muvgwqy9Mw" value="{&#xA;        1, 2, 4, 8, 16, 32, 64, 128, 256, 512,&#xA;        1024, 2048, 4096, 8192, 16384, 32768, 65536&#xA;    }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYAk8o1TEeS-muvgwqy9Mw" name="bcd" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYAk841TEeS-muvgwqy9Mw" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYAk9Y1TEeS-muvgwqy9Mw" value="{&#xA;        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-', '+', 'E'&#xA;    }"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBMAI1TEeS-muvgwqy9Mw" name="int4" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBMAY1TEeS-muvgwqy9Mw" value="16"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBMAo1TEeS-muvgwqy9Mw" name="int7" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBMA41TEeS-muvgwqy9Mw" value="128"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBMBI1TEeS-muvgwqy9Mw" name="int14" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBMBY1TEeS-muvgwqy9Mw" value="16384"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBzEI1TEeS-muvgwqy9Mw" name="end" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBzEY1TEeS-muvgwqy9Mw" value="256"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBzEo1TEeS-muvgwqy9Mw" name="endOfNumber" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBzE41TEeS-muvgwqy9Mw" value="bcd.length"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYBzFI1TEeS-muvgwqy9Mw" name="maxSubstringLength" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYBzFY1TEeS-muvgwqy9Mw" value="10"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYCaII1TEeS-muvgwqy9Mw" name="minSubstringLength" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYCaIY1TEeS-muvgwqy9Mw" value="3"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYCaIo1TEeS-muvgwqy9Mw" name="probe" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYCaI41TEeS-muvgwqy9Mw" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYCaJI1TEeS-muvgwqy9Mw" name="substringLimit" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYCaJY1TEeS-muvgwqy9Mw" value="40"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDBMI1TEeS-muvgwqy9Mw" name="zipEmptyObject" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYDBMY1TEeS-muvgwqy9Mw" value="0"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDBMo1TEeS-muvgwqy9Mw" name="zipEmptyArray" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYDBM41TEeS-muvgwqy9Mw" value="1"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDBNI1TEeS-muvgwqy9Mw" name="zipTrue" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYDBNY1TEeS-muvgwqy9Mw" value="2"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDoQI1TEeS-muvgwqy9Mw" name="zipFalse" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYDoQY1TEeS-muvgwqy9Mw" value="3"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDoQo1TEeS-muvgwqy9Mw" name="zipNull" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYDoQ41TEeS-muvgwqy9Mw" value="4"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYDoRI1TEeS-muvgwqy9Mw" name="zipObject" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYEPUI1TEeS-muvgwqy9Mw" value="5"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYEPUY1TEeS-muvgwqy9Mw" name="zipArrayString" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYEPUo1TEeS-muvgwqy9Mw" value="6"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYEPU41TEeS-muvgwqy9Mw" name="zipArrayValue" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_NYEPVI1TEeS-muvgwqy9Mw" value="7"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYE2YI1TEeS-muvgwqy9Mw" name="namehuff" visibility="protected" isLeaf="true" type="_NSRJUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ1J4Y1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYE2Yo1TEeS-muvgwqy9Mw" name="namekeep" visibility="protected" isLeaf="true" type="_NSeksI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ1w8Y1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYFdcY1TEeS-muvgwqy9Mw" name="stringkeep" visibility="protected" isLeaf="true" type="_NSeksI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ2YAY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYFdc41TEeS-muvgwqy9Mw" name="substringhuff" visibility="protected" isLeaf="true" type="_NSRJUI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ2_EY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYGEgY1TEeS-muvgwqy9Mw" name="substringkeep" visibility="protected" isLeaf="true" type="_NSsAEI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ4NMI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYGrkI1TEeS-muvgwqy9Mw" name="values" visibility="protected" isLeaf="true" type="_NSeksI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZ40QI1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_NWloo41TEeS-muvgwqy9Mw" client="_NSkEQI1TEeS-muvgwqy9Mw" supplier="_NSi2II1TEeS-muvgwqy9Mw" contract="_NSi2II1TEeS-muvgwqy9Mw"/>
            <interfaceRealization xmi:id="_NWmPsI1TEeS-muvgwqy9Mw" client="_NSkEQI1TEeS-muvgwqy9Mw" supplier="_NSjdMo1TEeS-muvgwqy9Mw" contract="_NSjdMo1TEeS-muvgwqy9Mw"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZE79Y1TEeS-muvgwqy9Mw" name="JSONzip" specification="_NSl5cI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZE79o1TEeS-muvgwqy9Mw" type="_NSkEQI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>this.namehuff = new Huff(end + 1);
     this.namekeep = new MapKeep(9);
     this.stringkeep = new MapKeep(11);
     this.substringhuff = new Huff(end + 1);
     this.substringkeep = new TrieKeep(12);
     this.values = new MapKeep(10);

// Increase the weights of the ASCII letters, digits, and special characters
// because they are highly likely to occur more frequently. The weight of each
// character will increase as it is used. The Huffman encoder will tend to
// use fewer bits to encode heavier characters.

     this.namehuff.tick(' ', '}');
     this.namehuff.tick('a', 'z');
     this.namehuff.tick(end);
     this.namehuff.tick(end);
     this.substringhuff.tick(' ', '}');
     this.substringhuff.tick('a', 'z');
     this.substringhuff.tick(end);
     this.substringhuff.tick(end);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZFjAI1TEeS-muvgwqy9Mw" name="begin" specification="_NSmggI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>this.namehuff.generate();
     this.substringhuff.generate();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZFjAY1TEeS-muvgwqy9Mw" name="log" specification="_NSmggY1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>log(&quot;\n&quot;);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZFjAo1TEeS-muvgwqy9Mw" name="log" specification="_NSmggo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZFjA41TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>log(integer + &quot; &quot;);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZGKEI1TEeS-muvgwqy9Mw" name="log" specification="_NSnHkI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZGKEY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZGKEo1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>log(integer + &quot;:&quot; + width + &quot; &quot;);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZGKE41TEeS-muvgwqy9Mw" name="log" specification="_NSnuoI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZGKFI1TEeS-muvgwqy9Mw" name="string">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>System.out.print(string);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZGKFY1TEeS-muvgwqy9Mw" name="logchar" specification="_NSoVsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZGKFo1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZGKF41TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (integer > ' ' &amp;&amp; integer &lt;= '}') {
         log(&quot;'&quot; + (char) integer + &quot;':&quot; + width + &quot; &quot;);
     } else {
         log(integer, width);
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZGxII1TEeS-muvgwqy9Mw" name="postMortem" specification="_NWnd0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZGxIY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZGxIo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>JSONzip that = (JSONzip) pm;
     return this.namehuff.postMortem(that.namehuff)
             &amp;&amp; this.namekeep.postMortem(that.namekeep)
             &amp;&amp; this.stringkeep.postMortem(that.stringkeep)
             &amp;&amp; this.substringhuff.postMortem(that.substringhuff)
             &amp;&amp; this.substringkeep.postMortem(that.substringkeep)
             &amp;&amp; this.values.postMortem(that.values);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSl5cI1TEeS-muvgwqy9Mw" name="JSONzip" visibility="protected" method="_NZE79Y1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NSl5cY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSl5co1TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_NSl5c41TEeS-muvgwqy9Mw" type="_NSkEQI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSmggI1TEeS-muvgwqy9Mw" name="begin" visibility="protected" method="_NZFjAI1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSmggY1TEeS-muvgwqy9Mw" name="log" visibility="package" isStatic="true" method="_NZFjAY1TEeS-muvgwqy9Mw"/>
            <ownedOperation xmi:id="_NSmggo1TEeS-muvgwqy9Mw" name="log" visibility="package" isStatic="true" method="_NZFjAo1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSmgg41TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSnHkI1TEeS-muvgwqy9Mw" name="log" visibility="package" isStatic="true" method="_NZGKEI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSnHkY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSnHko1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSnuoI1TEeS-muvgwqy9Mw" name="log" visibility="package" isStatic="true" method="_NZGKE41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSnuoY1TEeS-muvgwqy9Mw" name="string">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSoVsI1TEeS-muvgwqy9Mw" name="logchar" visibility="package" isStatic="true" method="_NZGKFY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSoVsY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSoVso1TEeS-muvgwqy9Mw" name="width">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWnd0I1TEeS-muvgwqy9Mw" name="postMortem" method="_NZGxII1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWnd0Y1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWnd0o1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_NSsAEI1TEeS-muvgwqy9Mw" name="TrieKeep" visibility="package">
            <ownedComment xmi:id="_NZcIVo1TEeS-muvgwqy9Mw">
              <body>A TrieKeep is a Keep that implements a Trie.</body>
            </ownedComment>
            <generalization xmi:id="_NWvZpY1TEeS-muvgwqy9Mw" general="_NSaTQI1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYIgwY1TEeS-muvgwqy9Mw" name="froms" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYIgwo1TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYJH0Y1TEeS-muvgwqy9Mw" name="thrus" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYJH0o1TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_NYJu4I1TEeS-muvgwqy9Mw" name="root" visibility="private" type="_NSsnII1TEeS-muvgwqy9Mw" association="_NZ6CYY1TEeS-muvgwqy9Mw"/>
            <ownedAttribute xmi:id="_NYJu4o1TEeS-muvgwqy9Mw" name="kims" visibility="private" type="_NRg7YI1TEeS-muvgwqy9Mw" association="_NZ7QgY1TEeS-muvgwqy9Mw">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYJu441TEeS-muvgwqy9Mw" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZImUI1TEeS-muvgwqy9Mw" name="TrieKeep" specification="_NSxfoI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZImUY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZImUo1TEeS-muvgwqy9Mw" type="_NSsAEI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>super(bits);
     this.froms = new int[this.capacity];
     this.thrus = new int[this.capacity];
     this.kims = new Kim[this.capacity];
     this.root = new Node();
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZImU41TEeS-muvgwqy9Mw" name="kim" specification="_NSxfpY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZImVI1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZImVY1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>Kim kim = this.kims[integer];
     int from = this.froms[integer];
     int thru = this.thrus[integer];
     if (from != 0 || thru != kim.length) {
         kim = new Kim(kim, from, thru);
         this.froms[integer] = 0;
         this.thrus[integer] = kim.length;
         this.kims[integer] = kim;
     }
     return kim;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJNYI1TEeS-muvgwqy9Mw" name="length" specification="_NSyGsI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJNYY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJNYo1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return this.thrus[integer] - this.froms[integer];
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJNY41TEeS-muvgwqy9Mw" name="match" specification="_NWuLgI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJNZI1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZJNZY1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJNZo1TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJNZ41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Node node = this.root;
     int best = none;
     for (int at = from; at &lt; thru; at += 1) {
         node = node.get(kim.get(at));
         if (node == null) {
             break;
         }
         if (node.integer != none) {
             best = node.integer;
         }
         from += 1;
     }
     return best;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJNaI1TEeS-muvgwqy9Mw" name="postMortem" specification="_NWuLhY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJNaY1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZJNao1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>boolean result = true;
     TrieKeep that = (TrieKeep) pm;
     if (this.length != that.length) {
         JSONzip.log(&quot;\nLength &quot; + this.length + &quot; &lt;> &quot; + that.length);
         return false;
     }
     if (this.capacity != that.capacity) {
         JSONzip.log(&quot;\nCapacity &quot; + this.capacity + &quot; &lt;> &quot; +
                 that.capacity);
         return false;
     }
     for (int i = 0; i &lt; this.length; i += 1) {
         Kim thiskim = this.kim(i);
         Kim thatkim = that.kim(i);
         if (!thiskim.equals(thatkim)) {
             JSONzip.log(&quot;\n[&quot; + i + &quot;] &quot; + thiskim + &quot; &lt;> &quot; + thatkim);
             result = false;
         }
     }
     return result &amp;&amp; this.root.postMortem(that.root);
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJNa41TEeS-muvgwqy9Mw" name="registerMany" specification="_NWuykI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJNbI1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>int length = kim.length;
     int limit = this.capacity - this.length;
     if (limit > JSONzip.substringLimit) {
         limit = JSONzip.substringLimit;
     }
     int until = length - (JSONzip.minSubstringLength - 1);
     for (int from = 0; from &lt; until; from += 1) {
         int len = length - from;
         if (len > JSONzip.maxSubstringLength) {
             len = JSONzip.maxSubstringLength;
         }
         len += from;
         Node node = this.root;
         for (int at = from; at &lt; len; at += 1) {
             Node next = node.vet(kim.get(at));
             if (next.integer == none
                     &amp;&amp; at - from >= (JSONzip.minSubstringLength - 1)) {
                 next.integer = this.length;
                 this.uses[this.length] = 1;
                 this.kims[this.length] = kim;
                 this.froms[this.length] = from;
                 this.thrus[this.length] = at + 1;
                 if (JSONzip.probe) {
                     try {
                         JSONzip.log(&quot;&lt;&lt;&quot; + this.length + &quot; &quot;
                                 + new Kim(kim, from, at + 1) + &quot;>> &quot;);
                     } catch (Throwable ignore) {
                     }
                 }
                 this.length += 1;
                 limit -= 1;
                 if (limit &lt;= 0) {
                     return;
                 }
             }
             node = next;
         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJNbY1TEeS-muvgwqy9Mw" name="registerOne" specification="_NWuyko1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJNbo1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <language>java</language>
              <body>int integer = registerOne(kim, 0, kim.length);
     if (integer != none) {
         this.kims[integer] = kim;
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJ0cI1TEeS-muvgwqy9Mw" name="registerOne" specification="_NWvZoI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJ0cY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NZJ0co1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJ0c41TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJ0dI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this.length &lt; this.capacity) {
         Node node = this.root;
         for (int at = from; at &lt; thru; at += 1) {
             node = node.vet(kim.get(at));
         }
         if (node.integer == none) {
             int integer = this.length;
             node.integer = integer;
             this.uses[integer] = 1;
             this.kims[integer] = kim;
             this.froms[integer] = from;
             this.thrus[integer] = thru;
             if (JSONzip.probe) {
                 try {
                     JSONzip.log(&quot;&lt;&lt;&quot; + integer + &quot; &quot; + new Kim(kim, from, thru) + &quot;>> &quot;);
                 } catch (Throwable ignore) {
                 }
             }
             this.length += 1;
             return integer;
         }
     }
     return none;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJ0dY1TEeS-muvgwqy9Mw" name="reserve" specification="_NSytwI1TEeS-muvgwqy9Mw">
              <language>java</language>
              <body>if (this.capacity - this.length &lt; JSONzip.substringLimit) {
         int from = 0;
         int to = 0;
         this.root = new Node();
         while (from &lt; this.capacity) {
             if (this.uses[from] > 1) {
                 Kim kim = this.kims[from];
                 int thru = this.thrus[from];
                 Node node = this.root;
                 for (int at = this.froms[from]; at &lt; thru; at += 1) {
                     Node next = node.vet(kim.get(at));
                     node = next;
                 }
                 node.integer = to;
                 this.uses[to] = age(this.uses[from]);
                 this.froms[to] = this.froms[from];
                 this.thrus[to] = thru;
                 this.kims[to] = kim;
                 to += 1;
             }
             from += 1;
         }

// It is possible, but highly unlikely, that too many items survive.
// If that happens, clear the keep.

         if (this.capacity - to &lt; JSONzip.substringLimit) {
             this.power = 0;
             this.root = new Node();
             to = 0;
         }
         this.length = to;
         while (to &lt; this.capacity) {
             this.uses[to] = 0;
             this.kims[to] = null;
             this.froms[to] = 0;
             this.thrus[to] = 0;
             to += 1;

         }
     }
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZJ0do1TEeS-muvgwqy9Mw" name="value" specification="_NSzU0I1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NZJ0d41TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NZJ0eI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
              <language>java</language>
              <body>return kim(integer);
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_NSxfoI1TEeS-muvgwqy9Mw" name="TrieKeep" method="_NZImUI1TEeS-muvgwqy9Mw">
              <eAnnotations xmi:id="_NSxfoo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_NSxfo41TEeS-muvgwqy9Mw" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_NZcvZo1TEeS-muvgwqy9Mw">
                <body>Create a new Keep of kims.
     *
     * @param bits
     *            The log2 of the capacity of the Keep. For example, if bits is
     *            12, then the keep's capacity will be 4096.</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSxfoY1TEeS-muvgwqy9Mw" name="bits">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSxfpI1TEeS-muvgwqy9Mw" type="_NSsAEI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSxfpY1TEeS-muvgwqy9Mw" name="kim" method="_NZImU41TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcvZ41TEeS-muvgwqy9Mw">
                <body>Get the kim associated with an integer.
     *
     * @param integer
     * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSxfpo1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWtkcI1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NSyGsI1TEeS-muvgwqy9Mw" name="length" method="_NZJNYI1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcvaI1TEeS-muvgwqy9Mw">
                <body>Get the length of the Kim associated with an integer. This is sometimes
     * much faster than get(integer).length.
     *
     * @param integer
     * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_NSyGsY1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSyGso1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NSytwI1TEeS-muvgwqy9Mw" name="reserve" method="_NZJ0dY1TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcvao1TEeS-muvgwqy9Mw">
                <body>Reserve space in the keep, compacting if necessary. A keep may contain
     * at most -capacity- elements. The keep contents can be reduced by
     * deleting all elements with low use counts, rebuilding the trie with the
     * survivors.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_NSzU0I1TEeS-muvgwqy9Mw" name="value" method="_NZJ0do1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NSzU0Y1TEeS-muvgwqy9Mw" name="integer">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NSzU0o1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWuLgI1TEeS-muvgwqy9Mw" name="match" method="_NZJNY41TEeS-muvgwqy9Mw">
              <ownedComment xmi:id="_NZcvaY1TEeS-muvgwqy9Mw">
                <body>Find the integer value associated with this key, or nothing if this key
     * is not in the keep.
     *
     * @param key
     *            An object.
     * @return An integer</body>
              </ownedComment>
              <ownedParameter xmi:id="_NWuLgY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWuLgo1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWuLg41TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWuLhI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWuLhY1TEeS-muvgwqy9Mw" name="postMortem" method="_NZJNaI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWuLho1TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWuLh41TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_NWuykI1TEeS-muvgwqy9Mw" name="registerMany" method="_NZJNa41TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWuykY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWuyko1TEeS-muvgwqy9Mw" name="registerOne" method="_NZJNbY1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWuyk41TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
            </ownedOperation>
            <ownedOperation xmi:id="_NWvZoI1TEeS-muvgwqy9Mw" name="registerOne" method="_NZJ0cI1TEeS-muvgwqy9Mw">
              <ownedParameter xmi:id="_NWvZoY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
              <ownedParameter xmi:id="_NWvZoo1TEeS-muvgwqy9Mw" name="from">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWvZo41TEeS-muvgwqy9Mw" name="thru">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_NWvZpI1TEeS-muvgwqy9Mw" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_NSsnII1TEeS-muvgwqy9Mw" name="Node" visibility="package">
              <ownedComment xmi:id="_NZcIV41TEeS-muvgwqy9Mw">
                <body>The trie is made of nodes.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_NYHSoI1TEeS-muvgwqy9Mw" name="integer" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_NYH5sI1TEeS-muvgwqy9Mw" name="next" visibility="private" type="_NSsnII1TEeS-muvgwqy9Mw" association="_NZ5bUI1TEeS-muvgwqy9Mw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYH5sY1TEeS-muvgwqy9Mw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_NWrIMI1TEeS-muvgwqy9Mw" client="_NSsnII1TEeS-muvgwqy9Mw" supplier="_NSjdMo1TEeS-muvgwqy9Mw" contract="_NSjdMo1TEeS-muvgwqy9Mw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZGxI41TEeS-muvgwqy9Mw" name="Node" specification="_NStOMI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZGxJI1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>this.integer = none;
         this.next = null;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZHYMI1TEeS-muvgwqy9Mw" name="get" specification="_NSt1QI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZHYMY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZHYMo1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>return this.next == null ? null : this.next[cell];
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZHYM41TEeS-muvgwqy9Mw" name="get" specification="_NSucUI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZHYNI1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZHYNY1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>return get(((int) cell) &amp; 0xFF);
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZHYNo1TEeS-muvgwqy9Mw" name="postMortem" specification="_NWrvQo1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZHYN41TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
                <ownedParameter xmi:id="_NZHYOI1TEeS-muvgwqy9Mw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Node that = (Node) pm;
         if (that == null) {
             JSONzip.log(&quot;\nMisalign&quot;);
             return false;
         }
         if (this.integer != that.integer) {
             JSONzip.log(&quot;\nInteger &quot; + this.integer + &quot; &lt;> &quot; +
                     that.integer);
             return false;
         }
         if (this.next == null) {
             if (that.next == null) {
                 return true;
             }
             JSONzip.log(&quot;\nNext is null &quot; + this.integer);
             return false;
         }
         for (int i = 0; i &lt; 256; i += 1) {
             Node node = this.next[i];
             if (node != null) {
                 if (!node.postMortem(that.next[i])) {
                     return false;
                 }
             } else if (that.next[i] != null) {
                 JSONzip.log(&quot;\nMisalign &quot; + i);
                 return false;
             }
         }
         return true;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZH_QI1TEeS-muvgwqy9Mw" name="set" specification="_NWsWUI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZH_QY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZH_Qo1TEeS-muvgwqy9Mw" name="node" type="_NSsnII1TEeS-muvgwqy9Mw"/>
                <language>java</language>
                <body>if (this.next == null) {
             this.next = new Node[256];
         }
         if (JSONzip.probe) {
             if (node == null || this.next[cell] != null) {
                 JSONzip.log(&quot;\nUnexpected set.\n&quot;);
             }
         }
         this.next[cell] = node;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZH_Q41TEeS-muvgwqy9Mw" name="set" specification="_NWs9YI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZH_RI1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZH_RY1TEeS-muvgwqy9Mw" name="node" type="_NSsnII1TEeS-muvgwqy9Mw"/>
                <language>java</language>
                <body>set(((int) cell) &amp; 0xFF, node);
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZH_Ro1TEeS-muvgwqy9Mw" name="vet" specification="_NSvDYI1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZH_R41TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZH_SI1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>Node node = get(cell);
         if (node == null) {
             node = new Node();
             set(cell, node);
         }
         return node;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NZH_SY1TEeS-muvgwqy9Mw" name="vet" specification="_NSvqcY1TEeS-muvgwqy9Mw">
                <ownedParameter xmi:id="_NZH_So1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NZH_S41TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
                <language>java</language>
                <body>return vet(((int) cell) &amp; 0xFF);
     </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_NStOMI1TEeS-muvgwqy9Mw" name="Node" method="_NZGxI41TEeS-muvgwqy9Mw">
                <eAnnotations xmi:id="_NStOMY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_NStOMo1TEeS-muvgwqy9Mw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_NZcIWI1TEeS-muvgwqy9Mw">
                  <body>Each non-leaf node contains links to up to 256 next nodes. Each node
         * has an integer value.</body>
                </ownedComment>
                <ownedParameter xmi:id="_NStOM41TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NSt1QI1TEeS-muvgwqy9Mw" name="get" method="_NZHYMI1TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcIWY1TEeS-muvgwqy9Mw">
                  <body>Get one of a node's 256 links. If it is a leaf node, it returns
         * null.
         *
         * @param cell
         *            A integer between 0 and 255.
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_NSt1QY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWrvQI1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NSucUI1TEeS-muvgwqy9Mw" name="get" method="_NZHYM41TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvYI1TEeS-muvgwqy9Mw">
                  <body>Get one of a node's 256 links. If it is a leap node, it returns
         * null. The argument is treated as an unsigned integer.
         *
         * @param cell
         *            A byte.
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_NSucUY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWrvQY1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NSvDYI1TEeS-muvgwqy9Mw" name="vet" method="_NZH_Ro1TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvZI1TEeS-muvgwqy9Mw">
                  <body>Get one of a node's 256 links. It will not return null. If there is
         * no link, then a link is manufactured.
         *
         * @param cell
         *            A integer between 0 and 255.
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_NSvqcI1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWs9Y41TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NSvqcY1TEeS-muvgwqy9Mw" name="vet" method="_NZH_SY1TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvZY1TEeS-muvgwqy9Mw">
                  <body>Get one of a node's 256 links. It will not return null. If there is
         * no link, then a link is manufactured.
         *
         * @param cell
         *            A byte.
         * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_NSvqco1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWs9ZI1TEeS-muvgwqy9Mw" type="_NSsnII1TEeS-muvgwqy9Mw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NWrvQo1TEeS-muvgwqy9Mw" name="postMortem" method="_NZHYNo1TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvYY1TEeS-muvgwqy9Mw">
                  <body>Compare two nodes. Their lengths must be equal. Their links must
         * also compare.</body>
                </ownedComment>
                <ownedParameter xmi:id="_NWrvQ41TEeS-muvgwqy9Mw" name="pm" type="_NSjdMo1TEeS-muvgwqy9Mw"/>
                <ownedParameter xmi:id="_NWrvRI1TEeS-muvgwqy9Mw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_NWsWUI1TEeS-muvgwqy9Mw" name="set" method="_NZH_QI1TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvYo1TEeS-muvgwqy9Mw">
                  <body>Set a node's link to another node.
         *
         * @param cell
         *            An integer between 0 and 255.
         * @param node
         *            The new value for the cell.</body>
                </ownedComment>
                <ownedParameter xmi:id="_NWsWUY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWsWUo1TEeS-muvgwqy9Mw" name="node" type="_NSsnII1TEeS-muvgwqy9Mw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_NWs9YI1TEeS-muvgwqy9Mw" name="set" method="_NZH_Q41TEeS-muvgwqy9Mw">
                <ownedComment xmi:id="_NZcvY41TEeS-muvgwqy9Mw">
                  <body>Set a node's link to another node.
         *
         * @param cell
         *            A byte.
         * @param node
         *            The new value for the cell.</body>
                </ownedComment>
                <ownedParameter xmi:id="_NWs9YY1TEeS-muvgwqy9Mw" name="cell">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                </ownedParameter>
                <ownedParameter xmi:id="_NWs9Yo1TEeS-muvgwqy9Mw" name="node" type="_NSsnII1TEeS-muvgwqy9Mw"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZvqVI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZvqVY1TEeS-muvgwqy9Mw _NXzwoY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZvqVY1TEeS-muvgwqy9Mw" name="" type="_NRyoMo1TEeS-muvgwqy9Mw" association="_NZvqVI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZwRYY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZwRYo1TEeS-muvgwqy9Mw _NX0-w41TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZwRYo1TEeS-muvgwqy9Mw" name="" type="_NR3gsI1TEeS-muvgwqy9Mw" association="_NZwRYY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZw4cY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZw4co1TEeS-muvgwqy9Mw _NX2z8I1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZw4co1TEeS-muvgwqy9Mw" name="" type="_NR_cgY1TEeS-muvgwqy9Mw" association="_NZw4cY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZw4dI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZw4dY1TEeS-muvgwqy9Mw _NX3bAI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZw4dY1TEeS-muvgwqy9Mw" name="" type="_NSJ0kI1TEeS-muvgwqy9Mw" association="_NZw4dI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZxfgY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZxfgo1TEeS-muvgwqy9Mw _NX4pIY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZxfgo1TEeS-muvgwqy9Mw" name="" type="_NSRJUI1TEeS-muvgwqy9Mw" association="_NZxfgY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZyGkY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZyGko1TEeS-muvgwqy9Mw _NX5QMY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZyGko1TEeS-muvgwqy9Mw" name="" type="_NSRJUI1TEeS-muvgwqy9Mw" association="_NZyGkY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZytoI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZytoY1TEeS-muvgwqy9Mw _NX53Q41TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZytoY1TEeS-muvgwqy9Mw" name="" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZytoI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZyto41TEeS-muvgwqy9Mw" name="" memberEnd="_NZytpI1TEeS-muvgwqy9Mw _NX6eUY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZytpI1TEeS-muvgwqy9Mw" name="" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZyto41TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZzUsY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZzUso1TEeS-muvgwqy9Mw _NX7FYI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZzUso1TEeS-muvgwqy9Mw" name="" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZzUsY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZz7wY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZz7wo1TEeS-muvgwqy9Mw _NX7FYo1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZz7wo1TEeS-muvgwqy9Mw" name="" type="_NSSXcI1TEeS-muvgwqy9Mw" association="_NZz7wY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ0i0Y1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ0i0o1TEeS-muvgwqy9Mw _NX-vwI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ0i0o1TEeS-muvgwqy9Mw" name="" type="_NSeksI1TEeS-muvgwqy9Mw" association="_NZ0i0Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ0i1I1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ0i1Y1TEeS-muvgwqy9Mw _NX-vxI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ0i1Y1TEeS-muvgwqy9Mw" name="" type="_NSeksI1TEeS-muvgwqy9Mw" association="_NZ0i1I1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ1J4Y1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ1J4o1TEeS-muvgwqy9Mw _NYE2YI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ1J4o1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ1J4Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ1w8Y1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ1w8o1TEeS-muvgwqy9Mw _NYE2Yo1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ1w8o1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ1w8Y1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ2YAY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ2YAo1TEeS-muvgwqy9Mw _NYFdcY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ2YAo1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ2YAY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ2_EY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ2_Eo1TEeS-muvgwqy9Mw _NYFdc41TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ2_Eo1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ2_EY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ4NMI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ4NMY1TEeS-muvgwqy9Mw _NYGEgY1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ4NMY1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ4NMI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ40QI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ40QY1TEeS-muvgwqy9Mw _NYGrkI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ40QY1TEeS-muvgwqy9Mw" name="" type="_NSkEQI1TEeS-muvgwqy9Mw" association="_NZ40QI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ5bUI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ5bUY1TEeS-muvgwqy9Mw _NYH5sI1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ5bUY1TEeS-muvgwqy9Mw" name="" type="_NSsnII1TEeS-muvgwqy9Mw" association="_NZ5bUI1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ6CYY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ6CYo1TEeS-muvgwqy9Mw _NYJu4I1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ6CYo1TEeS-muvgwqy9Mw" name="" type="_NSsAEI1TEeS-muvgwqy9Mw" association="_NZ6CYY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_NZ7QgY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZ7Qgo1TEeS-muvgwqy9Mw _NYJu4o1TEeS-muvgwqy9Mw">
            <ownedEnd xmi:id="_NZ7Qgo1TEeS-muvgwqy9Mw" name="" type="_NSsAEI1TEeS-muvgwqy9Mw" association="_NZ7QgY1TEeS-muvgwqy9Mw"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_NRBMII1TEeS-muvgwqy9Mw" name="JSONString">
          <ownedComment xmi:id="_NZSXUY1TEeS-muvgwqy9Mw">
            <body>The &lt;code>JSONString&lt;/code> interface allows a &lt;code>toJSONString()&lt;/code>
method so that a class can change the behavior of
&lt;code>JSONObject.toString()&lt;/code>, &lt;code>JSONArray.toString()&lt;/code>,
and &lt;code>JSONWriter.value(&lt;/code>Object&lt;code>)&lt;/code>. The
&lt;code>toJSONString&lt;/code> method will be used instead of the default behavior
of using the Object's &lt;code>toString()&lt;/code> method and quoting the result.</body>
          </ownedComment>
          <ownedOperation xmi:id="_NRBzMI1TEeS-muvgwqy9Mw" name="toJSONString">
            <ownedComment xmi:id="_NZSXUo1TEeS-muvgwqy9Mw">
              <body>The &lt;code>toJSONString&lt;/code> method allows a class to produce its own JSON
     * serialization.
     *
     * @return A strictly syntactically correct JSON text.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRBzMY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NRBzMo1TEeS-muvgwqy9Mw" name="JSONStringer">
          <ownedComment xmi:id="_NZSXU41TEeS-muvgwqy9Mw">
            <body>JSONStringer provides a quick and convenient way of producing JSON text.
The texts produced strictly conform to JSON syntax rules. No whitespace is
added, so the results are ready for transmission or storage. Each instance of
JSONStringer can produce one JSON text.
&lt;p>
A JSONStringer instance provides a &lt;code>value&lt;/code> method for appending
values to the
text, and a &lt;code>key&lt;/code>
method for adding keys before values in objects. There are &lt;code>array&lt;/code>
and &lt;code>endArray&lt;/code> methods that make and bound array values, and
&lt;code>object&lt;/code> and &lt;code>endObject&lt;/code> methods which make and bound
object values. All of these methods return the JSONWriter instance,
permitting cascade style. For example, &lt;pre>
myString = new JSONStringer()
    .object()
        .key(&quot;JSON&quot;)
        .value(&quot;Hello, World!&quot;)
    .endObject()
    .toString();&lt;/pre> which produces the string &lt;pre>
{&quot;JSON&quot;:&quot;Hello, World!&quot;}&lt;/pre>
&lt;p>
The first method called must be &lt;code>array&lt;/code> or &lt;code>object&lt;/code>.
There are no methods for adding commas or colons. JSONStringer adds them for
you. Objects and arrays can be nested up to 20 levels deep.
&lt;p>
This can sometimes be easier than using a JSONObject to build a string.
@author JSON.org
@version 2008-09-18</body>
          </ownedComment>
          <generalization xmi:id="_NWLY8I1TEeS-muvgwqy9Mw" general="_NRKWEI1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYqsQI1TEeS-muvgwqy9Mw" name="JSONStringer" specification="_NRCaQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYqsQY1TEeS-muvgwqy9Mw" type="_NRBzMo1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>super(new StringWriter());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYqsQo1TEeS-muvgwqy9Mw" name="toString" specification="_NRCaRI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYqsQ41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.mode == 'd' ? this.writer.toString() : null;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NRCaQI1TEeS-muvgwqy9Mw" name="JSONStringer" method="_NYqsQI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NRCaQY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NRCaQo1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_NRCaQ41TEeS-muvgwqy9Mw" type="_NRBzMo1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRCaRI1TEeS-muvgwqy9Mw" name="toString" method="_NYqsQo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRDBUI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NRKWEI1TEeS-muvgwqy9Mw" name="JSONWriter">
          <ownedComment xmi:id="_NZTlco1TEeS-muvgwqy9Mw">
            <body>JSONWriter provides a quick and convenient way of producing JSON text.
The texts produced strictly conform to JSON syntax rules. No whitespace is
added, so the results are ready for transmission or storage. Each instance of
JSONWriter can produce one JSON text.
&lt;p>
A JSONWriter instance provides a &lt;code>value&lt;/code> method for appending
values to the
text, and a &lt;code>key&lt;/code>
method for adding keys before values in objects. There are &lt;code>array&lt;/code>
and &lt;code>endArray&lt;/code> methods that make and bound array values, and
&lt;code>object&lt;/code> and &lt;code>endObject&lt;/code> methods which make and bound
object values. All of these methods return the JSONWriter instance,
permitting a cascade style. For example, &lt;pre>
new JSONWriter(myWriter)
    .object()
        .key(&quot;JSON&quot;)
        .value(&quot;Hello, World!&quot;)
    .endObject();&lt;/pre> which writes &lt;pre>
{&quot;JSON&quot;:&quot;Hello, World!&quot;}&lt;/pre>
&lt;p>
The first method called must be &lt;code>array&lt;/code> or &lt;code>object&lt;/code>.
There are no methods for adding commas or colons. JSONWriter adds them for
you. Objects and arrays can be nested up to 20 levels deep.
&lt;p>
This can sometimes be easier than using a JSONObject to build a string.
@author JSON.org
@version 2011-11-24</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXqmsI1TEeS-muvgwqy9Mw" name="maxdepth" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXrNwI1TEeS-muvgwqy9Mw" value="200"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXrNwY1TEeS-muvgwqy9Mw" name="comma" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXr00I1TEeS-muvgwqy9Mw" name="mode" visibility="protected">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXr00o1TEeS-muvgwqy9Mw" name="stack" visibility="private" isLeaf="true" type="_LpyvoI1TEeS-muvgwqy9Mw" isReadOnly="true" association="_NZucNI1TEeS-muvgwqy9Mw">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NXr0041TEeS-muvgwqy9Mw" value="*"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXsb4Y1TEeS-muvgwqy9Mw" name="top" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXsb441TEeS-muvgwqy9Mw" name="writer" visibility="protected" type="_NV99kY1TEeS-muvgwqy9Mw" association="_NZvDQY1TEeS-muvgwqy9Mw"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYuWoI1TEeS-muvgwqy9Mw" name="JSONWriter" specification="_NXN6wI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYuWoY1TEeS-muvgwqy9Mw" name="w" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYuWoo1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this.comma = false;
     this.mode = 'i';
     this.stack = new JSONObject[maxdepth];
     this.top = 0;
     this.writer = w;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYuWo41TEeS-muvgwqy9Mw" name="append" specification="_NRLkMI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYuWpI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYuWpY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (string == null) {
         throw new JSONException(&quot;Null pointer&quot;);
     }
     if (this.mode == 'o' || this.mode == 'a') {
         try {
             if (this.comma &amp;&amp; this.mode == 'a') {
                 this.writer.write(',');
             }
             this.writer.write(string);
         } catch (IOException e) {
             throw new JSONException(e);
         }
         if (this.mode == 'o') {
             this.mode = 'k';
         }
         this.comma = true;
         return this;
     }
     throw new JSONException(&quot;Value out of sequence.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYuWpo1TEeS-muvgwqy9Mw" name="array" specification="_NRLkMo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYuWp41TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (this.mode == 'i' || this.mode == 'o' || this.mode == 'a') {
         this.push(null);
         this.append(&quot;[&quot;);
         this.comma = false;
         return this;
     }
     throw new JSONException(&quot;Misplaced array.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYuWqI1TEeS-muvgwqy9Mw" name="end" specification="_NRMLQI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYuWqY1TEeS-muvgwqy9Mw" name="mode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYuWqo1TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYuWq41TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (this.mode != mode) {
         throw new JSONException(mode == 'a'
             ? &quot;Misplaced endArray.&quot;
             : &quot;Misplaced endObject.&quot;);
     }
     this.pop(mode);
     try {
         this.writer.write(c);
     } catch (IOException e) {
         throw new JSONException(e);
     }
     this.comma = true;
     return this;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYu9sI1TEeS-muvgwqy9Mw" name="endArray" specification="_NRMyUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYu9sY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.end('a', ']');
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYu9so1TEeS-muvgwqy9Mw" name="endObject" specification="_NRMyUY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYu9s41TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.end('k', '}');
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYu9tI1TEeS-muvgwqy9Mw" name="key" specification="_NRNZYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYu9tY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYu9to1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (string == null) {
         throw new JSONException(&quot;Null key.&quot;);
     }
     if (this.mode == 'k') {
         try {
             this.stack[this.top - 1].putOnce(string, Boolean.TRUE);
             if (this.comma) {
                 this.writer.write(',');
             }
             this.writer.write(JSONObject.quote(string));
             this.writer.write(':');
             this.comma = false;
             this.mode = 'o';
             return this;
         } catch (IOException e) {
             throw new JSONException(e);
         }
     }
     throw new JSONException(&quot;Misplaced key.&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYvkwI1TEeS-muvgwqy9Mw" name="object" specification="_NRNZYo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYvkwY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (this.mode == 'i') {
         this.mode = 'o';
     }
     if (this.mode == 'o' || this.mode == 'a') {
         this.append(&quot;{&quot;);
         this.push(new JSONObject());
         this.comma = false;
         return this;
     }
     throw new JSONException(&quot;Misplaced object.&quot;);

 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYvkwo1TEeS-muvgwqy9Mw" name="pop" specification="_NROAcI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYvkw41TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>if (this.top &lt;= 0) {
         throw new JSONException(&quot;Nesting error.&quot;);
     }
     char m = this.stack[this.top - 1] == null ? 'a' : 'k';
     if (m != c) {
         throw new JSONException(&quot;Nesting error.&quot;);
     }
     this.top -= 1;
     this.mode = this.top == 0
         ? 'd'
         : this.stack[this.top - 1] == null
         ? 'a'
         : 'k';
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYvkxI1TEeS-muvgwqy9Mw" name="push" specification="_NROAco1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYvkxY1TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <language>java</language>
            <body>if (this.top >= maxdepth) {
         throw new JSONException(&quot;Nesting too deep.&quot;);
     }
     this.stack[this.top] = jo;
     this.mode = jo == null ? 'a' : 'k';
     this.top += 1;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYvkxo1TEeS-muvgwqy9Mw" name="value" specification="_NROngI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYvkx41TEeS-muvgwqy9Mw" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYvkyI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.append(b ? &quot;true&quot; : &quot;false&quot;);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwL0I1TEeS-muvgwqy9Mw" name="value" specification="_NROngo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwL0Y1TEeS-muvgwqy9Mw" name="d">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwL0o1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.value(new Double(d));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwL041TEeS-muvgwqy9Mw" name="value" specification="_NRPOkY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwL1I1TEeS-muvgwqy9Mw" name="l">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwL1Y1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.append(Long.toString(l));
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwL1o1TEeS-muvgwqy9Mw" name="value" specification="_NRP1oI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwL141TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYwL2I1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>return this.append(JSONObject.valueToString(object));
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NRLkMI1TEeS-muvgwqy9Mw" name="append" visibility="private" method="_NYuWo41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTldI1TEeS-muvgwqy9Mw">
              <body>Append a value.
     * @param string A string value.
     * @return this
     * @throws JSONException If the value is out of sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRLkMY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWPDUI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRLkMo1TEeS-muvgwqy9Mw" name="array" method="_NYuWpo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTldY1TEeS-muvgwqy9Mw">
              <body>Begin appending a new array. All values until the balancing
     * &lt;code>endArray&lt;/code> will be appended to this array. The
     * &lt;code>endArray&lt;/code> method must be called to mark the array's end.
     * @return this
     * @throws JSONException If the nesting is too deep, or if the object is
     * started in the wrong place (for example as a key or after the end of the
     * outermost array or object).</body>
            </ownedComment>
            <ownedParameter xmi:id="_NWPDUY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRMLQI1TEeS-muvgwqy9Mw" name="end" visibility="private" method="_NYuWqI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTldo1TEeS-muvgwqy9Mw">
              <body>End something.
     * @param mode Mode
     * @param c Closing character
     * @return this
     * @throws JSONException If unbalanced.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRMLQY1TEeS-muvgwqy9Mw" name="mode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRMLQo1TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWPqYI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRMyUI1TEeS-muvgwqy9Mw" name="endArray" method="_NYu9sI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTld41TEeS-muvgwqy9Mw">
              <body>End an array. This method most be called to balance calls to
     * &lt;code>array&lt;/code>.
     * @return this
     * @throws JSONException If incorrectly nested.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NWPqYY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRMyUY1TEeS-muvgwqy9Mw" name="endObject" method="_NYu9so1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTleI1TEeS-muvgwqy9Mw">
              <body>End an object. This method most be called to balance calls to
     * &lt;code>object&lt;/code>.
     * @return this
     * @throws JSONException If incorrectly nested.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NWPqYo1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRNZYI1TEeS-muvgwqy9Mw" name="key" method="_NYu9tI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZTleY1TEeS-muvgwqy9Mw">
              <body>Append a key. The key will be associated with the next value. In an
     * object, every value must be preceded by a key.
     * @param string A key string.
     * @return this
     * @throws JSONException If the key is out of place. For example, keys
     *  do not belong in arrays or if the key is null.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRNZYY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWPqY41TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRNZYo1TEeS-muvgwqy9Mw" name="object" method="_NYvkwI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMgI1TEeS-muvgwqy9Mw">
              <body>Begin appending a new object. All keys and values until the balancing
     * &lt;code>endObject&lt;/code> will be appended to this object. The
     * &lt;code>endObject&lt;/code> method must be called to mark the object's end.
     * @return this
     * @throws JSONException If the nesting is too deep, or if the object is
     * started in the wrong place (for example as a key or after the end of the
     * outermost array or object).</body>
            </ownedComment>
            <ownedParameter xmi:id="_NWPqZI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NROAcI1TEeS-muvgwqy9Mw" name="pop" visibility="private" method="_NYvkwo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMgY1TEeS-muvgwqy9Mw">
              <body>Pop an array or object scope.
     * @param c The scope to close.
     * @throws JSONException If nesting is wrong.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NROAcY1TEeS-muvgwqy9Mw" name="c">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NROAco1TEeS-muvgwqy9Mw" name="push" visibility="private" method="_NYvkxI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMgo1TEeS-muvgwqy9Mw">
              <body>Push an array or object scope.
     * @param c The scope to open.
     * @throws JSONException If nesting is too deep.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NROAc41TEeS-muvgwqy9Mw" name="jo" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NROngI1TEeS-muvgwqy9Mw" name="value" method="_NYvkxo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMg41TEeS-muvgwqy9Mw">
              <body>Append either the value &lt;code>true&lt;/code> or the value
     * &lt;code>false&lt;/code>.
     * @param b A boolean.
     * @return this
     * @throws JSONException</body>
            </ownedComment>
            <ownedParameter xmi:id="_NROngY1TEeS-muvgwqy9Mw" name="b">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWPqZY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NROngo1TEeS-muvgwqy9Mw" name="value" method="_NYwL0I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMhI1TEeS-muvgwqy9Mw">
              <body>Append a double value.
     * @param d A double.
     * @return this
     * @throws JSONException If the number is not finite.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRPOkI1TEeS-muvgwqy9Mw" name="d">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWPqZo1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRPOkY1TEeS-muvgwqy9Mw" name="value" method="_NYwL041TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMhY1TEeS-muvgwqy9Mw">
              <body>Append a long value.
     * @param l A long.
     * @return this
     * @throws JSONException</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRPOko1TEeS-muvgwqy9Mw" name="l">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWQRcI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRP1oI1TEeS-muvgwqy9Mw" name="value" method="_NYwL1o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUMho1TEeS-muvgwqy9Mw">
              <body>Append an object value.
     * @param object The object to append. It can be null, or a Boolean, Number,
     *   String, JSONObject, or JSONArray, or an object that implements JSONString.
     * @return this
     * @throws JSONException If the value is out of sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRP1oY1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NWQRcY1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NXN6wI1TEeS-muvgwqy9Mw" name="JSONWriter" method="_NYuWoI1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NXN6wo1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NXN6w41TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZTlc41TEeS-muvgwqy9Mw">
              <body>Make a fresh JSONWriter. It can be used to build one JSON text.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NXN6wY1TEeS-muvgwqy9Mw" name="w" type="_NV99kY1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NXN6xI1TEeS-muvgwqy9Mw" type="_NRKWEI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NRg7YI1TEeS-muvgwqy9Mw" name="Kim">
          <ownedComment xmi:id="_NZUMh41TEeS-muvgwqy9Mw">
            <body>Kim makes immutable eight bit Unicode strings. If the MSB of a byte is set,
then the next byte is a continuation byte. The last byte of a character
never has the MSB reset. Every byte that is not the last byte has the MSB
set. Kim stands for &quot;Keep it minimal&quot;. A Unicode character is never longer
than 3 bytes. Every byte contributes 7 bits to the character. ASCII is
unmodified.
 *
                 Kim             UTF-8
one byte         U+007F          U+007F
two bytes        U+3FFF          U+07FF
three bytes      U+10FFF         U+FFFF
four bytes                       U+10FFFF
 *
Characters in the ranges U+0800..U+3FFF and U+10000..U+10FFFF will be one
byte smaller when encoded in Kim compared to UTF-8.
 *
Kim is beneficial when using scripts such as Old South Arabian, Aramaic,
Avestan, Balinese, Batak, Bopomofo, Buginese, Buhid, Carian, Cherokee,
Coptic, Cyrillic, Deseret, Egyptian Hieroglyphs, Ethiopic, Georgian,
Glagolitic, Gothic, Hangul Jamo, Hanunoo, Hiragana, Kanbun, Kaithi,
Kannada, Katakana, Kharoshthi, Khmer, Lao, Lepcha, Limbu, Lycian, Lydian,
Malayalam, Mandaic, Meroitic, Miao, Mongolian, Myanmar, New Tai Lue,
Ol Chiki, Old Turkic, Oriya, Osmanya, Pahlavi, Parthian, Phags-Pa,
Phoenician, Samaritan, Sharada, Sinhala, Sora Sompeng, Tagalog, Tagbanwa,
Takri, Tai Le, Tai Tham, Tamil, Telugu, Thai, Tibetan, Tifinagh, UCAS.
 *
A kim object can be constructed from an ordinary UTF-16 string, or from a
byte array. A kim object can produce a UTF-16 string.
 *
As with UTF-8, Kim can be sorted, and it is possible to detect character
boundaries within a byte sequence. UTF-8 is one of the world's great
inventions. While Kim is more efficient, it is not clear that it is worth
the expense of transition.
 *
@version 2013-04-18</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXtC8Y1TEeS-muvgwqy9Mw" name="bytes" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NXtqAI1TEeS-muvgwqy9Mw" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXtqAo1TEeS-muvgwqy9Mw" value="null"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXtqBI1TEeS-muvgwqy9Mw" name="hashcode" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXuREI1TEeS-muvgwqy9Mw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXuREo1TEeS-muvgwqy9Mw" name="length">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXuRE41TEeS-muvgwqy9Mw" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXu4II1TEeS-muvgwqy9Mw" name="string" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXu4IY1TEeS-muvgwqy9Mw" value="null"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwy4I1TEeS-muvgwqy9Mw" name="Kim" specification="_NRhicI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwy4Y1TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYwy4o1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy441TEeS-muvgwqy9Mw" name="from">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy5I1TEeS-muvgwqy9Mw" name="thru">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy5Y1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>// As the bytes are copied into the new kim, a hashcode is computed using a
// modified Fletcher code.

     int sum = 1;
     int value;
     this.hashcode = 0;
     this.length = thru - from;
     if (this.length > 0) {
         this.bytes = new byte[this.length];
         for (int at = 0; at &lt; this.length; at += 1) {
             value = (int) bytes[at + from] &amp; 0xFF;
             sum += value;
             this.hashcode += sum;
             this.bytes[at] = (byte) value;
         }
         this.hashcode += sum &lt;&lt; 16;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwy5o1TEeS-muvgwqy9Mw" name="Kim" specification="_NRjXoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwy541TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYwy6I1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy6Y1TEeS-muvgwqy9Mw" name="length">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy6o1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(bytes, 0, length);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYwy641TEeS-muvgwqy9Mw" name="Kim" specification="_NWRfkI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYwy7I1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYwy7Y1TEeS-muvgwqy9Mw" name="from">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy7o1TEeS-muvgwqy9Mw" name="thru">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYwy741TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>this(kim.bytes, from, thru);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYxZ8I1TEeS-muvgwqy9Mw" name="Kim" specification="_NRlM0I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYxZ8Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYxZ8o1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>int stringLength = string.length();
     this.hashcode = 0;
     this.length = 0;

// First pass: Determine the length of the kim, allowing for the UTF-16
// to UTF-32 conversion, and then the UTF-32 to kim conversion.

     if (stringLength > 0) {
         for (int i = 0; i &lt; stringLength; i += 1) {
             int c = string.charAt(i);
             if (c &lt;= 0x7F) {
                 this.length += 1;
             } else if (c &lt;= 0x3FFF) {
                 this.length += 2;
             } else {
                 if (c >= 0xD800 &amp;&amp; c &lt;= 0xDFFF) {
                     i += 1;
                     int d = string.charAt(i);
                     if (c > 0xDBFF || d &lt; 0xDC00 || d > 0xDFFF) {
                         throw new JSONException(&quot;Bad UTF16&quot;);
                     }
                 }
                 this.length += 3;
             }
         }

// Second pass: Allocate a byte array and fill that array with the conversion
// while computing the hashcode.

         this.bytes = new byte[length];
         int at = 0;
         int b;
         int sum = 1;
         for (int i = 0; i &lt; stringLength; i += 1) {
             int character = string.charAt(i);
             if (character &lt;= 0x7F) {
                 bytes[at] = (byte) character;
                 sum += character;
                 this.hashcode += sum;
                 at += 1;
             } else if (character &lt;= 0x3FFF) {
                 b = 0x80 | (character >>> 7);
                 bytes[at] = (byte) b;
                 sum += b;
                 this.hashcode += sum;
                 at += 1;
                 b = character &amp; 0x7F;
                 bytes[at] = (byte) b;
                 sum += b;
                 this.hashcode += sum;
                 at += 1;
             } else {
                 if (character >= 0xD800 &amp;&amp; character &lt;= 0xDBFF) {
                     i += 1;
                     character = (((character &amp; 0x3FF) &lt;&lt; 10) | (string
                             .charAt(i) &amp; 0x3FF)) + 65536;
                 }
                 b = 0x80 | (character >>> 14);
                 bytes[at] = (byte) b;
                 sum += b;
                 this.hashcode += sum;
                 at += 1;
                 b = 0x80 | ((character >>> 7) &amp; 0xFF);
                 bytes[at] = (byte) b;
                 sum += b;
                 this.hashcode += sum;
                 at += 1;
                 b = character &amp; 0x7F;
                 bytes[at] = (byte) b;
                 sum += b;
                 this.hashcode += sum;
                 at += 1;
             }
         }
         this.hashcode += sum &lt;&lt; 16;
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYxZ841TEeS-muvgwqy9Mw" name="characterAt" specification="_NRlz4I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYxZ9I1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYxZ9Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>int c = get(at);
     if ((c &amp; 0x80) == 0) {
         return c;
     }
     int character;
     int c1 = get(at + 1);
     if ((c1 &amp; 0x80) == 0) {
         character = ((c &amp; 0x7F) &lt;&lt; 7) | c1;
         if (character > 0x7F) {
             return character;
         }
     } else {
         int c2 = get(at + 2);
         character = ((c &amp; 0x7F) &lt;&lt; 14) | ((c1 &amp; 0x7F) &lt;&lt; 7) | c2;
         if ((c2 &amp; 0x80) == 0 &amp;&amp; character > 0x3FFF &amp;&amp; character &lt;= 0x10FFFF
                 &amp;&amp; (character &lt; 0xD800 || character > 0xDFFF)) {
             return character;
         }
     }
     throw new JSONException(&quot;Bad character at &quot; + at);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYxZ9o1TEeS-muvgwqy9Mw" name="characterSize" specification="_NRma8I1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYxZ941TEeS-muvgwqy9Mw" name="character">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYxZ-I1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (character &lt; 0 || character > 0x10FFFF) {
         throw new JSONException(&quot;Bad character &quot; + character);
     }
     return character &lt;= 0x7F ? 1 : character &lt;= 0x3FFF ? 2 : 3;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYxZ-Y1TEeS-muvgwqy9Mw" name="copy" specification="_NRma841TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYxZ-o1TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYxZ-41TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYxZ_I1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYxZ_Y1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>System.arraycopy(this.bytes, 0, bytes, at, this.length);
     return at + this.length;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyBAI1TEeS-muvgwqy9Mw" name="equals" specification="_NRnCAo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyBAY1TEeS-muvgwqy9Mw" name="obj" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYyBAo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>if (!(obj instanceof Kim)) {
         return false;
     }
     Kim that = (Kim) obj;
     if (this == that) {
         return true;
     }
     if (this.hashcode != that.hashcode) {
         return false;
     }
     return java.util.Arrays.equals(this.bytes, that.bytes);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyBA41TEeS-muvgwqy9Mw" name="get" specification="_NRnpEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyBBI1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYyBBY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (at &lt; 0 || at > this.length) {
         throw new JSONException(&quot;Bad character at &quot; + at);
     }
     return ((int) this.bytes[at]) &amp; 0xFF;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyBBo1TEeS-muvgwqy9Mw" name="hashCode" specification="_NRnpE41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyBB41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return this.hashcode;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyBCI1TEeS-muvgwqy9Mw" name="toString" specification="_NRnpFY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyBCY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>if (this.string == null) {
         int c;
         int length = 0;
         char chars[] = new char[this.length];
         for (int at = 0; at &lt; this.length; at += characterSize(c)) {
             c = this.characterAt(at);
             if (c &lt; 0x10000) {
                 chars[length] = (char) c;
                 length += 1;
             } else {
                 chars[length] = (char) (0xD800 | ((c - 0x10000) >>> 10));
                 length += 1;
                 chars[length] = (char) (0xDC00 | (c &amp; 0x03FF));
                 length += 1;
             }
         }
         this.string = new String(chars, 0, length);
     }
     return this.string;
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NRhicI1TEeS-muvgwqy9Mw" name="Kim" method="_NYwy4I1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NRiJg41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NRiJhI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZUMiI1TEeS-muvgwqy9Mw">
              <body>Make a kim from a portion of a byte array.
     *
     * @param bytes
     *            A byte array.
     * @param from
     *            The index of the first byte.
     * @param thru
     *            The index of the last byte plus one.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRiJgI1TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NRiwkI1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRiJgY1TEeS-muvgwqy9Mw" name="from">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRiJgo1TEeS-muvgwqy9Mw" name="thru">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRiJhY1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRjXoI1TEeS-muvgwqy9Mw" name="Kim" method="_NYwy5o1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NRjXo41TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NRjXpI1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZUMiY1TEeS-muvgwqy9Mw">
              <body>Make a kim from a byte array.
     *
     * @param bytes
     *            The byte array.
     * @param length
     *            The number of bytes.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRjXoY1TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NRj-sI1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRjXoo1TEeS-muvgwqy9Mw" name="length">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRjXpY1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRlM0I1TEeS-muvgwqy9Mw" name="Kim" method="_NYxZ8I1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NRlM0o1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NRlM041TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZUzkY1TEeS-muvgwqy9Mw">
              <body>Make a kim from a string.
     *
     * @param string
     *            The string.
     * @throws JSONException
     *             if surrogate pair mismatch.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRlM0Y1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRlM1I1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRlz4I1TEeS-muvgwqy9Mw" name="characterAt" method="_NYxZ841TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzko1TEeS-muvgwqy9Mw">
              <body>Returns the character at the specified index. The index refers to byte
     * values and ranges from 0 to length - 1. The index of the next character
     * is at index + Kim.characterSize(kim.characterAt(index)).
     *
     * @param at
     *            the index of the char value. The first character is at 0.
     * @returns a Unicode character between 0 and 0x10FFFF.
     * @throws JSONException
     *             if at does not point to a valid character.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRlz4Y1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRlz4o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRma8I1TEeS-muvgwqy9Mw" name="characterSize" isStatic="true" method="_NYxZ9o1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzk41TEeS-muvgwqy9Mw">
              <body>Returns the number of bytes needed to contain the character in Kim
     * format.
     *
     * @param character
     *            a Unicode character between 0 and 0x10FFFF.
     * @return 1, 2, or 3
     * @throws JSONException
     *             if the character is not representable in a kim.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRma8Y1TEeS-muvgwqy9Mw" name="character">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRma8o1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRma841TEeS-muvgwqy9Mw" name="copy" method="_NYxZ-Y1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzlI1TEeS-muvgwqy9Mw">
              <body>Copy the contents of this kim to a byte array.
     *
     * @param bytes
     *            A byte array of sufficient size.
     * @param at
     *            The position within the byte array to take the byes.
     * @return The position immediately after the copy.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRma9I1TEeS-muvgwqy9Mw" name="bytes">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NRnCAY1TEeS-muvgwqy9Mw" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRma9Y1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRnCAI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRnCAo1TEeS-muvgwqy9Mw" name="equals" method="_NYyBAI1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzlY1TEeS-muvgwqy9Mw">
              <body>Two kim objects containing exactly the same bytes in the same order are
     * equal to each other.
     *
     * @param obj
     *            the other kim with which to compare.
     * @returns true if this and obj are both kim objects containing identical
     *          byte sequences.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRnCA41TEeS-muvgwqy9Mw" name="obj" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NRnCBI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRnpEI1TEeS-muvgwqy9Mw" name="get" method="_NYyBA41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzlo1TEeS-muvgwqy9Mw">
              <body>*
     * @param at
     *            The position of the byte. The first byte is at 0.
     * @return The byte.
     * @throws JSONException
     *             if there is no byte at that position.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRnpEY1TEeS-muvgwqy9Mw" name="at">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRnpEo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRnpE41TEeS-muvgwqy9Mw" name="hashCode" method="_NYyBBo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzl41TEeS-muvgwqy9Mw">
              <body>Returns a hash code value for the kim.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRnpFI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRnpFY1TEeS-muvgwqy9Mw" name="toString" method="_NYyBCI1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedComment xmi:id="_NZUzmI1TEeS-muvgwqy9Mw">
              <body>Produce a UTF-16 String from this kim. The number of codepoints in the
     * string will not be greater than the number of bytes in the kim, although
     * it could be less.
     *
     * @return The string. A kim memoizes its string representation.
     * @throws JSONException
     *             if the kim is invalid.</body>
            </ownedComment>
            <ownedParameter xmi:id="_NRoQII1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NWRfkI1TEeS-muvgwqy9Mw" name="Kim" method="_NYwy641TEeS-muvgwqy9Mw">
            <eAnnotations xmi:id="_NWSGoI1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_NWSGoY1TEeS-muvgwqy9Mw" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_NZUzkI1TEeS-muvgwqy9Mw">
              <body>Make a new kim from a substring of an existing kim. The coordinates are
     * in byte units, not character units.
     *
     * @param kim
     *            The source of bytes.
     * @param from
     *            The point at which to take bytes.
     * @param thru
     *            The point at which to stop taking bytes.
     * @return the substring</body>
            </ownedComment>
            <ownedParameter xmi:id="_NWRfkY1TEeS-muvgwqy9Mw" name="kim" type="_NRg7YI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NWRfko1TEeS-muvgwqy9Mw" name="from">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWRfk41TEeS-muvgwqy9Mw" name="thru">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NWSGoo1TEeS-muvgwqy9Mw" type="_NRg7YI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_NRo3MI1TEeS-muvgwqy9Mw" name="XML">
          <ownedComment xmi:id="_NZUzmY1TEeS-muvgwqy9Mw">
            <body>This provides static methods to convert an XML text into a JSONObject,
and to covert a JSONObject into an XML text.
@author JSON.org
@version 2012-10-26</body>
          </ownedComment>
          <ownedAttribute xmi:id="_NXvfMI1TEeS-muvgwqy9Mw" name="AMP" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXvfMY1TEeS-muvgwqy9Mw" value="new Character('&amp;')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXvfMo1TEeS-muvgwqy9Mw" name="APOS" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXvfM41TEeS-muvgwqy9Mw" value="new Character('\'')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXvfNI1TEeS-muvgwqy9Mw" name="BANG" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXvfNY1TEeS-muvgwqy9Mw" value="new Character('!')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwGQI1TEeS-muvgwqy9Mw" name="EQ" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwGQY1TEeS-muvgwqy9Mw" value="new Character('=')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwGQo1TEeS-muvgwqy9Mw" name="GT" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwGQ41TEeS-muvgwqy9Mw" value="new Character('>')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwGRI1TEeS-muvgwqy9Mw" name="LT" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwGRY1TEeS-muvgwqy9Mw" value="new Character('&lt;')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwtUI1TEeS-muvgwqy9Mw" name="QUEST" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwtUY1TEeS-muvgwqy9Mw" value="new Character('?')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwtUo1TEeS-muvgwqy9Mw" name="QUOT" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwtU41TEeS-muvgwqy9Mw" value="new Character('&quot;')"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_NXwtVI1TEeS-muvgwqy9Mw" name="SLASH" isLeaf="true" isStatic="true" type="_NXPI4I1TEeS-muvgwqy9Mw" isReadOnly="true">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_NXwtVY1TEeS-muvgwqy9Mw" value="new Character('/')"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyoEI1TEeS-muvgwqy9Mw" name="escape" specification="_NRqFUI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyoEY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYyoEo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     for (int i = 0, length = string.length(); i &lt; length; i++) {
         char c = string.charAt(i);
         switch (c) {
         case '&amp;':
             sb.append(&quot;&amp;amp;&quot;);
             break;
         case '&lt;':
             sb.append(&quot;&amp;lt;&quot;);
             break;
         case '>':
             sb.append(&quot;&amp;gt;&quot;);
             break;
         case '&quot;':
             sb.append(&quot;&amp;quot;&quot;);
             break;
         case '\'':
             sb.append(&quot;&amp;apos;&quot;);
             break;
         default:
             sb.append(c);
         }
     }
     return sb.toString();
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyoE41TEeS-muvgwqy9Mw" name="noSpace" specification="_NRqsYI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyoFI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>int i, length = string.length();
     if (length == 0) {
         throw new JSONException(&quot;Empty string.&quot;);
     }
     for (i = 0; i &lt; length; i += 1) {
         if (Character.isWhitespace(string.charAt(i))) {
             throw new JSONException(&quot;'&quot; + string +
                     &quot;' contains a space character.&quot;);
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYyoFY1TEeS-muvgwqy9Mw" name="parse" specification="_NRqsYo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYyoFo1TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYyoF41TEeS-muvgwqy9Mw" name="context" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYyoGI1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYyoGY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>char       c;
     int        i;
     JSONObject jsonobject = null;
     String     string;
     String     tagName;
     Object     token;

// Test for and skip past these forms:
//      &lt;!-- ... -->
//      &lt;!   ...   >
//      &lt;![  ... ]]&gt;
//      &lt;?   ...  ?>
// Report errors for these forms:
//      &lt;>
//      &lt;=
//      &lt;&lt;

     token = x.nextToken();

// &lt;!

     if (token == BANG) {
         c = x.next();
         if (c == '-') {
             if (x.next() == '-') {
                 x.skipPast(&quot;-->&quot;);
                 return false;
             }
             x.back();
         } else if (c == '[') {
             token = x.nextToken();
             if (&quot;CDATA&quot;.equals(token)) {
                 if (x.next() == '[') {
                     string = x.nextCDATA();
                     if (string.length() > 0) {
                         context.accumulate(&quot;content&quot;, string);
                     }
                     return false;
                 }
             }
             throw x.syntaxError(&quot;Expected 'CDATA['&quot;);
         }
         i = 1;
         do {
             token = x.nextMeta();
             if (token == null) {
                 throw x.syntaxError(&quot;Missing '>' after '&lt;!'.&quot;);
             } else if (token == LT) {
                 i += 1;
             } else if (token == GT) {
                 i -= 1;
             }
         } while (i > 0);
         return false;
     } else if (token == QUEST) {

// &lt;?

         x.skipPast(&quot;?>&quot;);
         return false;
     } else if (token == SLASH) {

// Close tag &lt;/

         token = x.nextToken();
         if (name == null) {
             throw x.syntaxError(&quot;Mismatched close tag &quot; + token);
         }
         if (!token.equals(name)) {
             throw x.syntaxError(&quot;Mismatched &quot; + name + &quot; and &quot; + token);
         }
         if (x.nextToken() != GT) {
             throw x.syntaxError(&quot;Misshaped close tag&quot;);
         }
         return true;

     } else if (token instanceof Character) {
         throw x.syntaxError(&quot;Misshaped tag&quot;);

// Open tag &lt;

     } else {
         tagName = (String)token;
         token = null;
         jsonobject = new JSONObject();
         for (;;) {
             if (token == null) {
                 token = x.nextToken();
             }

// attribute = value

             if (token instanceof String) {
                 string = (String)token;
                 token = x.nextToken();
                 if (token == EQ) {
                     token = x.nextToken();
                     if (!(token instanceof String)) {
                         throw x.syntaxError(&quot;Missing value&quot;);
                     }
                     jsonobject.accumulate(string,
                             XML.stringToValue((String)token));
                     token = null;
                 } else {
                     jsonobject.accumulate(string, &quot;&quot;);
                 }

// Empty tag &lt;.../>

             } else if (token == SLASH) {
                 if (x.nextToken() != GT) {
                     throw x.syntaxError(&quot;Misshaped tag&quot;);
                 }
                 if (jsonobject.length() > 0) {
                     context.accumulate(tagName, jsonobject);
                 } else {
                     context.accumulate(tagName, &quot;&quot;);
                 }
                 return false;

// Content, between &lt;...> and &lt;/...>

             } else if (token == GT) {
                 for (;;) {
                     token = x.nextContent();
                     if (token == null) {
                         if (tagName != null) {
                             throw x.syntaxError(&quot;Unclosed tag &quot; + tagName);
                         }
                         return false;
                     } else if (token instanceof String) {
                         string = (String)token;
                         if (string.length() > 0) {
                             jsonobject.accumulate(&quot;content&quot;,
                                     XML.stringToValue(string));
                         }

// Nested element

                     } else if (token == LT) {
                         if (parse(x, jsonobject, tagName)) {
                             if (jsonobject.length() == 0) {
                                 context.accumulate(tagName, &quot;&quot;);
                             } else if (jsonobject.length() == 1 &amp;&amp;
                                    jsonobject.opt(&quot;content&quot;) != null) {
                                 context.accumulate(tagName,
                                         jsonobject.opt(&quot;content&quot;));
                             } else {
                                 context.accumulate(tagName, jsonobject);
                             }
                             return false;
                         }
                     }
                 }
             } else {
                 throw x.syntaxError(&quot;Misshaped tag&quot;);
             }
         }
     }
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYzPII1TEeS-muvgwqy9Mw" name="stringToValue" specification="_NRrTc41TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYzPIY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYzPIo1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>if (&quot;&quot;.equals(string)) {
         return string;
     }
     if (&quot;true&quot;.equalsIgnoreCase(string)) {
         return Boolean.TRUE;
     }
     if (&quot;false&quot;.equalsIgnoreCase(string)) {
         return Boolean.FALSE;
     }
     if (&quot;null&quot;.equalsIgnoreCase(string)) {
         return JSONObject.NULL;
     }
     if (&quot;0&quot;.equals(string)) {
         return new Integer(0);
     }

// If it might be a number, try converting it. If that doesn't work,
// return the string.

     try {
         char initial = string.charAt(0);
         boolean negative = false;
         if (initial == '-') {
             initial = string.charAt(1);
             negative = true;
         }
         if (initial == '0' &amp;&amp; string.charAt(negative ? 2 : 1) == '0') {
             return string;
         }
         if ((initial >= '0' &amp;&amp; initial &lt;= '9')) {
             if (string.indexOf('.') >= 0) {
                 return Double.valueOf(string);
             } else if (string.indexOf('e') &lt; 0 &amp;&amp; string.indexOf('E') &lt; 0) {
                 Long myLong = new Long(string);
                 if (myLong.longValue() == myLong.intValue()) {
                     return new Integer(myLong.intValue());
                 } else {
                     return myLong;
                 }
             }
         }
     }  catch (Exception ignore) {
     }
     return string;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYzPI41TEeS-muvgwqy9Mw" name="toJSONObject" specification="_NRr6gY1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYzPJI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYzPJY1TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
            <language>java</language>
            <body>JSONObject jo = new JSONObject();
     XMLTokener x = new XMLTokener(string);
     while (x.more() &amp;&amp; x.skipPast(&quot;&lt;&quot;)) {
         parse(x, jo, null);
     }
     return jo;
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYzPJo1TEeS-muvgwqy9Mw" name="toString" specification="_NRr6hI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYzPJ41TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYzPKI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return toString(object, null);
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NYzPKY1TEeS-muvgwqy9Mw" name="toString" specification="_NRtIoI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NYzPKo1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NYzPK41TEeS-muvgwqy9Mw" name="tagName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NYzPLI1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>StringBuffer sb = new StringBuffer();
     int          i;
     JSONArray    ja;
     JSONObject   jo;
     String       key;
     Iterator     keys;
     int          length;
     String       string;
     Object       value;
     if (object instanceof JSONObject) {

// Emit &lt;tagName>

         if (tagName != null) {
             sb.append('&lt;');
             sb.append(tagName);
             sb.append('>');
         }

// Loop thru the keys.

         jo = (JSONObject)object;
         keys = jo.keys();
         while (keys.hasNext()) {
             key = keys.next().toString();
             value = jo.opt(key);
             if (value == null) {
                 value = &quot;&quot;;
             }
             if (value instanceof String) {
                 string = (String)value;
             } else {
                 string = null;
             }

// Emit content in body

             if (&quot;content&quot;.equals(key)) {
                 if (value instanceof JSONArray) {
                     ja = (JSONArray)value;
                     length = ja.length();
                     for (i = 0; i &lt; length; i += 1) {
                         if (i > 0) {
                             sb.append('\n');
                         }
                         sb.append(escape(ja.get(i).toString()));
                     }
                 } else {
                     sb.append(escape(value.toString()));
                 }

// Emit an array of similar keys

             } else if (value instanceof JSONArray) {
                 ja = (JSONArray)value;
                 length = ja.length();
                 for (i = 0; i &lt; length; i += 1) {
                     value = ja.get(i);
                     if (value instanceof JSONArray) {
                         sb.append('&lt;');
                         sb.append(key);
                         sb.append('>');
                         sb.append(toString(value));
                         sb.append(&quot;&lt;/&quot;);
                         sb.append(key);
                         sb.append('>');
                     } else {
                         sb.append(toString(value, key));
                     }
                 }
             } else if (&quot;&quot;.equals(value)) {
                 sb.append('&lt;');
                 sb.append(key);
                 sb.append(&quot;/>&quot;);

// Emit a new tag &lt;k>

             } else {
                 sb.append(toString(value, key));
             }
         }
         if (tagName != null) {

// Emit the &lt;/tagname> close tag

             sb.append(&quot;&lt;/&quot;);
             sb.append(tagName);
             sb.append('>');
         }
         return sb.toString();

// XML does not have good support for arrays. If an array appears in a place
// where XML is lacking, synthesize an &lt;array> element.

     } else {
         if (object.getClass().isArray()) {
             object = new JSONArray(object);
         }
         if (object instanceof JSONArray) {
             ja = (JSONArray)object;
             length = ja.length();
             for (i = 0; i &lt; length; i += 1) {
                 sb.append(toString(ja.opt(i), tagName == null ? &quot;array&quot; : tagName));
             }
             return sb.toString();
         } else {
             string = (object == null) ? &quot;null&quot; : escape(object.toString());
             return (tagName == null) ? &quot;\&quot;&quot; + string + &quot;\&quot;&quot; :
                 (string.length() == 0) ? &quot;&lt;&quot; + tagName + &quot;/>&quot; :
                 &quot;&lt;&quot; + tagName + &quot;>&quot; + string + &quot;&lt;/&quot; + tagName + &quot;>&quot;;
         }
     }
 </body>
          </ownedBehavior>
          <ownedOperation xmi:id="_NRqFUI1TEeS-muvgwqy9Mw" name="escape" isStatic="true" method="_NYyoEI1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRqFUY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRqFUo1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRqsYI1TEeS-muvgwqy9Mw" name="noSpace" isStatic="true" method="_NYyoE41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRqsYY1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRqsYo1TEeS-muvgwqy9Mw" name="parse" visibility="private" isStatic="true" method="_NYyoFY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRqsY41TEeS-muvgwqy9Mw" name="x" type="_LwhCsI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NRrTcI1TEeS-muvgwqy9Mw" name="context" type="_LpyvoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NRrTcY1TEeS-muvgwqy9Mw" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRrTco1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRrTc41TEeS-muvgwqy9Mw" name="stringToValue" isStatic="true" method="_NYzPII1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRrTdI1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRr6gI1TEeS-muvgwqy9Mw" type="_Lt6aoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRr6gY1TEeS-muvgwqy9Mw" name="toJSONObject" isStatic="true" method="_NYzPI41TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRr6go1TEeS-muvgwqy9Mw" name="string">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRr6g41TEeS-muvgwqy9Mw" type="_LpyvoI1TEeS-muvgwqy9Mw" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_NRr6hI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_NYzPJo1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRshkI1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NRshkY1TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_NRtIoI1TEeS-muvgwqy9Mw" name="toString" isStatic="true" method="_NYzPKY1TEeS-muvgwqy9Mw" raisedException="_LqsHgo1TEeS-muvgwqy9Mw">
            <ownedParameter xmi:id="_NRtIoY1TEeS-muvgwqy9Mw" name="object" type="_Lt6aoI1TEeS-muvgwqy9Mw"/>
            <ownedParameter xmi:id="_NRtIoo1TEeS-muvgwqy9Mw" name="tagName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_NRtIo41TEeS-muvgwqy9Mw" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZr_8I1TEeS-muvgwqy9Mw" name="" memberEnd="_NZr_8Y1TEeS-muvgwqy9Mw _NXdLUI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZr_8Y1TEeS-muvgwqy9Mw" name="" type="_LqsHgI1TEeS-muvgwqy9Mw" association="_NZr_8I1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZsnAY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZsnAo1TEeS-muvgwqy9Mw _NXfnkY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZsnAo1TEeS-muvgwqy9Mw" name="" type="_LqsHgo1TEeS-muvgwqy9Mw" association="_NZsnAY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZtOEY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZtOEo1TEeS-muvgwqy9Mw _NXkgEY1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZtOEo1TEeS-muvgwqy9Mw" name="" type="_LpyvoI1TEeS-muvgwqy9Mw" association="_NZtOEY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZtOFI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZtOFY1TEeS-muvgwqy9Mw _NXlHI41TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZtOFY1TEeS-muvgwqy9Mw" name="" type="_LpyvoI1TEeS-muvgwqy9Mw" association="_NZtOFI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZt1IY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZt1Io1TEeS-muvgwqy9Mw _NXluM41TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZt1Io1TEeS-muvgwqy9Mw" name="" type="_LpyvoI1TEeS-muvgwqy9Mw" association="_NZt1IY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZucMY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZucMo1TEeS-muvgwqy9Mw _NXpYko1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZucMo1TEeS-muvgwqy9Mw" name="" type="_LwLEcI1TEeS-muvgwqy9Mw" association="_NZucMY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZucNI1TEeS-muvgwqy9Mw" name="" memberEnd="_NZucNY1TEeS-muvgwqy9Mw _NXr00o1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZucNY1TEeS-muvgwqy9Mw" name="" type="_NRKWEI1TEeS-muvgwqy9Mw" association="_NZucNI1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZvDQY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZvDQo1TEeS-muvgwqy9Mw _NXsb441TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZvDQo1TEeS-muvgwqy9Mw" name="" type="_NRKWEI1TEeS-muvgwqy9Mw" association="_NZvDQY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_NZvqUY1TEeS-muvgwqy9Mw" name="" memberEnd="_NZvqUo1TEeS-muvgwqy9Mw _NXxUYI1TEeS-muvgwqy9Mw">
          <ownedEnd xmi:id="_NZvqUo1TEeS-muvgwqy9Mw" name="" type="_LwhCsI1TEeS-muvgwqy9Mw" association="_NZvqUY1TEeS-muvgwqy9Mw"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LL-LMI1TEeS-muvgwqy9Mw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_LL-LMY1TEeS-muvgwqy9Mw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_LL-LMo1TEeS-muvgwqy9Mw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_LqTF8Y1TEeS-muvgwqy9Mw" name="EventListenerList"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_LQKusI1TEeS-muvgwqy9Mw" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_LsSC841TEeS-muvgwqy9Mw" name="BevelBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LsSqAY1TEeS-muvgwqy9Mw" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_LsTREY1TEeS-muvgwqy9Mw" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsJgEY1TEeS-muvgwqy9Mw" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsKuMI1TEeS-muvgwqy9Mw" name="JList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsLVQY1TEeS-muvgwqy9Mw" name="JPanel"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LsL8UY1TEeS-muvgwqy9Mw" name="ListCellRenderer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsQNwI1TEeS-muvgwqy9Mw" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsQNwo1TEeS-muvgwqy9Mw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_LsQ00Y1TEeS-muvgwqy9Mw" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LsRb4Y1TEeS-muvgwqy9Mw" name="ListSelectionModel"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_LsSC8Y1TEeS-muvgwqy9Mw" name="ScrollPaneConstants"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LNlUwI1TEeS-muvgwqy9Mw" name="Map">
      <packagedElement xmi:type="uml:Interface" xmi:id="_Lqvx4Y1TEeS-muvgwqy9Mw" name="Entry"/>
    </packagedElement>
    <profileApplication xmi:id="_KIswUI1TEeS-muvgwqy9Mw">
      <eAnnotations xmi:id="_KIswUY1TEeS-muvgwqy9Mw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_KItXYI1TEeS-muvgwqy9Mw" base_Package="_KH-XkI1TEeS-muvgwqy9Mw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LT9pkI1TEeS-muvgwqy9Mw" base_Element="_LT9CgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LT-QoI1TEeS-muvgwqy9Mw" base_Element="_LT9CgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LT-QoY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUE-UY1TEeS-muvgwqy9Mw" base_Element="_LUE-UI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUFlYI1TEeS-muvgwqy9Mw" base_Element="_LUE-UI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUFlYY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUGMcI1TEeS-muvgwqy9Mw" base_Element="_LUFlYo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUGMcY1TEeS-muvgwqy9Mw" base_Element="_LUFlYo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUGMco1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUHakY1TEeS-muvgwqy9Mw" base_Element="_LUGzgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUHako1TEeS-muvgwqy9Mw" base_Element="_LUGzgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUHak41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUTn0I1TEeS-muvgwqy9Mw" base_Element="_LUTAwo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUUO4I1TEeS-muvgwqy9Mw" base_Element="_LUTAwo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUUO4Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUaVgY1TEeS-muvgwqy9Mw" base_Element="_LUaVgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUa8kI1TEeS-muvgwqy9Mw" base_Element="_LUaVgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUa8kY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUbjoY1TEeS-muvgwqy9Mw" base_Element="_LUa8ko1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUbjoo1TEeS-muvgwqy9Mw" base_Element="_LUa8ko1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUbjo41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUcKsY1TEeS-muvgwqy9Mw" base_Element="_LUcKsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUcxwI1TEeS-muvgwqy9Mw" base_Element="_LUcKsI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUcxwY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUiRUY1TEeS-muvgwqy9Mw" base_Element="_LUhqQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUktkI1TEeS-muvgwqy9Mw" base_Element="_LUhqQI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUktkY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUlUoY1TEeS-muvgwqy9Mw" base_Element="_LUlUoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUl7sI1TEeS-muvgwqy9Mw" base_Element="_LUlUoI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUl7sY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LUmiwI1TEeS-muvgwqy9Mw" base_Element="_LUl7so1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LUmiwY1TEeS-muvgwqy9Mw" base_Element="_LUl7so1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LUmiwo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LVRRIo1TEeS-muvgwqy9Mw" base_Element="_LVQqEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LVR4MY1TEeS-muvgwqy9Mw" base_Element="_LVRRI41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LVUUcI1TEeS-muvgwqy9Mw" genericsValue="Connection, Player" base_Element="_LVTtYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LVodgY1TEeS-muvgwqy9Mw" base_Element="_LVodgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LVpEkI1TEeS-muvgwqy9Mw" base_Element="_LVodgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LVpEkY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LVrg0o1TEeS-muvgwqy9Mw" base_Element="_LVrg0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LVsH4I1TEeS-muvgwqy9Mw" base_Element="_LVrg0I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LVsH4Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LVsH441TEeS-muvgwqy9Mw" base_Element="_LVsH4o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LVsu8I1TEeS-muvgwqy9Mw" base_Element="_LVsH4o1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LVsu8Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LWCGII1TEeS-muvgwqy9Mw" base_Element="_LWBfEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LWCGIY1TEeS-muvgwqy9Mw" base_Element="_LWBfEI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LWCGIo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LWCtMI1TEeS-muvgwqy9Mw" base_Element="_LWCGI41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LWCtMY1TEeS-muvgwqy9Mw" base_Element="_LWCGI41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LWCtMo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LWbuwI1TEeS-muvgwqy9Mw" base_Element="_LWbHsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LWbuwY1TEeS-muvgwqy9Mw" base_Element="_LWbHsI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LWbuwo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LWdj8Y1TEeS-muvgwqy9Mw" base_Element="_LWdj8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LWeLAI1TEeS-muvgwqy9Mw" base_Element="_LWdj8I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LWeLAY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LYMCQI1TEeS-muvgwqy9Mw" base_Element="_LYLbMI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LYMpUI1TEeS-muvgwqy9Mw" base_Element="_LYMCQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LYMpUY1TEeS-muvgwqy9Mw" base_Element="_LYMCQY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LYMpUo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LYSv8I1TEeS-muvgwqy9Mw" base_Element="_LYSI4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LYSv8Y1TEeS-muvgwqy9Mw" base_Element="_LYSI4I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LYSv8o1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LYrKcI1TEeS-muvgwqy9Mw" base_Element="_LYqjYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LYrKcY1TEeS-muvgwqy9Mw" base_Element="_LYqjYY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LYrKco1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_LpueMI1TEeS-muvgwqy9Mw" base_Element="_LpsB8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lp2aAI1TEeS-muvgwqy9Mw" base_Element="_Lp1L4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lp3BEI1TEeS-muvgwqy9Mw" base_Element="_Lp2aAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lp4PMI1TEeS-muvgwqy9Mw" base_Element="_Lp3BEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lp9uwI1TEeS-muvgwqy9Mw" base_Element="_Lp75kI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lp_j8I1TEeS-muvgwqy9Mw" base_Element="_Lp-V0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqAyEI1TEeS-muvgwqy9Mw" base_Element="_Lp_j8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqCAMI1TEeS-muvgwqy9Mw" base_Element="_LqAyEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqDOUI1TEeS-muvgwqy9Mw" base_Element="_LqCAMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqEccI1TEeS-muvgwqy9Mw" base_Element="_LqDOUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqGRoI1TEeS-muvgwqy9Mw" base_Element="_LqFDgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqHfwI1TEeS-muvgwqy9Mw" base_Element="_LqGRoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqTF8I1TEeS-muvgwqy9Mw" base_Element="_LqSe4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqTtAI1TEeS-muvgwqy9Mw" base_Element="_LqTF8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lqbo0I1TEeS-muvgwqy9Mw" base_Element="_LqbBwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqcP4I1TEeS-muvgwqy9Mw" base_Element="_Lqbo0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqhvcI1TEeS-muvgwqy9Mw" base_Element="_LqghUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqodIY1TEeS-muvgwqy9Mw" base_Element="_LqodII1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqpEMI1TEeS-muvgwqy9Mw" base_Element="_LqodIo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqprQI1TEeS-muvgwqy9Mw" base_Element="_LqpEMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqqSUI1TEeS-muvgwqy9Mw" base_Element="_LqprQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqqSUo1TEeS-muvgwqy9Mw" base_Element="_LqqSUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lqq5YY1TEeS-muvgwqy9Mw" base_Element="_Lqq5YI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqrgcI1TEeS-muvgwqy9Mw" base_Element="_Lqq5Yo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LqxAAI1TEeS-muvgwqy9Mw" base_Element="_Lqvx4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrAQkI1TEeS-muvgwqy9Mw" base_Element="_Lq_pgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrAQko1TEeS-muvgwqy9Mw" base_Element="_LrAQkY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrBesI1TEeS-muvgwqy9Mw" base_Element="_LrA3oI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrbHUI1TEeS-muvgwqy9Mw" base_Element="_LragQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrcVcY1TEeS-muvgwqy9Mw" base_Element="_LrcVcI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LreKoI1TEeS-muvgwqy9Mw" base_Element="_LrdjkI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrexsI1TEeS-muvgwqy9Mw" base_Element="_LreKoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrjqMI1TEeS-muvgwqy9Mw" base_Element="_LrjDII1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrjqMo1TEeS-muvgwqy9Mw" base_Element="_LrjqMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrkRQY1TEeS-muvgwqy9Mw" base_Element="_LrkRQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lrk4UI1TEeS-muvgwqy9Mw" base_Element="_LrkRQo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrlfYI1TEeS-muvgwqy9Mw" base_Element="_Lrk4UY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrmGcI1TEeS-muvgwqy9Mw" base_Element="_LrlfYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrmGco1TEeS-muvgwqy9Mw" base_Element="_LrmGcY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LrpJwI1TEeS-muvgwqy9Mw" base_Element="_LroisI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_LrpJw41TEeS-muvgwqy9Mw" base_Element="_Lroiso1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lrv3cI1TEeS-muvgwqy9Mw" base_Element="_LrvQYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrwegI1TEeS-muvgwqy9Mw" base_Element="_Lrv3cY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LrxFkI1TEeS-muvgwqy9Mw" base_Element="_LrwegY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsHD0I1TEeS-muvgwqy9Mw" base_Element="_LsGcwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsIR8I1TEeS-muvgwqy9Mw" base_Element="_LsHq4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsJgEI1TEeS-muvgwqy9Mw" base_Element="_LsI5AI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsKHII1TEeS-muvgwqy9Mw" base_Element="_LsJgEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsLVQI1TEeS-muvgwqy9Mw" base_Element="_LsKuMI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsL8UI1TEeS-muvgwqy9Mw" base_Element="_LsLVQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsMjYI1TEeS-muvgwqy9Mw" base_Element="_LsL8UY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsPmsY1TEeS-muvgwqy9Mw" base_Element="_LsPmsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsQNwY1TEeS-muvgwqy9Mw" base_Element="_LsQNwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsQ00I1TEeS-muvgwqy9Mw" base_Element="_LsQNwo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsRb4I1TEeS-muvgwqy9Mw" base_Element="_LsQ00Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsSC8I1TEeS-muvgwqy9Mw" base_Element="_LsRb4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsSC8o1TEeS-muvgwqy9Mw" base_Element="_LsSC8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsSqAI1TEeS-muvgwqy9Mw" base_Element="_LsSC841TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsTREI1TEeS-muvgwqy9Mw" base_Element="_LsSqAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsTREo1TEeS-muvgwqy9Mw" base_Element="_LsTREY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsW7cI1TEeS-muvgwqy9Mw" base_Element="_LsWUYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsXigY1TEeS-muvgwqy9Mw" base_Element="_LsXigI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsYwoI1TEeS-muvgwqy9Mw" base_Element="_LsYJkI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LsZXsI1TEeS-muvgwqy9Mw" base_Element="_LsYwoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lsh6kI1TEeS-muvgwqy9Mw" base_Element="_LshTgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lsh6kY1TEeS-muvgwqy9Mw" base_Element="_LshTgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lsh6ko1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lsjvw41TEeS-muvgwqy9Mw" base_Element="_LsjvwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LskW0I1TEeS-muvgwqy9Mw" base_Element="_LsjvwI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LskW0Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lsk94I1TEeS-muvgwqy9Mw" base_Element="_LskW0o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lsk94Y1TEeS-muvgwqy9Mw" base_Element="_LskW0o1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lsk94o1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lslk8o1TEeS-muvgwqy9Mw" base_Element="_Lslk8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lslk841TEeS-muvgwqy9Mw" base_Element="_Lslk8I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lslk9I1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LsmMA41TEeS-muvgwqy9Mw" base_Element="_LsmMAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LsmzEI1TEeS-muvgwqy9Mw" base_Element="_LsmMAI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LsmzEY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LsnaII1TEeS-muvgwqy9Mw" base_Element="_LsmzEo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LsnaIY1TEeS-muvgwqy9Mw" base_Element="_LsmzEo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LsnaIo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LsqdcY1TEeS-muvgwqy9Mw" base_Element="_Lsp2Y41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lsqdco1TEeS-muvgwqy9Mw" base_Element="_Lsp2Y41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lsqdc41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LsrrkI1TEeS-muvgwqy9Mw" base_Element="_LsrEgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LsrrkY1TEeS-muvgwqy9Mw" base_Element="_LsrEgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LssSoI1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lss5sI1TEeS-muvgwqy9Mw" base_Element="_LssSoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LstgwI1TEeS-muvgwqy9Mw" base_Element="_LssSoY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LstgwY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LsuH0I1TEeS-muvgwqy9Mw" base_Element="_Lstgwo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LsuH0Y1TEeS-muvgwqy9Mw" base_Element="_Lstgwo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lsuu4I1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_LsxyMI1TEeS-muvgwqy9Mw" base_Element="_LsxLII1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ls340I1TEeS-muvgwqy9Mw" base_Element="_Ls2qsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ls4f4I1TEeS-muvgwqy9Mw" base_Element="_Ls340Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ls5G8I1TEeS-muvgwqy9Mw" base_Element="_Ls4f4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ls5G8o1TEeS-muvgwqy9Mw" base_Element="_Ls5G8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ls5uAI1TEeS-muvgwqy9Mw" base_Element="_Ls5G841TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Ltzs8I1TEeS-muvgwqy9Mw" base_Element="_LtzF4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lt7BsI1TEeS-muvgwqy9Mw" base_Element="_Lt6aoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lt7owI1TEeS-muvgwqy9Mw" base_Element="_Lt7BsY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lt7owY1TEeS-muvgwqy9Mw" base_Element="_Lt7BsY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lt7owo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_LuJrMI1TEeS-muvgwqy9Mw" genericsValue="Player" base_Element="_LuJEIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LuiswI1TEeS-muvgwqy9Mw" base_Element="_LuiFsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LuiswY1TEeS-muvgwqy9Mw" base_Element="_LuiFsI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Luiswo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Lukh841TEeS-muvgwqy9Mw" base_Element="_Luj64I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LulJAI1TEeS-muvgwqy9Mw" genericsValue="TrackTile" base_Element="_Lukh8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LunlQI1TEeS-muvgwqy9Mw" genericsValue="TrackTile" base_Element="_Lum-Mo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LutE0I1TEeS-muvgwqy9Mw" genericsValue="String" base_Element="_LusdwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LuuS8I1TEeS-muvgwqy9Mw" genericsValue="Player" base_Element="_Lutr4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lu7uUI1TEeS-muvgwqy9Mw" genericsValue="Map.Entry&lt;Connection, Player>" base_Element="_Lu7HQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lu9jgI1TEeS-muvgwqy9Mw" base_Element="_Lu8VYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lu9jgY1TEeS-muvgwqy9Mw" genericsValue="? extends Entry&lt;Connection, Player>" base_Element="_Lu88cI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lu-xoI1TEeS-muvgwqy9Mw" genericsValue="Connection, Player" base_Element="_Lu88cY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_Lu-xoY1TEeS-muvgwqy9Mw" base_Element="_Lu8VYI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_Lu-xoo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvDqII1TEeS-muvgwqy9Mw" base_Element="_LvDDEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvDqIY1TEeS-muvgwqy9Mw" base_Element="_LvDDEI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvDqIo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvERMo1TEeS-muvgwqy9Mw" base_Element="_LvERMI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvE4QI1TEeS-muvgwqy9Mw" base_Element="_LvERMI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvE4QY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvGGYI1TEeS-muvgwqy9Mw" base_Element="_LvFfUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvGGYY1TEeS-muvgwqy9Mw" base_Element="_LvFfUI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvGGYo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvGtco1TEeS-muvgwqy9Mw" base_Element="_LvGtcI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvGtc41TEeS-muvgwqy9Mw" base_Element="_LvGtcI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvGtdI1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvH7kI1TEeS-muvgwqy9Mw" base_Element="_LvHUgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvH7kY1TEeS-muvgwqy9Mw" base_Element="_LvHUgI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvH7ko1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvJJsI1TEeS-muvgwqy9Mw" base_Element="_LvIioI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvJJsY1TEeS-muvgwqy9Mw" base_Element="_LvIioI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvJJso1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvJwwo1TEeS-muvgwqy9Mw" base_Element="_LvJwwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvKX0I1TEeS-muvgwqy9Mw" base_Element="_LvJwwI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvKX0Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvK-4I1TEeS-muvgwqy9Mw" base_Element="_LvKX0o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LvK-4Y1TEeS-muvgwqy9Mw" base_Element="_LvKX0o1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LvK-4o1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Lvu_kI1TEeS-muvgwqy9Mw" base_Element="_LvuYgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Lvvmoo1TEeS-muvgwqy9Mw" typeParameterDeclarationValue="T" base_Operation="_LvvmoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LvvmpI1TEeS-muvgwqy9Mw" base_Element="_LvvmoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LvwNsI1TEeS-muvgwqy9Mw" genericsValue="T" base_Element="_LvvmoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Lvw0w41TEeS-muvgwqy9Mw" typeParameterDeclarationValue="T" base_Operation="_Lvw0wI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lvxb0Y1TEeS-muvgwqy9Mw" base_Element="_Lvw0wI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lvxb0o1TEeS-muvgwqy9Mw" genericsValue="T" base_Element="_Lvw0wY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lvyp8I1TEeS-muvgwqy9Mw" genericsValue="T" base_Element="_Lvw0wo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_Lvz4Eo1TEeS-muvgwqy9Mw" typeParameterDeclarationValue="T" base_Operation="_LvzRAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lv0fII1TEeS-muvgwqy9Mw" base_Element="_LvzRAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lv1GMI1TEeS-muvgwqy9Mw" genericsValue="T" base_Element="_Lvz4EI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lv1GMY1TEeS-muvgwqy9Mw" genericsValue="T" base_Element="_Lvz4EY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lv3icI1TEeS-muvgwqy9Mw" genericsValue="Side" base_Element="_Lv2UUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lv7M0I1TEeS-muvgwqy9Mw" genericsValue="Point2D" base_Element="_Lv5XoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lv9pEI1TEeS-muvgwqy9Mw" genericsValue="Side" base_Element="_Lv9CAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LwP88Y1TEeS-muvgwqy9Mw" base_Element="_LwPV4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LwQkAI1TEeS-muvgwqy9Mw" base_Element="_LwPV4I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LwQkAY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_LwQkAo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LzF1ko1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LwUOYI1TEeS-muvgwqy9Mw" base_Element="_LwTnUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LwUOYY1TEeS-muvgwqy9Mw" base_Element="_LwTnUI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LwUOYo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_LwU1cI1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LzGcoY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LwnJU41TEeS-muvgwqy9Mw" base_Element="_LwnJUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LwnwYI1TEeS-muvgwqy9Mw" base_Element="_LwnJUI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LwnwYY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_LwnwYo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LzHDsY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lwo-gY1TEeS-muvgwqy9Mw" base_Element="_LwoXcI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_LwplkI1TEeS-muvgwqy9Mw" base_Element="_LwoXcI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_LwplkY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_Lwplko1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_LzHDso1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw0ksY1TEeS-muvgwqy9Mw" base_Element="_Lw0ksI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw1LwY1TEeS-muvgwqy9Mw" base_Element="_Lw1LwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw1y0Y1TEeS-muvgwqy9Mw" base_Element="_Lw1y0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw2Z4Y1TEeS-muvgwqy9Mw" base_Element="_Lw2Z4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw3A8I1TEeS-muvgwqy9Mw" base_Element="_Lw2Z4o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw3A8o1TEeS-muvgwqy9Mw" base_Element="_Lw3A8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw3oAY1TEeS-muvgwqy9Mw" base_Element="_Lw3oAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lw42II1TEeS-muvgwqy9Mw" genericsValue="String" base_Element="_Lw3oAo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw42IY1TEeS-muvgwqy9Mw" base_Element="_Lw3oAo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lw5dMI1TEeS-muvgwqy9Mw" genericsValue="String" base_Element="_Lw42Io1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw6EQI1TEeS-muvgwqy9Mw" base_Element="_Lw42Io1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw6rUI1TEeS-muvgwqy9Mw" base_Element="_Lw6EQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw7SYY1TEeS-muvgwqy9Mw" base_Element="_Lw6rUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lw9HkI1TEeS-muvgwqy9Mw" base_Element="_Lw8ggY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxBZAI1TEeS-muvgwqy9Mw" base_Element="_LxAx841TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxD1QI1TEeS-muvgwqy9Mw" genericsValue="String, Number" base_Element="_LxDOMo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxFDYI1TEeS-muvgwqy9Mw" genericsValue="Connection" base_Element="_LxD1Qo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxFDYY1TEeS-muvgwqy9Mw" base_Element="_LxD1Qo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxFqcY1TEeS-muvgwqy9Mw" base_Element="_LxFqcI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxGRgY1TEeS-muvgwqy9Mw" base_Element="_LxGRgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxG4kI1TEeS-muvgwqy9Mw" base_Element="_LxGRgo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxItwI1TEeS-muvgwqy9Mw" genericsValue="Connection, Player" base_Element="_LxG4kY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxItwY1TEeS-muvgwqy9Mw" base_Element="_LxG4kY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxJ74I1TEeS-muvgwqy9Mw" genericsValue="Player" base_Element="_LxJU0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxJ74Y1TEeS-muvgwqy9Mw" base_Element="_LxJU0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxKi8Y1TEeS-muvgwqy9Mw" base_Element="_LxKi8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxSewY1TEeS-muvgwqy9Mw" base_Element="_LxSewI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxTF0Y1TEeS-muvgwqy9Mw" base_Element="_LxTF0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxTs4Y1TEeS-muvgwqy9Mw" base_Element="_LxTs4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxUT8Y1TEeS-muvgwqy9Mw" base_Element="_LxUT8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxX-UI1TEeS-muvgwqy9Mw" base_Element="_LxXXQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxaakI1TEeS-muvgwqy9Mw" base_Element="_LxZzgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxbBoI1TEeS-muvgwqy9Mw" base_Element="_LxaakY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxeE8I1TEeS-muvgwqy9Mw" base_Element="_Lxdd4Y1TEeS-muvgwqy9Mw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_LxeE8Y1TEeS-muvgwqy9Mw" name="getLocation" method="_LycVU41TEeS-muvgwqy9Mw">
      <ownedParameter xmi:id="_LxesAI1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lxf6IY1TEeS-muvgwqy9Mw" base_Element="_LxfTEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxghMY1TEeS-muvgwqy9Mw" base_Element="_LxghMI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxhvUY1TEeS-muvgwqy9Mw" base_Element="_LxhvUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_LxiWYo1TEeS-muvgwqy9Mw" base_Element="_LxiWYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lxi9cI1TEeS-muvgwqy9Mw" base_Element="_LxiWYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxjkgI1TEeS-muvgwqy9Mw" base_Element="_Lxi9cY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lxmn0Y1TEeS-muvgwqy9Mw" base_Element="_Lxmn0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxnO4Y1TEeS-muvgwqy9Mw" base_Element="_LxnO4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxodAI1TEeS-muvgwqy9Mw" base_Element="_Lxn18I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxpEEI1TEeS-muvgwqy9Mw" base_Element="_LxodAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxqSMI1TEeS-muvgwqy9Mw" base_Element="_LxprIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxqSMo1TEeS-muvgwqy9Mw" base_Element="_LxqSMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxrgUI1TEeS-muvgwqy9Mw" genericsValue="QueuedAction" base_Element="_Lxq5QI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxrgUY1TEeS-muvgwqy9Mw" base_Element="_Lxq5QI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxsHY41TEeS-muvgwqy9Mw" base_Element="_LxsHYo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxsucY1TEeS-muvgwqy9Mw" base_Element="_LxsucI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxtVhI1TEeS-muvgwqy9Mw" base_Element="_LxtVgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_LxujoI1TEeS-muvgwqy9Mw" genericsValue="GameObject" base_Element="_Lxt8kI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_LxujoY1TEeS-muvgwqy9Mw" base_Element="_Lxt8kI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lxy1EY1TEeS-muvgwqy9Mw" base_Element="_Lxy1EI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Generics xmi:id="_Lx0DMI1TEeS-muvgwqy9Mw" genericsValue="Map.Entry&lt;Connection, Player>" base_Element="_LxzcIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lx14YI1TEeS-muvgwqy9Mw" base_Element="_Lx1RUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lx3tkI1TEeS-muvgwqy9Mw" base_Element="_Lx3GgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Lx7X8o1TEeS-muvgwqy9Mw" base_Element="_Lx7X8Y1TEeS-muvgwqy9Mw"/>
  <uml:OpaqueBehavior xmi:id="_LyBekI1TEeS-muvgwqy9Mw" name="CarType" specification="_LTzRgI1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyCFoI1TEeS-muvgwqy9Mw" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_LyCFoY1TEeS-muvgwqy9Mw" type="_LTw1QI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>this.name = name;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyCFoo1TEeS-muvgwqy9Mw" name="getFromString" specification="_LT0foI1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyCssI1TEeS-muvgwqy9Mw" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_LyCssY1TEeS-muvgwqy9Mw" type="_LTw1QI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>CarType[] val = CarType.values();
		for (CarType type : val) {
			if (type.getName().equals(name)) {
				return type;
			}
		}
		return null;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyCsso1TEeS-muvgwqy9Mw" name="opposite" specification="_LT4xEY1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyCss41TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>switch (this) {
		case LEFT:
			return RIGHT;
		case RIGHT:
			return LEFT;
		case UP:
			return DOWN;
		case DOWN:
			return UP;
		default:
			return null;
		}
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyDTwI1TEeS-muvgwqy9Mw" name="clockwise" specification="_LT4xEo1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyDTwY1TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>switch (this) {
		case LEFT:
			return UP;
		case UP:
			return RIGHT;
		case RIGHT:
			return DOWN;
		case DOWN:
			return LEFT;
		default:
			return null;
		}
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyDTwo1TEeS-muvgwqy9Mw" name="cclockwise" specification="_LT5YII1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyDTw41TEeS-muvgwqy9Mw" type="_LT4KAI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>switch (this) {
		case LEFT:
			return DOWN;
		case DOWN:
			return RIGHT;
		case RIGHT:
			return UP;
		case UP:
			return LEFT;
		default:
			return null;
		}
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyDTxI1TEeS-muvgwqy9Mw" name="getAngle" specification="_LT5_MI1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyDTxY1TEeS-muvgwqy9Mw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>switch (this) {
		case LEFT:
			return Math.PI;
		case UP:
			return 1.5 * Math.PI;
		case DOWN:
			return 0.5 * Math.PI;
		default:
			return 0;
		}
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyLPkI1TEeS-muvgwqy9Mw" name="RaceCharacter" specification="_LVM_sI1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyLPkY1TEeS-muvgwqy9Mw" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_LyLPko1TEeS-muvgwqy9Mw" type="_LVJVUI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>this.name = name;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LyLPk41TEeS-muvgwqy9Mw" name="getFromName" specification="_LVNmwY1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LyLPlI1TEeS-muvgwqy9Mw" name="name">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <ownedParameter xmi:id="_LyLPlY1TEeS-muvgwqy9Mw" type="_LVJVUI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>RaceCharacter[] val = RaceCharacter.values();
		for (RaceCharacter ch : val) {
			if (ch.getName().equals(name)) {
				return ch;
			}
		}
		return null;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_LycVU41TEeS-muvgwqy9Mw" name="getLocation" specification="_LxeE8Y1TEeS-muvgwqy9Mw">
    <ownedParameter xmi:id="_LycVVI1TEeS-muvgwqy9Mw" type="_Lq_pgI1TEeS-muvgwqy9Mw" direction="return"/>
    <language>java</language>
    <body>return new Point(location);
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_LzW7UI1TEeS-muvgwqy9Mw" base_Element="_LzWUQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzXiYI1TEeS-muvgwqy9Mw" base_Element="_LzW7UY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzYwgI1TEeS-muvgwqy9Mw" base_Element="_LzYJcI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzZXkI1TEeS-muvgwqy9Mw" base_Element="_LzYwgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzalsI1TEeS-muvgwqy9Mw" base_Element="_LzZ-oI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzbMwI1TEeS-muvgwqy9Mw" base_Element="_LzalsY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzbz0I1TEeS-muvgwqy9Mw" base_Element="_LzbMwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzca4I1TEeS-muvgwqy9Mw" base_Element="_Lzbz0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzdpAI1TEeS-muvgwqy9Mw" base_Element="_LzdB8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzeQEI1TEeS-muvgwqy9Mw" base_Element="_LzdpAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lze3II1TEeS-muvgwqy9Mw" base_Element="_LzeQEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzgFQI1TEeS-muvgwqy9Mw" base_Element="_Lze3IY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzgsUI1TEeS-muvgwqy9Mw" base_Element="_LzgFQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzhTYI1TEeS-muvgwqy9Mw" base_Element="_LzgsUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzh6cI1TEeS-muvgwqy9Mw" base_Element="_LzhTYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzjIkI1TEeS-muvgwqy9Mw" base_Element="_LzihgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzjvoI1TEeS-muvgwqy9Mw" base_Element="_LzjIkY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzkWsI1TEeS-muvgwqy9Mw" base_Element="_LzjvoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzlk0I1TEeS-muvgwqy9Mw" base_Element="_LzkWsY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzlk041TEeS-muvgwqy9Mw" base_Element="_Lzlk0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzmL4I1TEeS-muvgwqy9Mw" base_Element="_Lzlk1I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzmy8I1TEeS-muvgwqy9Mw" base_Element="_LzmL4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LznaAI1TEeS-muvgwqy9Mw" base_Element="_Lzmy8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LznaA41TEeS-muvgwqy9Mw" base_Element="_LznaAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzoBEo1TEeS-muvgwqy9Mw" base_Element="_LzoBEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzooII1TEeS-muvgwqy9Mw" base_Element="_LzoBE41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzpPMI1TEeS-muvgwqy9Mw" base_Element="_LzooIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzp2QI1TEeS-muvgwqy9Mw" base_Element="_LzpPMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzqdUI1TEeS-muvgwqy9Mw" base_Element="_Lzp2QY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzrEYI1TEeS-muvgwqy9Mw" base_Element="_LzqdUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzsSgI1TEeS-muvgwqy9Mw" base_Element="_LzrEYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzs5kI1TEeS-muvgwqy9Mw" base_Element="_LzsSgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LztgoY1TEeS-muvgwqy9Mw" base_Element="_Lzs5kY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzuuwI1TEeS-muvgwqy9Mw" base_Element="_LzuHsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzvV0I1TEeS-muvgwqy9Mw" base_Element="_LzuuwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzvV041TEeS-muvgwqy9Mw" base_Element="_LzvV0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzv84o1TEeS-muvgwqy9Mw" base_Element="_Lzv84I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lzwj8I1TEeS-muvgwqy9Mw" base_Element="_Lzv8441TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzxyEI1TEeS-muvgwqy9Mw" base_Element="_Lzwj8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzxyE41TEeS-muvgwqy9Mw" base_Element="_LzxyEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzyZII1TEeS-muvgwqy9Mw" base_Element="_LzxyFI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzzAMI1TEeS-muvgwqy9Mw" base_Element="_LzyZIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_LzznQo1TEeS-muvgwqy9Mw" base_Element="_LzznQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz01YI1TEeS-muvgwqy9Mw" base_Element="_Lz0OUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz01Y41TEeS-muvgwqy9Mw" base_Element="_Lz01YY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz2DgI1TEeS-muvgwqy9Mw" base_Element="_Lz01ZI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz2qkI1TEeS-muvgwqy9Mw" base_Element="_Lz2DgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz3RoI1TEeS-muvgwqy9Mw" base_Element="_Lz2qkY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz3Ro41TEeS-muvgwqy9Mw" base_Element="_Lz3RoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz34sI1TEeS-muvgwqy9Mw" base_Element="_Lz3RpI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz4fwI1TEeS-muvgwqy9Mw" base_Element="_Lz34sY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz5t4I1TEeS-muvgwqy9Mw" base_Element="_Lz5G0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz6U8I1TEeS-muvgwqy9Mw" base_Element="_Lz5t4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz68AI1TEeS-muvgwqy9Mw" base_Element="_Lz6U8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz7jEI1TEeS-muvgwqy9Mw" base_Element="_Lz68AY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz8KII1TEeS-muvgwqy9Mw" base_Element="_Lz7jEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz8xMI1TEeS-muvgwqy9Mw" base_Element="_Lz8KIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz9_UI1TEeS-muvgwqy9Mw" base_Element="_Lz8xMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz-mYI1TEeS-muvgwqy9Mw" base_Element="_Lz9_UY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_Lz_0gI1TEeS-muvgwqy9Mw" base_Element="_Lz-mYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_L0BpsI1TEeS-muvgwqy9Mw" base_Element="_L0BCoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_L0C30I1TEeS-muvgwqy9Mw" base_Element="_L0CQwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_L0De4I1TEeS-muvgwqy9Mw" base_Element="_L0C30Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NMlYEI1TEeS-muvgwqy9Mw" base_Element="_NMkxAI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMlYEY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOs38Y1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOF4I1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NMl_I41TEeS-muvgwqy9Mw" base_Element="_NMlYEo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMl_JI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOs3841TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOF4Y1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NMmmM41TEeS-muvgwqy9Mw" base_Element="_NMl_JY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMmmNI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOtfAY1TEeS-muvgwqy9Mw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOF4o1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOF441TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NMpCcI1TEeS-muvgwqy9Mw" base_Element="_NMn0UI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMpCcY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOvUMI1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOs8I1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NMqQkI1TEeS-muvgwqy9Mw" base_Element="_NMpCco1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMqQkY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOvUMo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOs8Y1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NMresI1TEeS-muvgwqy9Mw" base_Element="_NMqQko1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NMresY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NOvUNI1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOs8o1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNA14o1TEeS-muvgwqy9Mw" base_Element="_NNA14Y1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNA1441TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNUX4I1TEeS-muvgwqy9Mw" base_Element="_NNTw0I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNUX4Y1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NO99sI1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZP7FI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNU-9o1TEeS-muvgwqy9Mw" base_Element="_NNU-8Y1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNVmAI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NO99so1TEeS-muvgwqy9Mw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZP7FY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZP7Fo1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_NNW0II1TEeS-muvgwqy9Mw" base_Element="_NNWNEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NNW0IY1TEeS-muvgwqy9Mw" base_Element="_NNWNEI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNW0Io1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NO_L0Y1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZQiIo1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_NNXbMo1TEeS-muvgwqy9Mw" base_Element="_NNW0I41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NNXbM41TEeS-muvgwqy9Mw" base_Element="_NNW0I41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNXbNI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NO_y4I1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZQiI41TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNYCQo1TEeS-muvgwqy9Mw" base_Element="_NNYCQI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNYCQ41TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NO_y4o1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJMI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNYpUY1TEeS-muvgwqy9Mw" base_Element="_NNYCRI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNYpUo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPAZ8Y1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJMY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNZQYI1TEeS-muvgwqy9Mw" base_Element="_NNYpVI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNZQYY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPAZ841TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJMo1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNZ3co1TEeS-muvgwqy9Mw" base_Element="_NNZ3cI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNZ3c41TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPBoEY1TEeS-muvgwqy9Mw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJM41TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJNI1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNbso41TEeS-muvgwqy9Mw" base_Element="_NNbsoY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNcTsI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPC2MY1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwQ41TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_NNc6wI1TEeS-muvgwqy9Mw" base_Element="_NNcTsY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NNc6wY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPDdQY1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwRI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NN4_oI1TEeS-muvgwqy9Mw" base_Element="_LwhCsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NN600I1TEeS-muvgwqy9Mw" base_Element="_LwhCsI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NN600Y1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NPQRkI1TEeS-muvgwqy9Mw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZVaoY1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZWowI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOs38I1TEeS-muvgwqy9Mw" base_Element="_NMkxAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOs38o1TEeS-muvgwqy9Mw" base_Element="_NMlYEo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOtfAI1TEeS-muvgwqy9Mw" base_Element="_NMl_JY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOutII1TEeS-muvgwqy9Mw" base_Element="_NMn0UI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOvUMY1TEeS-muvgwqy9Mw" base_Element="_NMpCco1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NOvUM41TEeS-muvgwqy9Mw" base_Element="_NMqQko1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO2B4I1TEeS-muvgwqy9Mw" base_Element="_NM9ykI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO33EI1TEeS-muvgwqy9Mw" base_Element="_NNA14Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO9WoI1TEeS-muvgwqy9Mw" base_Element="_NNTw0I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO99sY1TEeS-muvgwqy9Mw" base_Element="_NNU-8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO_L0I1TEeS-muvgwqy9Mw" base_Element="_NNWNEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO_L0o1TEeS-muvgwqy9Mw" base_Element="_NNW0I41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NO_y4Y1TEeS-muvgwqy9Mw" base_Element="_NNYCQI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPAZ8I1TEeS-muvgwqy9Mw" base_Element="_NNYCRI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPAZ8o1TEeS-muvgwqy9Mw" base_Element="_NNYpVI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPBoEI1TEeS-muvgwqy9Mw" base_Element="_NNZ3cI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPC2MI1TEeS-muvgwqy9Mw" base_Element="_NNbsoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NPDdQI1TEeS-muvgwqy9Mw" base_Element="_NNcTsY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NPQRkY1TEeS-muvgwqy9Mw" base_Element="_NN7b441TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NPQ4oI1TEeS-muvgwqy9Mw" base_Element="_NN7b5I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NPQ4oY1TEeS-muvgwqy9Mw" base_Element="_NN8C8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NPQ4oo1TEeS-muvgwqy9Mw" base_Element="_NN8C841TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NP-DQI1TEeS-muvgwqy9Mw" base_Element="_NP9cMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NP-DQY1TEeS-muvgwqy9Mw" base_Element="_NP9cMY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NP-DQo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NP-DQ41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZOs841TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQAfgo1TEeS-muvgwqy9Mw" base_Element="_NP_4dI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQBGkI1TEeS-muvgwqy9Mw" base_Element="_NP_4dI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQBGkY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQBGko1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZPUAI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQBtoo1TEeS-muvgwqy9Mw" base_Element="_NQBGk41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQCUsI1TEeS-muvgwqy9Mw" base_Element="_NQBGk41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQCUsY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQCUso1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZPUAY1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQMswY1TEeS-muvgwqy9Mw" base_Element="_NQMFtI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQMswo1TEeS-muvgwqy9Mw" base_Element="_NQMFtI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQMsw41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQNT0Y1TEeS-muvgwqy9Mw" base_Element="_NQMsxI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQN64I1TEeS-muvgwqy9Mw" base_Element="_NQMsxI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQN64Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQOh8I1TEeS-muvgwqy9Mw" base_Element="_NQN64o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQOh8Y1TEeS-muvgwqy9Mw" base_Element="_NQN64o1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQOh8o1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQPJAI1TEeS-muvgwqy9Mw" base_Element="_NQOh841TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQPJAY1TEeS-muvgwqy9Mw" base_Element="_NQOh841TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQPJAo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQPwEI1TEeS-muvgwqy9Mw" base_Element="_NQPJA41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQPwEY1TEeS-muvgwqy9Mw" base_Element="_NQPJA41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQPwEo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQQXII1TEeS-muvgwqy9Mw" base_Element="_NQPwE41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQQXIY1TEeS-muvgwqy9Mw" base_Element="_NQPwE41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQQXIo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQQ-MI1TEeS-muvgwqy9Mw" base_Element="_NQQXI41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQQ-MY1TEeS-muvgwqy9Mw" base_Element="_NQQXI41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQQ-Mo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQRlQY1TEeS-muvgwqy9Mw" base_Element="_NQQ-M41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQRlQo1TEeS-muvgwqy9Mw" base_Element="_NQQ-M41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQRlQ41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQSMU41TEeS-muvgwqy9Mw" base_Element="_NQSMUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQSzYI1TEeS-muvgwqy9Mw" base_Element="_NQSMUI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQSzYY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQSzZY1TEeS-muvgwqy9Mw" base_Element="_NQSzYo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQTacI1TEeS-muvgwqy9Mw" base_Element="_NQSzYo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQTacY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQXE0I1TEeS-muvgwqy9Mw" base_Element="_NQWdw41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQXE0Y1TEeS-muvgwqy9Mw" base_Element="_NQWdw41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQXE0o1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQXr4Y1TEeS-muvgwqy9Mw" base_Element="_NQXE041TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQYS8I1TEeS-muvgwqy9Mw" base_Element="_NQXE041TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQYS8Y1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQY6AI1TEeS-muvgwqy9Mw" base_Element="_NQYS8o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQY6AY1TEeS-muvgwqy9Mw" base_Element="_NQYS8o1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQY6Ao1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQZhEI1TEeS-muvgwqy9Mw" base_Element="_NQY6A41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQZhEY1TEeS-muvgwqy9Mw" base_Element="_NQY6A41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQZhEo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQaIIo1TEeS-muvgwqy9Mw" base_Element="_NQaIII1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQavMI1TEeS-muvgwqy9Mw" base_Element="_NQaIII1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQavMY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQbWQI1TEeS-muvgwqy9Mw" base_Element="_NQavMo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQbWQY1TEeS-muvgwqy9Mw" base_Element="_NQavMo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQbWQo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQbWRY1TEeS-muvgwqy9Mw" base_Element="_NQbWQ41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQb9UI1TEeS-muvgwqy9Mw" base_Element="_NQbWQ41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQb9UY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQckYI1TEeS-muvgwqy9Mw" base_Element="_NQb9Uo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQckYY1TEeS-muvgwqy9Mw" base_Element="_NQb9Uo1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQckYo1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQdLcY1TEeS-muvgwqy9Mw" base_Element="_NQckY41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQdLco1TEeS-muvgwqy9Mw" base_Element="_NQckY41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQdLc41TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQdygY1TEeS-muvgwqy9Mw" base_Element="_NQdLdI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQeZkI1TEeS-muvgwqy9Mw" base_Element="_NQdLdI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQeZkY1TEeS-muvgwqy9Mw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQkgNY1TEeS-muvgwqy9Mw" base_Element="_NQj5JI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NQlHQI1TEeS-muvgwqy9Mw" base_Element="_NQkgMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQlHQY1TEeS-muvgwqy9Mw" base_Element="_NQj5JI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQlHQo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQlHQ41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZQiII1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQ1l8I1TEeS-muvgwqy9Mw" base_Element="_NQ0-4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQ1l8Y1TEeS-muvgwqy9Mw" base_Element="_NQ0-4Y1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQ1l8o1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQ1l841TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRJNY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQ4CMo1TEeS-muvgwqy9Mw" base_Element="_NQ3bJI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQ4pQI1TEeS-muvgwqy9Mw" base_Element="_NQ3bJI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQ4pQY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQ4pQo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwQI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQ5QUY1TEeS-muvgwqy9Mw" base_Element="_NQ4pQ41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NQ5QUo1TEeS-muvgwqy9Mw" base_Element="_NQ4pQ41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NQ5QU41TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NQ5QVI1TEeS-muvgwqy9Mw" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwQY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwQo1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_NRj-sY1TEeS-muvgwqy9Mw" dimensions="1" base_Element="_NRjXoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRtvsI1TEeS-muvgwqy9Mw" base_Element="_NRtIoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NRtvsY1TEeS-muvgwqy9Mw" base_Element="_NRtIoI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NRtvso1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NRtvs41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZVaoI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_NRxaE41TEeS-muvgwqy9Mw" base_Element="_NRwzAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NRyBI41TEeS-muvgwqy9Mw" base_Element="_NRyBII1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NRyoMY1TEeS-muvgwqy9Mw" base_Element="_NRyBJI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSDt8o1TEeS-muvgwqy9Mw" base_Element="_NSDt8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NSDt841TEeS-muvgwqy9Mw" base_Element="_NSDt8I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NSEVAI1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NSEVAY1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZZsEY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSE8EI1TEeS-muvgwqy9Mw" base_Element="_NSEVBI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NSE8EY1TEeS-muvgwqy9Mw" base_Element="_NSEVBI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NSE8Eo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NSE8E41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZZsEo1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSdWkY1TEeS-muvgwqy9Mw" base_Element="_NScvgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSfLxI1TEeS-muvgwqy9Mw" base_Element="_NSfLwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NSfy0I1TEeS-muvgwqy9Mw" base_Element="_NSfLwI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NSfy0Y1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NSfy0o1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZbhRo1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSfy1I1TEeS-muvgwqy9Mw" base_Element="_NSfy041TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NSfy1Y1TEeS-muvgwqy9Mw" base_Element="_NSfy041TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NSfy1o1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NSgZ4I1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZbhR41TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NShA8o1TEeS-muvgwqy9Mw" base_Element="_NShA8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NShA841TEeS-muvgwqy9Mw" base_Element="_NShA8I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NShA9I1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NShA9Y1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZcIUY1TEeS-muvgwqy9Mw" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_NV99kI1TEeS-muvgwqy9Mw" base_Element="_NV9WgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NV-koI1TEeS-muvgwqy9Mw" base_Element="_NV99kY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NV_LsI1TEeS-muvgwqy9Mw" base_Element="_NV-koY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWC2EY1TEeS-muvgwqy9Mw" base_Element="_NWC2EI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWDdII1TEeS-muvgwqy9Mw" base_Element="_NWC2Eo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWEEMI1TEeS-muvgwqy9Mw" base_Element="_NWDdIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWErQI1TEeS-muvgwqy9Mw" base_Element="_NWEEMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWFSUI1TEeS-muvgwqy9Mw" base_Element="_NWErQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWFSUo1TEeS-muvgwqy9Mw" base_Element="_NWFSUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWMAAI1TEeS-muvgwqy9Mw" base_Element="_NWLY8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWMnEI1TEeS-muvgwqy9Mw" base_Element="_NWMAAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWNOII1TEeS-muvgwqy9Mw" base_Element="_NWMnEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWVxAI1TEeS-muvgwqy9Mw" base_Element="_NWVJ8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NWapgY1TEeS-muvgwqy9Mw" base_Element="_NWapgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NW81AI1TEeS-muvgwqy9Mw" base_Element="_NW8N8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NW9cEY1TEeS-muvgwqy9Mw" base_Element="_NW9cEI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXBGcI1TEeS-muvgwqy9Mw" base_Element="_NXAfYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXBGcY1TEeS-muvgwqy9Mw" base_Element="_NXAfYI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXBGco1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXBGc41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZQiIY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_NXCUkI1TEeS-muvgwqy9Mw" base_Element="_NXBtgI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXF-841TEeS-muvgwqy9Mw" base_Element="_NXFX4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXGmAI1TEeS-muvgwqy9Mw" base_Element="_NXFX4I1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXGmAY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXGmAo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZRwRY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXH0JY1TEeS-muvgwqy9Mw" base_Element="_NXH0II1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXIbMI1TEeS-muvgwqy9Mw" base_Element="_NXH0II1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXIbMY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXIbMo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZSXUI1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_NXPv8I1TEeS-muvgwqy9Mw" base_Element="_NXPI4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXdyYI1TEeS-muvgwqy9Mw" base_Element="_NXdLUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXdyYY1TEeS-muvgwqy9Mw" base_Element="_NXdLUI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXdyYo1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXdyY41TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZNe0Y1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXgOoY1TEeS-muvgwqy9Mw" base_Element="_NXgOoI1TEeS-muvgwqy9Mw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_NXg1sI1TEeS-muvgwqy9Mw" name="getDirection" isAbstract="true">
      <ownedParameter xmi:id="_NXg1sY1TEeS-muvgwqy9Mw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXhcwI1TEeS-muvgwqy9Mw" base_Element="_NXg1so1TEeS-muvgwqy9Mw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_NXhcwY1TEeS-muvgwqy9Mw" name="getMagnitude" isAbstract="true">
      <ownedParameter xmi:id="_NXhcwo1TEeS-muvgwqy9Mw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXiD0I1TEeS-muvgwqy9Mw" base_Element="_NXhcw41TEeS-muvgwqy9Mw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_NXiD0Y1TEeS-muvgwqy9Mw" name="getX" isAbstract="true">
      <ownedParameter xmi:id="_NXiD0o1TEeS-muvgwqy9Mw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXiq4I1TEeS-muvgwqy9Mw" base_Element="_NXiD041TEeS-muvgwqy9Mw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_NXiq4Y1TEeS-muvgwqy9Mw" name="getY" isAbstract="true">
      <ownedParameter xmi:id="_NXiq4o1TEeS-muvgwqy9Mw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXkgE41TEeS-muvgwqy9Mw" base_Element="_NXkgEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXlHII1TEeS-muvgwqy9Mw" base_Element="_NXkgEY1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXlHIY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXlHIo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZP7EY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXlHJI1TEeS-muvgwqy9Mw" base_Element="_NXlHI41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NXluMI1TEeS-muvgwqy9Mw" base_Element="_NXlHI41TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NXluMY1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NXluMo1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZP7E41TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXoKcI1TEeS-muvgwqy9Mw" base_Element="_NXnjYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXoxgI1TEeS-muvgwqy9Mw" base_Element="_NXoKcY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXoxgo1TEeS-muvgwqy9Mw" base_Element="_NXoxgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXoxhI1TEeS-muvgwqy9Mw" base_Element="_NXoxg41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXpYkY1TEeS-muvgwqy9Mw" base_Element="_NXpYkI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXp_oI1TEeS-muvgwqy9Mw" base_Element="_NXpYko1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXp_oo1TEeS-muvgwqy9Mw" base_Element="_NXp_oY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXrNwo1TEeS-muvgwqy9Mw" base_Element="_NXrNwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXr00Y1TEeS-muvgwqy9Mw" base_Element="_NXr00I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NXr01I1TEeS-muvgwqy9Mw" base_Element="_NXr00o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXsb4I1TEeS-muvgwqy9Mw" base_Element="_NXr00o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXsb4o1TEeS-muvgwqy9Mw" base_Element="_NXsb4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXtC8I1TEeS-muvgwqy9Mw" base_Element="_NXsb441TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NXtqAY1TEeS-muvgwqy9Mw" base_Element="_NXtC8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXtqA41TEeS-muvgwqy9Mw" base_Element="_NXtC8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXuREY1TEeS-muvgwqy9Mw" base_Element="_NXtqBI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXuRFI1TEeS-muvgwqy9Mw" base_Element="_NXuREo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXu4Io1TEeS-muvgwqy9Mw" base_Element="_NXu4II1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:StyledElement xmi:id="_NXxUYY1TEeS-muvgwqy9Mw" base_Element="_NXxUYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NXx7co1TEeS-muvgwqy9Mw" base_Element="_NXx7cI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXyigo1TEeS-muvgwqy9Mw" base_Element="_NXyigI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXzwoI1TEeS-muvgwqy9Mw" base_Element="_NXzJkI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NXzwoo1TEeS-muvgwqy9Mw" base_Element="_NXzwoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX0Xso1TEeS-muvgwqy9Mw" base_Element="_NX0XsI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX0-wo1TEeS-muvgwqy9Mw" base_Element="_NX0-wI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX1l0I1TEeS-muvgwqy9Mw" base_Element="_NX0-w41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX1l0o1TEeS-muvgwqy9Mw" base_Element="_NX1l0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX2M4o1TEeS-muvgwqy9Mw" base_Element="_NX2M4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX2z8Y1TEeS-muvgwqy9Mw" base_Element="_NX2z8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX4CEI1TEeS-muvgwqy9Mw" base_Element="_NX3bAI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX4pII1TEeS-muvgwqy9Mw" base_Element="_NX4CEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NX4pI41TEeS-muvgwqy9Mw" dimensions="1" base_Element="_NX4pIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX5QMI1TEeS-muvgwqy9Mw" base_Element="_NX4pIY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX5QMo1TEeS-muvgwqy9Mw" base_Element="_NX5QMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX53QI1TEeS-muvgwqy9Mw" base_Element="_NX5QM41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX53Qo1TEeS-muvgwqy9Mw" base_Element="_NX53QY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX6eUI1TEeS-muvgwqy9Mw" base_Element="_NX53Q41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX6eUo1TEeS-muvgwqy9Mw" base_Element="_NX6eUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX7FYY1TEeS-muvgwqy9Mw" base_Element="_NX7FYI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX7scI1TEeS-muvgwqy9Mw" base_Element="_NX7FYo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX7sco1TEeS-muvgwqy9Mw" base_Element="_NX7scY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX8TgI1TEeS-muvgwqy9Mw" base_Element="_NX7sc41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX86kY1TEeS-muvgwqy9Mw" base_Element="_NX86kI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX9hoI1TEeS-muvgwqy9Mw" base_Element="_NX86ko1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX9hoo1TEeS-muvgwqy9Mw" base_Element="_NX9hoY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NX-IsI1TEeS-muvgwqy9Mw" dimensions="1" base_Element="_NX9ho41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX-IsY1TEeS-muvgwqy9Mw" base_Element="_NX9ho41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NX-vwo1TEeS-muvgwqy9Mw" base_Element="_NX-vwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX-vw41TEeS-muvgwqy9Mw" base_Element="_NX-vwI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NX_W0I1TEeS-muvgwqy9Mw" base_Element="_NX-vxI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Annotations xmi:id="_NX_W0Y1TEeS-muvgwqy9Mw" base_Element="_NX-vxI1TEeS-muvgwqy9Mw">
    <annotations xmi:id="_NX_W0o1TEeS-muvgwqy9Mw" name="SuppressWarnings">
      <annotationParameters xmi:id="_NX_94I1TEeS-muvgwqy9Mw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_NZbhRY1TEeS-muvgwqy9Mw" value="&quot;rawtypes&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_NYAk8I1TEeS-muvgwqy9Mw" dimensions="1" base_Element="_NX_94Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NYAk9I1TEeS-muvgwqy9Mw" base_Element="_NYAk8o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYE2YY1TEeS-muvgwqy9Mw" base_Element="_NYE2YI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYFdcI1TEeS-muvgwqy9Mw" base_Element="_NYE2Yo1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYFdco1TEeS-muvgwqy9Mw" base_Element="_NYFdcY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYGEgI1TEeS-muvgwqy9Mw" base_Element="_NYFdc41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYGEgo1TEeS-muvgwqy9Mw" base_Element="_NYGEgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYGrkY1TEeS-muvgwqy9Mw" base_Element="_NYGrkI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYHSoY1TEeS-muvgwqy9Mw" base_Element="_NYHSoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NYH5so1TEeS-muvgwqy9Mw" base_Element="_NYH5sI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYIgwI1TEeS-muvgwqy9Mw" base_Element="_NYH5sI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NYIgw41TEeS-muvgwqy9Mw" base_Element="_NYIgwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYJH0I1TEeS-muvgwqy9Mw" base_Element="_NYIgwY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NYJH041TEeS-muvgwqy9Mw" base_Element="_NYJH0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYJH1I1TEeS-muvgwqy9Mw" base_Element="_NYJH0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYJu4Y1TEeS-muvgwqy9Mw" base_Element="_NYJu4I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Array xmi:id="_NYJu5I1TEeS-muvgwqy9Mw" base_Element="_NYJu4o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NYKV8I1TEeS-muvgwqy9Mw" base_Element="_NYJu4o1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZsnAI1TEeS-muvgwqy9Mw" base_Element="_NZr_8I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZtOEI1TEeS-muvgwqy9Mw" base_Element="_NZsnAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZtOE41TEeS-muvgwqy9Mw" base_Element="_NZtOEY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZt1II1TEeS-muvgwqy9Mw" base_Element="_NZtOFI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZucMI1TEeS-muvgwqy9Mw" base_Element="_NZt1IY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZucM41TEeS-muvgwqy9Mw" base_Element="_NZucMY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZvDQI1TEeS-muvgwqy9Mw" base_Element="_NZucNI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZvqUI1TEeS-muvgwqy9Mw" base_Element="_NZvDQY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZvqU41TEeS-muvgwqy9Mw" base_Element="_NZvqUY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZwRYI1TEeS-muvgwqy9Mw" base_Element="_NZvqVI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZw4cI1TEeS-muvgwqy9Mw" base_Element="_NZwRYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZw4c41TEeS-muvgwqy9Mw" base_Element="_NZw4cY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZxfgI1TEeS-muvgwqy9Mw" base_Element="_NZw4dI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZyGkI1TEeS-muvgwqy9Mw" base_Element="_NZxfgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZyGk41TEeS-muvgwqy9Mw" base_Element="_NZyGkY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZytoo1TEeS-muvgwqy9Mw" base_Element="_NZytoI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZzUsI1TEeS-muvgwqy9Mw" base_Element="_NZyto41TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZz7wI1TEeS-muvgwqy9Mw" base_Element="_NZzUsY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ0i0I1TEeS-muvgwqy9Mw" base_Element="_NZz7wY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ0i041TEeS-muvgwqy9Mw" base_Element="_NZ0i0Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ1J4I1TEeS-muvgwqy9Mw" base_Element="_NZ0i1I1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ1w8I1TEeS-muvgwqy9Mw" base_Element="_NZ1J4Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ2YAI1TEeS-muvgwqy9Mw" base_Element="_NZ1w8Y1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ2_EI1TEeS-muvgwqy9Mw" base_Element="_NZ2YAY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ3mII1TEeS-muvgwqy9Mw" base_Element="_NZ2_EY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ4NMo1TEeS-muvgwqy9Mw" base_Element="_NZ4NMI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ40Qo1TEeS-muvgwqy9Mw" base_Element="_NZ40QI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ6CYI1TEeS-muvgwqy9Mw" base_Element="_NZ5bUI1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ7QgI1TEeS-muvgwqy9Mw" base_Element="_NZ6CYY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Reference xmi:id="_NZ73kI1TEeS-muvgwqy9Mw" base_Element="_NZ7QgY1TEeS-muvgwqy9Mw"/>
  <UMLLabProfile:Patch xmi:id="_TIrjEI1TEeS-muvgwqy9Mw" base_Element="_LqTtAY1TEeS-muvgwqy9Mw" patchText="@@ -80,128 +80,8 @@&#xA; 2D %7B&#xA;-%0A        private double direction;%0A        private double magnitude;%0A        private double x;%0A        private double y;&#xA; %0A%0A  &#xA;@@ -1059,32 +1059,84 @@&#xA; tends Vector2D %7B&#xA;+%0A        private double x;%0A        private double y;&#xA; %0A%0A        public&#xA;@@ -2835,24 +2835,92 @@&#xA; s Vector2D %7B&#xA;+%0A        private double direction;%0A        private double magnitude;&#xA; %0A%0A        pu&#xA;" conflicting="false"/>
</xmi:XMI>
